[Fragment(document_cs='006cfd4cf69912c6bee741e58d8ea755d3e8d6ac2c013716c3887b87f7a9f63e',
          id=1,
          lineno=37,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='RenderTarget',
          body='class RenderTarget'),
 Fragment(document_cs='006cfd4cf69912c6bee741e58d8ea755d3e8d6ac2c013716c3887b87f7a9f63e',
          id=2,
          lineno=44,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='006cfd4cf69912c6bee741e58d8ea755d3e8d6ac2c013716c3887b87f7a9f63e',
          id=3,
          lineno=69,
          tokens=11,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='draw',
          body='draw(RenderTarget& target, RenderStates states) const'),
 Fragment(document_cs='006cfd4cf69912c6bee741e58d8ea755d3e8d6ac2c013716c3887b87f7a9f63e',
          id=4,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DRAWABLE_HPP',
          body='#define SFML_DRAWABLE_HPP'),
 Fragment(document_cs='006cfd4cf69912c6bee741e58d8ea755d3e8d6ac2c013716c3887b87f7a9f63e',
          id=5,
          lineno=1,
          tokens=25,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: RenderTarget SFML_GRAPHICS_API\n'
               '  Macros: SFML_DRAWABLE_HPP\n'
               '  Functions: draw\n'),
 Fragment(document_cs='00fb1b066ed1b56261b2dd48537d8fecc634ca4e0b96b9fb2836c35b11218f64',
          id=6,
          lineno=1,
          tokens=162,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Arrays\n'
               '\n'
               '1. Write a program to display an array.\n'
               '2. Write a program to find average of array elements.\n'
               '3. Write a program to merge to sorted arrays.\n'
               '    ```\n'
               '    a1[10] = [25, 27, 32, 98]\n'
               '    a2[10] = [12, 23, 28, 51, 72, 85, 97]\n'
               '    then a3[20] should be equal to = [12, 23, 25, 27, 28, 32, '
               '51, 72, 85, 97, 98]\n'
               '    ```\n'
               '4. Write a program to insert an element to an array.\n'
               '5. Write a program to delete an element from an array.'),
 Fragment(document_cs='00fb1b066ed1b56261b2dd48537d8fecc634ca4e0b96b9fb2836c35b11218f64',
          id=7,
          lineno=1,
          tokens=7,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Arrays\n'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=8,
          lineno=13,
          tokens=191,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='F_Password_Val()void F_Password_Val() {\n'
               '\tPassword_Val = "";\n'
               '\tParol_Sign = "";\n'
               '\tcout << "\\t\\t\\t\\t\\tPassword : ";\n'
               '\tfor (int i = 0; i != 1;) {\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "1";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 50: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "2";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 51: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "3";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 52: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "4";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 53: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "5";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 54: {\n'
               '\t'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=9,
          lineno=40,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='\t\tcout << "*"; Password_Val = Password_Val + "6";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 55: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "7";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "8";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 57: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "9";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 48: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "0";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 81: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "Q";\n'
               '\t\t}\n'
               '\t\t\t   brea'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=10,
          lineno=62,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='k;\n'
               '\t\tcase 87: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "W";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 69: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "E";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 82: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "R";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 84: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "T";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 89: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "Y";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 85: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "U'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=11,
          lineno=84,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 73: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "I";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 79: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "O";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 80: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "P";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 65: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "A";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 83: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "S";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 68: {\n'
               '\t\t\tcout << "*"; Password_Val = P'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=12,
          lineno=108,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='assword_Val + "D";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 70: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "F";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 71: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "G";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 72: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "H";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 74: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "J";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 75: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "K";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 76: {\n'
               '\t\t\tcout << "*";'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=13,
          lineno=132,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body=' Password_Val = Password_Val + "L";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 90: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "Z";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 88: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "X";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 67: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "C";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 86: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "V";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 66: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "B";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 78: '),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=14,
          lineno=155,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='{\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "N";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 77: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "M";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 97: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "a";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 98: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "b";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 99: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "c";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 100: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "d";\n'
               '\t\t}\n'
               '\t\t\t\tbr'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=15,
          lineno=178,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='eak;\n'
               '\t\tcase 101: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "e";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 102: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "f";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 103: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "g";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 104: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "h";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 105: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "i";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 106: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "j";\n'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=16,
          lineno=201,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 107: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "k";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 108: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "l";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 109: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "m";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 110: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "n";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 111: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "o";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 112: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=17,
          lineno=224,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='Val + "p";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 113: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "q";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 114: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "r";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 115: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "s";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 116: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "t";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 117: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "u";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 118: {\n'
               '\t\t\tcout << "*"; Password_Val '),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=18,
          lineno=248,
          tokens=154,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='= Password_Val + "v";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 119: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "w";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 120: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "x";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 121: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "y";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 122: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "z";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 123: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "{";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 124: {\n'
               '\t\t\tcout << "*"; Pa'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=19,
          lineno=272,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='ssword_Val = Password_Val + "|";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 125: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "}";\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\tcase 33: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "!";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 36: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "$";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 37: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "%";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 38: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "&";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 39: {\n'
               '\t\t\tco'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=20,
          lineno=296,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='ut << "*"; Password_Val = Password_Val + "\'";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 40: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "(";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 41: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + ")";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 42: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "*";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 43: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "+";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 44: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + ",";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=21,
          lineno=319,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='\tcase 45: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "-";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 46: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + ".";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 47: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "/";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 58: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + ":";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 59: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + ";";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 60: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "<";\n'
               '\t\t'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=22,
          lineno=341,
          tokens=217,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='}\n'
               '\t\t\t   break;\n'
               '\t\tcase 61: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "=";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 62: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + ">";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 63: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "?";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 95: {\n'
               '\t\t\tcout << "*"; Password_Val = Password_Val + "_";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\n'
               '\t\tcase 8: { // Deleting character\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                              '
               '\\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t          Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tLogin    : "; cout << Login_Sign '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tPassword : ";\n'
               '\t\t\tLength_Val = Password_Val.length();\n'
               '\t\t\tLength_Val--;\n'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=23,
          lineno=371,
          tokens=101,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Password_Val',
          body='\t\t\tfor (int j = 0; j < Length_Val; j++) {\n'
               '\t\t\t\tLetter_Val = Password_Val[j];\n'
               '\t\t\t\tChange_Val = Change_Val + Letter_Val;\n'
               '\t\t\t\tcout << "*";\n'
               '\t\t\t}\n'
               '\t\t\tPassword_Val = Change_Val;\n'
               '\t\t\tChange_Val = "";\n'
               '\t\t}\n'
               '\t\t\t  break;\n'
               '\t\tcase 13: { // Entering Password_Val \n'
               '\t\t\ti = 1;\n'
               '\t\t\tChange_Val = "";\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t}\n'
               '\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=24,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=25,
          lineno=10,
          tokens=4,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Letter_Val',
          body='char Letter_Val;'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=26,
          lineno=10,
          tokens=4,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Length_Val',
          body='int Length_Val;'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=27,
          lineno=10,
          tokens=7,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Password_Val',
          body='string Password_Val, Change_Val;'),
 Fragment(document_cs='03cb01f5f3afa5c93d1c08828d68b538de25f6ac9318fd1aadf578f8bbbada2b',
          id=28,
          lineno=1,
          tokens=22,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Password_Val\n'
               '  Variables: Length_Val Letter_Val Password_Val\n'
               '  Using: std\n'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=29,
          lineno=7,
          tokens=95,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Person',
          body='class Person\n'
               '{\n'
               'private:\n'
               '\tstring name;\n'
               '\tint age;\n'
               '\n'
               'public:\n'
               '\tPerson()\n'
               '\t{ // default constructor\n'
               '\t\tage = 17;\n'
               '\t\tname = "Rustam";\n'
               '\t}\n'
               '\tPerson(int x)\n'
               '\t{\n'
               '\t\tage = x;\n'
               '\t\tname = "Rustam";\n'
               '\t}\n'
               '\tvoid Display()\n'
               '\t{\n'
               '\t\tcout << "Name: " << name << endl;\n'
               '\t\tcout << "Age: " << age << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=30,
          lineno=32,
          tokens=218,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Records',
          body='class Records\n'
               '{\n'
               'private:\n'
               '\tstring name;\n'
               '\tfloat salary;\n'
               '\tstring date_of_birth;\n'
               '\n'
               'public:\n'
               '\tRecords()\n'
               '\t{\n'
               '\t\tname = "Rustam";\n'
               '\t\tsalary = 1234;\n'
               '\t\tdate_of_birth = "12.34.5678";\n'
               '\t}\n'
               '\tRecords(string name1, float salary1, string date_of_birth1)\n'
               '\t{\n'
               '\t\tname = name1;\n'
               '\t\tsalary = salary1;\n'
               '\t\tdate_of_birth = date_of_birth1;\n'
               '\t}\n'
               '\tvoid Display()\n'
               '\t{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Name: " << name << endl;\n'
               '\t\tcout << "Salary: " << salary << endl;\n'
               '\t\tcout << "Date of Birth: " << date_of_birth << endl;\n'
               '\t}\n'
               '\tvoid alert_name()\n'
               '\t{\n'
               '\t\tcout << "New name: ";\n'
               '\t\tcin >> name;\n'
               '\t}\n'
               '\tvoid alert_salary()\n'
               '\t{\n'
               '\t\tcout << "New salary: ";\n'
               '\t\tcin >> salary;\n'
               '\t}\n'
               '\tvoid alert_date()\n'
               '\t{\n'
               '\t\tcout << "New Date of Birth: ";\n'
               '\t\tcin >> date_of_birth;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=31,
          lineno=77,
          tokens=122,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Account',
          body='class Account\n'
               '{\n'
               'public:\n'
               '\tAccount()\n'
               '\t{\n'
               '\t\tcout << "Object is being Created" << endl;\n'
               '\t\tname = "Rustam";\n'
               '\t\tnumber = "123456789";\n'
               '\t\tbalance = 12345;\n'
               '\t}\n'
               '\t~Account()\n'
               '\t{\n'
               '\t\tcout << "Object is being Deleted" << endl;\n'
               '\t}\n'
               '\tvoid Display()\n'
               '\t{\n'
               '\t\tcout << "Name: " << name << endl\n'
               '\t\t\t << "Number: " << number << endl\n'
               '\t\t\t << "Balance: " << balance << endl;\n'
               '\t}\n'
               '\n'
               'private:\n'
               '\tstring name;\n'
               '\tstring number;\n'
               '\tfloat balance;\n'
               '}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=32,
          lineno=105,
          tokens=148,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Rectangle',
          body='class Rectangle\n'
               '{\n'
               'private:\n'
               '\tdouble height;\n'
               '\tdouble width;\n'
               '\n'
               'public:\n'
               '\tRectangle()\n'
               '\t{\n'
               '\t\theight = 5;\n'
               '\t\twidth = 5;\n'
               '\t}\n'
               '\n'
               '\tRectangle(double height2, double width2)\n'
               '\t{\n'
               '\t\theight = height2;\n'
               '\t\twidth = width2;\n'
               '\t}\n'
               '\tvoid setHeight(double a)\n'
               '\t{\n'
               '\t\theight = a;\n'
               '\t}\n'
               '\tdouble getHeight()\n'
               '\t{\n'
               '\t\treturn height;\n'
               '\t}\n'
               '\tvoid setWidth(double b)\n'
               '\t{\n'
               '\t\twidth = b;\n'
               '\t}\n'
               '\tdouble getWidht()\n'
               '\t{\n'
               '\t\treturn width;\n'
               '\t}\n'
               '\tdouble getArea()\n'
               '\t{\n'
               '\t\treturn width * height;\n'
               '\t}\n'
               '\tdouble getPerimeter()\n'
               '\t{\n'
               '\t\treturn 2 * (width + height);\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=33,
          lineno=10,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=34,
          lineno=11,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='age',
          body='int age;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=35,
          lineno=35,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=36,
          lineno=36,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='salary',
          body='float salary;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=37,
          lineno=37,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='date_of_birth',
          body='string date_of_birth;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=38,
          lineno=99,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=39,
          lineno=100,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='number',
          body='string number;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=40,
          lineno=101,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='balance',
          body='float balance;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=41,
          lineno=108,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='height',
          body='double height;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=42,
          lineno=109,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='width',
          body='double width;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=43,
          lineno=14,
          tokens=27,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Person',
          body='Person()Person()\n'
               '\t{ // default constructor\n'
               '\t\tage = 17;\n'
               '\t\tname = "Rustam";\n'
               '\t}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=44,
          lineno=19,
          tokens=26,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Person',
          body='Person(int x)\n'
               '\t{\n'
               '\t\tage = x;\n'
               '\t\tname = "Rustam";\n'
               '\t}Person(int x)'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=45,
          lineno=40,
          tokens=35,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Records',
          body='Records()\n'
               '\t{\n'
               '\t\tname = "Rustam";\n'
               '\t\tsalary = 1234;\n'
               '\t\tdate_of_birth = "12.34.5678";\n'
               '\t}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=46,
          lineno=40,
          tokens=2,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Records',
          body='Records()'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=47,
          lineno=46,
          tokens=15,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Records',
          body='Records(string name1, float salary1, string date_of_birth1)'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=48,
          lineno=46,
          tokens=42,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Records',
          body='Records(string name1, float salary1, string date_of_birth1)\n'
               '\t{\n'
               '\t\tname = name1;\n'
               '\t\tsalary = salary1;\n'
               '\t\tdate_of_birth = date_of_birth1;\n'
               '\t}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=49,
          lineno=80,
          tokens=44,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Account',
          body='Account()\n'
               '\t{\n'
               '\t\tcout << "Object is being Created" << endl;\n'
               '\t\tname = "Rustam";\n'
               '\t\tnumber = "123456789";\n'
               '\t\tbalance = 12345;\n'
               '\t}Account()'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=50,
          lineno=112,
          tokens=54,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Rectangle',
          body='Rectangle()\n'
               '\t{\n'
               '\t\theight = 5;\n'
               '\t\twidth = 5;\n'
               '\t}Rectangle()Rectangle(double height2, double width2)\n'
               '\t{\n'
               '\t\theight = height2;\n'
               '\t\twidth = width2;\n'
               '\t}Rectangle(double height2, double width2)'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=51,
          lineno=149,
          tokens=65,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='void main_menu_view()\n'
               '{\n'
               '\tcout << "Main menu: \\n";\n'
               '\tcout << "[1] Person\'s info\\n";\n'
               '\tcout << "[2] Records\\n";\n'
               '\tcout << "[3] Account\\n";\n'
               '\tcout << "[4] Triangle\\n";\n'
               '\tcout << "[0] Exit\\n";\n'
               '\tcout << "Your Choice: ";\n'
               '}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=52,
          lineno=149,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='main_menu_view()'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=53,
          lineno=160,
          tokens=242,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\n'
               '\tstring user_choise;\n'
               '\tmain_menu_view();\n'
               '\tcin >> user_choise;\n'
               '\n'
               '\t// main_menu_validation_check\n'
               '\tif (user_choise == "1")\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tint x;\n'
               '\t\tcout << "Input Age: ";\n'
               '\t\tcin >> x;\n'
               '\t\tPerson person1, person2(x);\n'
               '\t\tperson1.Display();\n'
               '\t\tcout << endl;\n'
               '\t\tperson2.Display();\n'
               '\t}\n'
               '\telse if (user_choise == "2")\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Records: " << endl;\n'
               '\t\tstring name;\n'
               '\t\tfloat salary;\n'
               '\t\tstring date_of_birth;\n'
               '\t\tcout << "Name: ";\n'
               '\t\tcin >> name;\n'
               '\t\tcout << "Salary: ";\n'
               '\t\tcin >> salary;\n'
               '\t\tcout << "Date of birth: ";\n'
               '\t\tcin >> date_of_birth;\n'
               '\n'
               '\t\tRecords record1, record2(name, salary, date_of_birth);\n'
               '\t\trecord1.Display();\n'
               '\t\trecord2.Display();\n'
               '\t\tcout << endl;\n'
               '\n'
               '\t\tRecords *ptr = &record1;\n'
               '\t\tptr->alert_name();\n'
               '\t\tptr->alert_salary();\n'
               '\t\tptr->alert_date();\n'
               '\n'
               '\t\trecord1.Display();\n'
               '\t\trecord2.Display();\n'
               '\t}\n'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=54,
          lineno=160,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=55,
          lineno=174,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='person2',
          body='person2(x)'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=56,
          lineno=193,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='record2',
          body='record2(name, salary, date_of_birth)'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=57,
          lineno=206,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\telse if (user_choise == "3")\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tAccount a;\n'
               '\t\ta.Display();\n'
               '\t\ta.~Account();\n'
               '\t}\n'
               '\telse if (user_choise == "4")\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tRectangle r;\n'
               '\t\tdouble width1, height1;\n'
               '\n'
               '\t\tcout << "Enter the width fo the rectangle: ";\n'
               '\t\tcin >> width1;\n'
               '\t\tcout << "Enter the height fo the rectangle: ";\n'
               '\t\tcin >> height1;\n'
               '\n'
               '\t\tRectangle r2(height1, width1);\n'
               '\n'
               '\t\tr2.setHeight(height1);\n'
               '\t\tr2.setWidth(width1);\n'
               '\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t\tint user_choice_1;\n'
               '\t\t/*int qwerty;\n'
               '\t\tcin >> qwerty;*/\n'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=58,
          lineno=234,
          tokens=232,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\twhile (user_choice_1 >= 1)\n'
               '\t\t{\n'
               '\t\t\tcout << "Rectangle: \\n";\n'
               '\t\t\tcout << "[1]  Area\\n";\n'
               '\t\t\tcout << "[2]  Perimeter\\n";\n'
               '\t\t\tcout << "[0]  Exit\\n";\n'
               '\t\t\tcin >> user_choice_1;\n'
               '\t\t\tswitch (user_choice_1)\n'
               '\t\t\t{\n'
               '\t\t\tcase 1:\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "The Area is: (Default Constructor (5,5)) : " '
               '<< r.getArea() << endl\n'
               '\t\t\t\t\t << endl;\n'
               '\t\t\t\tcout << "The Area is: (Parametric Constructor) : " << '
               'r2.getArea() << endl;\n'
               '\t\t\t\tcout << endl;\n'
               '\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase 2:\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "The Perimeter is: (Default Constructor(5,5) : '
               '" << r.getPerimeter() << endl\n'
               '\t\t\t\t\t << endl;\n'
               '\t\t\t\tcout << "The Perimeter is: (Parametric Constructor) : '
               '" << r2.getPerimeter() << endl;\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase 0:\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t}\n'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=59,
          lineno=262,
          tokens=50,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\telse if (user_choise == "0")\n'
               '\t{\n'
               '\t\treturn 0;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please try again !!!\\n";\n'
               '\t\tmain();\n'
               '\t}\n'
               '\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=60,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=61,
          lineno=163,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='user_choise',
          body='string user_choise;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=62,
          lineno=174,
          tokens=8,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='person1',
          body='Person person1, person2(x);'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=63,
          lineno=183,
          tokens=3,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=64,
          lineno=184,
          tokens=3,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='salary',
          body='float salary;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=65,
          lineno=185,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='date_of_birth',
          body='string date_of_birth;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=66,
          lineno=193,
          tokens=14,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='record1',
          body='Records record1, record2(name, salary, date_of_birth);'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=67,
          lineno=217,
          tokens=7,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='width1',
          body='double width1, height1;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=68,
          lineno=231,
          tokens=6,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='user_choice_1',
          body='int user_choice_1;'),
 Fragment(document_cs='03ee3702522f5d6df9cf9eb7a52d9dca078cd0aeecb0393431e62da2b3ac6bf1',
          id=69,
          lineno=1,
          tokens=66,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Account Person Records Rectangle\n'
               '  Functions: Account Person Records Rectangle main '
               'main_menu_view person2 record2\n'
               '  Fields: age balance date_of_birth height name number salary '
               'width\n'
               '  Variables: date_of_birth name person1 record1 salary '
               'user_choice_1 user_choise width1\n'
               '  Using: std\n'),
 Fragment(document_cs='04633219d7cc8dae6aef209712f9e08106827abfaae9ca70dc2c8bd24e50d978',
          id=70,
          lineno=38,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Context',
          body='class Context'),
 Fragment(document_cs='04633219d7cc8dae6aef209712f9e08106827abfaae9ca70dc2c8bd24e50d978',
          id=71,
          lineno=46,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='04633219d7cc8dae6aef209712f9e08106827abfaae9ca70dc2c8bd24e50d978',
          id=72,
          lineno=79,
          tokens=5,
          depth=6,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='04633219d7cc8dae6aef209712f9e08106827abfaae9ca70dc2c8bd24e50d978',
          id=73,
          lineno=73,
          tokens=13,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='registerContextDestroyCallback',
          body='registerContextDestroyCallback(ContextDestroyCallback '
               'callback, void* arg)'),
 Fragment(document_cs='04633219d7cc8dae6aef209712f9e08106827abfaae9ca70dc2c8bd24e50d978',
          id=74,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GLRESOURCE_HPP',
          body='#define SFML_GLRESOURCE_HPP'),
 Fragment(document_cs='04633219d7cc8dae6aef209712f9e08106827abfaae9ca70dc2c8bd24e50d978',
          id=75,
          lineno=1,
          tokens=26,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Context SFML_WINDOW_API\n'
               '  Macros: SFML_GLRESOURCE_HPP\n'
               '  Functions: registerContextDestroyCallback\n'),
 Fragment(document_cs='0516dd350931e7a2955f036ed017b6f49130de5674487810fd8fae9528f1fece',
          id=76,
          lineno=4,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint a[10];\n'
               '\t// input the arrays\n'
               '\tcout << "Input an Array Elements. " << endl;\n'
               '\tfor (int i = 0; i < 10; i++)\n'
               '\t{\n'
               '\t\tcout << "array element [ " << i << " ] ";\n'
               '\t\tcin >> a[i];\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tdouble sum = 0;\n'
               '\t// sum the elements of the array\n'
               '\tfor (int i = 0; i < 10; i++)\n'
               '\t{\n'
               '\t\tsum += a[i];\n'
               '\t}\n'
               '\tdouble average;\n'
               '\t// finding the elements of the array\n'
               '\taverage = sum / 10;\n'
               '\tcout << "Average of array elements: " << average << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='0516dd350931e7a2955f036ed017b6f49130de5674487810fd8fae9528f1fece',
          id=77,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='0516dd350931e7a2955f036ed017b6f49130de5674487810fd8fae9528f1fece',
          id=78,
          lineno=21,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='average',
          body='double average;'),
 Fragment(document_cs='0516dd350931e7a2955f036ed017b6f49130de5674487810fd8fae9528f1fece',
          id=79,
          lineno=1,
          tokens=15,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Variables: average\n  Using: std\n'),
 Fragment(document_cs='06220bfaa09ba6b5dc20a346a7128d0caf3280ac03b10d102af766694b7510d2',
          id=80,
          lineno=1,
          tokens=54,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='Rustam\n'
               '974060656\n'
               'Rustam202\n'
               'Rustam202\n'
               'Alimov\n'
               '974056585\n'
               'Alimov808\n'
               'Alimov808\n'
               'Rustam\n'
               '974060656\n'
               'Rusam8\n'
               'Rustam808\n'),
 Fragment(document_cs='06220bfaa09ba6b5dc20a346a7128d0caf3280ac03b10d102af766694b7510d2',
          id=81,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=82,
          lineno=49,
          tokens=116,
          depth=5,
          parent_id=None,
          category='enum',
          summary=False,
          name='Factor',
          body='enum Factor\n'
               '    {\n'
               '        Zero,             ///< (0, 0, 0, 0)\n'
               '        One,              ///< (1, 1, 1, 1)\n'
               '        SrcColor,         ///< (src.r, src.g, src.b, src.a)\n'
               '        OneMinusSrcColor, ///< (1, 1, 1, 1) - (src.r, src.g, '
               'src.b, src.a)\n'
               '        DstColor,         ///< (dst.r, dst.g, dst.b, dst.a)\n'
               '        OneMinusDstColor'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=83,
          lineno=56,
          tokens=135,
          depth=5,
          parent_id=None,
          category='enum',
          summary=False,
          name='Factor',
          body=', ///< (1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)\n'
               '        SrcAlpha,         ///< (src.a, src.a, src.a, src.a)\n'
               '        OneMinusSrcAlpha, ///< (1, 1, 1, 1) - (src.a, src.a, '
               'src.a, src.a)\n'
               '        DstAlpha,         ///< (dst.a, dst.a, dst.a, dst.a)\n'
               '        OneMinusDstAlpha  ///< (1, 1, 1, 1) - (dst.a, dst.a, '
               'dst.a, dst.a)\n'
               '    }'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=84,
          lineno=69,
          tokens=64,
          depth=5,
          parent_id=None,
          category='enum',
          summary=False,
          name='Equation',
          body='enum Equation\n'
               '    {\n'
               '        Add,            ///< Pixel = Src * SrcFactor + Dst * '
               'DstFactor\n'
               '        Subtract,       ///< Pixel = Src * SrcFactor - Dst * '
               'DstFactor\n'
               '        ReverseSubtract ///< Pixel = Dst * DstFactor - Src * '
               'SrcFactor\n'
               '    }'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=85,
          lineno=95,
          tokens=55,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='BlendMode',
          body='BlendMode(Factor sourceFactor, Factor destinationFactor, '
               'Equation blendEquation = Add)BlendMode(Factor '
               'colorSourceFactor, Factor colorDestinationFactor,\n'
               '              Equation colorBlendEquation, Factor '
               'alphaSourceFactor,\n'
               '              Factor alphaDestinationFactor, Equation '
               'alphaBlendEquation)'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=86,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_BLENDMODE_HPP',
          body='#define SFML_BLENDMODE_HPP'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=87,
          lineno=41,
          tokens=6,
          depth=4,
          parent_id=None,
          category='struct',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='struct SFML_GRAPHICS_API'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=88,
          lineno=115,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='colorSrcFactor',
          body='Factor   colorSrcFactor;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=89,
          lineno=116,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='colorDstFactor',
          body='Factor   colorDstFactor;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=90,
          lineno=117,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='colorEquation',
          body='Equation colorEquation;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=91,
          lineno=118,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='alphaSrcFactor',
          body='Factor   alphaSrcFactor;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=92,
          lineno=119,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='alphaDstFactor',
          body='Factor   alphaDstFactor;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=93,
          lineno=120,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='alphaEquation',
          body='Equation alphaEquation;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=94,
          lineno=150,
          tokens=11,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='BlendAlpha',
          body='SFML_GRAPHICS_API extern const BlendMode BlendAlpha;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=95,
          lineno=151,
          tokens=11,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='BlendMode',
          body='SFML_GRAPHICS_API extern const BlendMode BlendAdd;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=96,
          lineno=152,
          tokens=11,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='BlendMultiply',
          body='SFML_GRAPHICS_API extern const BlendMode BlendMultiply;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=97,
          lineno=153,
          tokens=11,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='BlendMode',
          body='SFML_GRAPHICS_API extern const BlendMode BlendNone;'),
 Fragment(document_cs='06eca2f8eeb23c4f279fefdc880a0f3d517512889a2c36a9a2c782b62fab741d',
          id=98,
          lineno=1,
          tokens=59,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Structs: SFML_GRAPHICS_API\n'
               '  Enums: Equation Factor\n'
               '  Macros: SFML_BLENDMODE_HPP\n'
               '  Functions: BlendMode\n'
               '  Variables: BlendAlpha BlendMode BlendMultiply alphaDstFactor '
               'alphaEquation alphaSrcFactor colorDstFactor colorEquation '
               'colorSrcFactor\n'),
 Fragment(document_cs='0ba206269a008072790764eba60a347e11b5dd8bd401ec5d5c719394a8c2ab8d',
          id=99,
          lineno=1,
          tokens=218,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='#----------------------------------------------------------------\n'
               '# Generated CMake target import file for configuration '
               '"Debug".\n'
               '#----------------------------------------------------------------\n'
               '\n'
               '# Commands may need to know the format version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION 1)\n'
               '\n'
               '# Import target "sfml-system" for configuration "Debug"\n'
               'set_property(TARGET sfml-system APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-system PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-system-s-d.lib"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-system )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-system '
               '"${_IMPORT_PREFIX}/lib/sfml-system-s-d.lib" )\n'
               '\n'
               '# Import target "sfml-main" for configuration "Debug"\n'
               'set_property(TARGET sfml-main APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-main PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-main-d.lib"\n'
               '  )\n'),
 Fragment(document_cs='0ba206269a008072790764eba60a347e11b5dd8bd401ec5d5c719394a8c2ab8d',
          id=100,
          lineno=24,
          tokens=222,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-main )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-main '
               '"${_IMPORT_PREFIX}/lib/sfml-main-d.lib" )\n'
               '\n'
               '# Import target "sfml-window" for configuration "Debug"\n'
               'set_property(TARGET sfml-window APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-window PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-window-s-d.lib"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-window )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-window '
               '"${_IMPORT_PREFIX}/lib/sfml-window-s-d.lib" )\n'
               '\n'
               '# Import target "sfml-network" for configuration "Debug"\n'
               'set_property(TARGET sfml-network APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-network PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-network-s-d.lib"\n'
               '  )\n'),
 Fragment(document_cs='0ba206269a008072790764eba60a347e11b5dd8bd401ec5d5c719394a8c2ab8d',
          id=101,
          lineno=44,
          tokens=234,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-network )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-network '
               '"${_IMPORT_PREFIX}/lib/sfml-network-s-d.lib" )\n'
               '\n'
               '# Import target "sfml-graphics" for configuration "Debug"\n'
               'set_property(TARGET sfml-graphics APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-graphics PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics-s-d.lib"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-graphics )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-graphics '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics-s-d.lib" )\n'
               '\n'
               '# Import target "sfml-audio" for configuration "Debug"\n'
               'set_property(TARGET sfml-audio APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-audio PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-audio-s-d.lib"\n'
               '  )\n'),
 Fragment(document_cs='0ba206269a008072790764eba60a347e11b5dd8bd401ec5d5c719394a8c2ab8d',
          id=102,
          lineno=64,
          tokens=62,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-audio )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-audio '
               '"${_IMPORT_PREFIX}/lib/sfml-audio-s-d.lib" )\n'
               '\n'
               '# Commands beyond this point should not need to know the '
               'version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION)\n'),
 Fragment(document_cs='0ba206269a008072790764eba60a347e11b5dd8bd401ec5d5c719394a8c2ab8d',
          id=103,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=104,
          lineno=38,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Shader',
          body='class Shader'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=105,
          lineno=39,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Texture',
          body='class Texture'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=106,
          lineno=45,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=107,
          lineno=69,
          tokens=47,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='RenderStates',
          body='RenderStates(const BlendMode& theBlendMode)RenderStates(const '
               'BlendMode& theBlendMode, const Transform& theTransform,\n'
               '                 const Texture* theTexture, const Shader* '
               'theShader)RenderStates(const Transform& theTransform)'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=108,
          lineno=85,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='RenderStates',
          body='RenderStates(const Texture* theTexture)RenderStates(const '
               'Shader* theShader)'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=109,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_RENDERSTATES_HPP',
          body='#define SFML_RENDERSTATES_HPP'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=110,
          lineno=110,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Default',
          body='static const RenderStates Default;'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=111,
          lineno=115,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='blendMode',
          body='BlendMode      blendMode;'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=112,
          lineno=116,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='transform',
          body='Transform      transform;'),
 Fragment(document_cs='0bbd5b8efaf7a8ca383442dedb3312931803cd0a47def4e87d2bb88e792d63ae',
          id=113,
          lineno=1,
          tokens=35,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API Shader Texture\n'
               '  Macros: SFML_RENDERSTATES_HPP\n'
               '  Functions: RenderStates\n'
               '  Variables: Default blendMode transform\n'),
 Fragment(document_cs='0e4c11951c92e6961af2d309957c8e3bae22c25db94817757a86369751d88b8c',
          id=114,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GRAPHICS_EXPORT_HPP',
          body='#define SFML_GRAPHICS_EXPORT_HPP'),
 Fragment(document_cs='0e4c11951c92e6961af2d309957c8e3bae22c25db94817757a86369751d88b8c',
          id=115,
          lineno=39,
          tokens=10,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='#define SFML_GRAPHICS_API SFML_API_EXPORT'),
 Fragment(document_cs='0e4c11951c92e6961af2d309957c8e3bae22c25db94817757a86369751d88b8c',
          id=116,
          lineno=43,
          tokens=10,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='#define SFML_GRAPHICS_API SFML_API_IMPORT'),
 Fragment(document_cs='0e4c11951c92e6961af2d309957c8e3bae22c25db94817757a86369751d88b8c',
          id=117,
          lineno=1,
          tokens=15,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_GRAPHICS_API SFML_GRAPHICS_EXPORT_HPP\n'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=118,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=119,
          lineno=61,
          tokens=21,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='VideoMode',
          body='VideoMode(unsigned int modeWidth, unsigned int modeHeight, '
               'unsigned int modeBitsPerPixel = 32)'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=120,
          lineno=69,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDesktopMode',
          body='getDesktopMode()'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=121,
          lineno=85,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getFullscreenModes',
          body='getFullscreenModes()'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=122,
          lineno=97,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isValid',
          body='isValid() const'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=123,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VIDEOMODE_HPP',
          body='#define SFML_VIDEOMODE_HPP'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=124,
          lineno=102,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='width',
          body='unsigned int width;'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=125,
          lineno=103,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='height',
          body='unsigned int height;'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=126,
          lineno=104,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='bitsPerPixel',
          body='unsigned int bitsPerPixel;'),
 Fragment(document_cs='0f71bedf97c6fd1d0eda7fa221b4e0d021fcf35454e406d54bb3ecaa990fd0bb',
          id=127,
          lineno=1,
          tokens=40,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API\n'
               '  Macros: SFML_VIDEOMODE_HPP\n'
               '  Functions: VideoMode getDesktopMode getFullscreenModes '
               'isValid\n'
               '  Variables: bitsPerPixel height width\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=128,
          lineno=7,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='first',
          body='void first()\n'
               '{\n'
               '\t// when the case 1 in the main menu\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t***Area of Geometrical '
               'figures.***\\n";\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << " [1] Circle" << endl;\n'
               '\tcout << " [2] Rectangle" << endl;\n'
               '\tcout << " [3] Triangle" << endl;\n'
               '\tcout << " [4] Square" << endl;\n'
               '\tcout << " [5] EXIT to MAIN MENU" << endl;\n'
               '\tcout << endl;\n'
               '}first()'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=129,
          lineno=29,
          tokens=159,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='second',
          body='void second()\n'
               '{\n'
               '\t// when the case 2 in the main menu\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t***Circumference of Geometrical '
               'figures.***\\n";\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << " [1] Circle" << endl;\n'
               '\tcout << " [2] Rectangle" << endl;\n'
               '\tcout << " [3] Triangle" << endl;\n'
               '\tcout << " [4] Square" << endl;\n'
               '\tcout << " [5] EXIT to MAIN MENU" << endl;\n'
               '\tcout << endl;\n'
               '}second()'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=130,
          lineno=51,
          tokens=96,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='third',
          body='void third()\n'
               '{\n'
               '\t// when the case 3 in the main menu\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t***Find the Largest number among 3 '
               'numbers.***\\n";\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '}third()'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=131,
          lineno=68,
          tokens=73,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='area',
          body='area(double radius)double area(double radius)\n'
               '{ // overloading function for finding the area of circle\n'
               '\tdouble area1;\n'
               '\tdouble input_radius;\n'
               '\tarea1 = 3.141592653589793238463 * pow(radius, 2);\n'
               '\tcout << "The area of Circle: " << area1 << endl;\n'
               '\tcout << endl;\n'
               '\treturn area1;\n'
               '}'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=132,
          lineno=78,
          tokens=70,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='area',
          body='double area(double sideA, double sideB)\n'
               '{ // overloading function for finding the area of rectengle\n'
               '\tdouble area2;\n'
               '\tarea2 = sideA * sideB;\n'
               '\tcout << "The area of Rectangle: " << area2 << endl;\n'
               '\tcout << endl;\n'
               '\treturn area2;\n'
               '}area(double sideA, double sideB)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=133,
          lineno=87,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='area',
          body='double area(double sidetriangleA, double sidetriangleB, double '
               'sidetriangleC)\n'
               '{ // overloading function for finding the area of triangle\n'
               '\tdouble area3, S;\n'
               '\tS = (sidetriangleA + sidetriangleB + sidetriangleC) / 2;\n'
               '\tarea3 = sqrt(S * (S - sidetriangleA) * (S - sidetriangleB) * '
               '(S - sidetriangleC));\n'
               '\tcout << "The area of triangle: " << area3 << endl;\n'
               '\tcout << endl;\n'
               '\treturn area3;\n'
               '}area(double sidetriangleA, double sidetriangleB, double '
               'sidetriangleC)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=134,
          lineno=97,
          tokens=62,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='area',
          body='area(float sidesquare)float area(float sidesquare) '
               '////overloading function for finding the area of square\n'
               '{\n'
               '\tfloat area4;\n'
               '\tarea4 = pow(sidesquare, 2);\n'
               '\tcout << "The area of square: " << area4 << endl;\n'
               '\tcout << endl;\n'
               '\treturn area4;\n'
               '}'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=135,
          lineno=107,
          tokens=66,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='circumference',
          body='circumference(double radius)double circumference(double '
               'radius)\n'
               '{\n'
               '\tdouble circumference1;\n'
               '\tdouble input_radius;\n'
               '\tcircumference1 = 2 * 3.141592653589793238463 * radius;\n'
               '\tcout << "The circumference of Circle: " << circumference1 << '
               'endl;\n'
               '\tcout << endl;\n'
               '\treturn circumference1;\n'
               '}'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=136,
          lineno=117,
          tokens=157,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='circumference',
          body='double circumference(double sideA, double sideB)\n'
               '{\n'
               '\tdouble circumference2;\n'
               '\tcircumference2 = 2 * (sideA + sideB);\n'
               '\tcout << "The circumference of Rectangle: " << circumference2 '
               '<< endl;\n'
               '\tcout << endl;\n'
               '\treturn circumference2;\n'
               '}circumference(double sideA, double sideB)double '
               'circumference(double sidetriangleA, double sidetriangleB, '
               'double sidetriangleC)\n'
               '{\n'
               '\tdouble circumference3;\n'
               '\tcircumference3 = sidetriangleA + sidetriangleB + '
               'sidetriangleC;\n'
               '\tcout << "The circumference of triangle: " << circumference3 '
               '<< endl;\n'
               '\tcout << endl;\n'
               '\treturn circumference3;\n'
               '}circumference(double sidetriangleA, double sidetriangleB, '
               'double sidetriangleC)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=137,
          lineno=135,
          tokens=54,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='circumference',
          body='float circumference(float sidesquare)\n'
               '{\n'
               '\tfloat circumference4;\n'
               '\tcircumference4 = 4 * sidesquare;\n'
               '\tcout << "The circumference of square: " << circumference4 << '
               'endl;\n'
               '\tcout << endl;\n'
               '\treturn circumference4;\n'
               '}circumference(float sidesquare)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=138,
          lineno=145,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='findlargest',
          body='int findlargest(int n1, int n2, int n3)\n'
               '{\n'
               '\n'
               '\tif (n1 >= n2 && n1 >= n3)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n1 << endl;\n'
               '\t}\n'
               '\tif (n2 >= n1 && n2 >= n3)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n2 << endl;\n'
               '\t}\n'
               '\tif (n3 >= n1 && n3 >= n2)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n3 << endl;\n'
               '\t}\n'
               '\n'
               '\treturn n1, n2, n3;\n'
               '}findlargest(int n1, int n2, int n3)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=139,
          lineno=164,
          tokens=154,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='findlargest',
          body='double findlargest(double n1, double n2, double n3)\n'
               '{\n'
               '\n'
               '\tif (n1 >= n2 && n1 >= n3)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n1 << endl;\n'
               '\t}\n'
               '\tif (n2 >= n1 && n2 >= n3)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n2 << endl;\n'
               '\t}\n'
               '\tif (n3 >= n1 && n3 >= n2)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n3 << endl;\n'
               '\t}\n'
               '\telse if (n1 == n2 == n3)\n'
               '\t\tcout << "Largest number : " << n3 << endl;\n'
               '\treturn n1, n2, n3;\n'
               '}'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=140,
          lineno=164,
          tokens=15,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='findlargest',
          body='findlargest(double n1, double n2, double n3)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=141,
          lineno=186,
          tokens=165,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Large',
          body='T Large(T n1, T n2, T n3)\n'
               '{\n'
               '\tif (n1 >= n2 && n1 >= n3)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n1 << endl;\n'
               '\t}\n'
               '\tif (n2 >= n1 && n2 >= n3)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n2 << endl;\n'
               '\t}\n'
               '\tif (n3 >= n1 && n3 >= n2)\n'
               '\t{\n'
               '\t\tcout << "Largest number: " << n3 << endl;\n'
               '\t}\n'
               '\telse if (n1 == n2 == n3)\n'
               '\t\tcout << "Largest number : " << n3 << endl;\n'
               '\n'
               '\treturn n1, n2, n3;\n'
               '}Large(T n1, T n2, T n3)'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=142,
          lineno=207,
          tokens=132,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tsystem("color 3E");\n'
               '\tint numberforoperation = 0;\n'
               '\tdouble radius1;\n'
               '\tdouble sideA, sideB;\n'
               '\tdouble sidetriangleA, sidetriangleB, sidetriangleC;\n'
               '\tfloat sidesquare;\n'
               '\tdouble n1, n2, n3;\n'
               '\n'
               '\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tHello! Welcome to the main '
               'menu.\\n";\n'
               '\tcout << "\\t\\t   WARNING!!! Enter only numbers!!! And the '
               '\'y/n\' when you will be asked!\\n";\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=143,
          lineno=207,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=144,
          lineno=224,
          tokens=231,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\tfor (int l = 0; l < 120; l++)\n'
               '\t{\n'
               '\t\tcout << "=";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tcout << "\\t[1] Area of Geometrical Figures.\\n";\n'
               '\tcout << "\\t[2] Circumference of geometrical figures.\\n";\n'
               '\tcout << "\\t[3] Find the largest number.\\n";\n'
               '\tcout << "\\t[4] finding the largest number with function '
               'template.\\n";\n'
               '\tcout << "\\t[5] EXIT\\n";\n'
               '\tcout << endl;\n'
               'b:\n'
               '\tcout << " Please enter the number of operation you would '
               'like to execute:  ";\n'
               '\tcin >> numberforoperation;\n'
               '\tif (numberforoperation > 0 && numberforoperation < 6)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tswitch (numberforoperation)\n'
               '\t\t{\n'
               '\t\tcase 1: // '
               'first11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n'
               '\t\t\tfirst();\n'
               '\t\t\tint firstfirst;\n'
               '\t\tf:\n'
               '\t\t\tcout << " Choose one figure: ";\n'
               '\t\t\tcin >> firstfirst;\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=145,
          lineno=249,
          tokens=196,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\tif (firstfirst > 0 && firstfirst < 6)\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\t\t// ends the main menu\n'
               '\t\t\t\tswitch (firstfirst) // firstfirst\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tsystem("cls"); // ends the main menu\n'
               '\t\t\t\tcase 1:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***CIRCLE***\\n";\n'
               '\t\t\t\ta:\n'
               '\t\t\t\t\tcout << "Enter the radius of the circle: ";\n'
               '\t\t\t\t\tcin >> radius1;\n'
               '\t\t\t\t\tif (radius1 > 0)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tarea(radius1);\n'
               '\t\t\t\t\t\tfirst();\n'
               '\t\t\t\t\t\tgoto f;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto a;\n'
               '\t\t\t\t\tbreak;\n'
               '\n'
               '\t\t\t\tcase 2:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***RECTANGLE***\\n";\n'
               '\t\t\t\tc:\n'
               '\t\t\t\t\tcout << "Enter the height of rectangle: ";\n'
               '\t\t\t\t\tcin >> sideA;\n'
               '\t\t\t\t\tcout << "Enter the width of the rectangle: ";\n'
               '\t\t\t\t\tcin >> sideB;\n'
               '\t\t\t\t\tcout << endl;\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=146,
          lineno=278,
          tokens=139,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\t\t\tif (sideA > 0 && sideB > 0)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tarea(sideA, sideB);\n'
               '\n'
               '\t\t\t\t\t\tfirst();\n'
               '\t\t\t\t\t\tgoto f;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto c;\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 3:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***TRIANGLE***" << endl;\n'
               '\t\t\t\td:\n'
               '\t\t\t\t\tcout << "Enter the first side of the triangle: ";\n'
               '\t\t\t\t\tcin >> sidetriangleA;\n'
               '\t\t\t\t\tcout << "Enter the second side of the triangle: ";\n'
               '\t\t\t\t\tcin >> sidetriangleB;\n'
               '\t\t\t\t\tcout << "Enter the third side of the triangle: ";\n'
               '\t\t\t\t\tcin >> sidetriangleC;\n'
               '\t\t\t\t\tcout << endl;\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=147,
          lineno=298,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\t\t\tif (sidetriangleA > 0 && sidetriangleB > 0 && '
               'sidetriangleC > 0 && sidetriangleC < sidetriangleA + '
               'sidetriangleB && sidetriangleA < sidetriangleB + sidetriangleC '
               '&& sidetriangleB < sidetriangleC + sidetriangleA)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tarea(sidetriangleA, sidetriangleB, '
               'sidetriangleC);\n'
               '\n'
               '\t\t\t\t\t\tfirst();\n'
               '\t\t\t\t\t\tgoto f;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto d;\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 4:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***Square***" << endl;\n'
               '\t\t\t\te:\n'
               '\t\t\t\t\tcout << "Enter the side of square: ";\n'
               '\t\t\t\t\tcin >> sidesquare;\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=148,
          lineno=313,
          tokens=245,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\t\t\tif (sidesquare > 0)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tarea(sidesquare);\n'
               '\n'
               '\t\t\t\t\t\tfirst();\n'
               '\t\t\t\t\t\tgoto f;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto e;\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 5:\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tmain();\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tdefault:\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t}\n'
               '\t\t\telse\n'
               '\t\t\t\tgoto f;\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tcase 2: // '
               'second2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222\n'
               '\t\t\tsecond();\n'
               '\t\t\tint secondsecond;\n'
               '\t\tg:\n'
               '\t\t\tcout << " Choose one figure: ";\n'
               '\t\t\tcin >> secondsecond;\n'
               '\t\t\tif (secondsecond > 0 && secondsecond < 6)\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\t\t  // ends the main menu\n'
               '\t\t\t\tswitch (secondsecond) // firstfirst\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tsystem("cls"); // ends the main menu\n'
               '\t\t\t\tcase 1:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***CIRCLE***\\n";\n'
               '\t\t\t\th:\n'
               '\t\t\t\t\tcout << "Enter the radius of the circle: ";\n'
               '\t\t\t\t\tcin >> radius1;\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=149,
          lineno=354,
          tokens=248,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\t\t\tif (radius1 > 0)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tcircumference(radius1);\n'
               '\t\t\t\t\t\tsecond();\n'
               '\t\t\t\t\t\tgoto g;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto h;\n'
               '\t\t\t\t\tbreak;\n'
               '\n'
               '\t\t\t\tcase 2:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***RECTANGLE***\\n";\n'
               '\t\t\t\tj:\n'
               '\t\t\t\t\tcout << "Enter the height of rectangle: ";\n'
               '\t\t\t\t\tcin >> sideA;\n'
               '\t\t\t\t\tcout << "Enter the width of the rectangle: ";\n'
               '\t\t\t\t\tcin >> sideB;\n'
               '\t\t\t\t\tcout << endl;\n'
               '\t\t\t\t\tif (sideA > 0 && sideB > 0)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tcircumference(sideA, sideB);\n'
               '\t\t\t\t\t\tsecond();\n'
               '\t\t\t\t\t\tgoto g;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto j;\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 3:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***TRIANGLE***" << endl;\n'
               '\t\t\t\td1:\n'
               '\t\t\t\t\tcout << "Enter the first side of the triangle: ";\n'
               '\t\t\t\t\tcin >> sidetriangleA;\n'
               '\t\t\t\t\tcout << "Enter the second side of the triangle: ";\n'
               '\t\t\t\t\tcin >> sidetriangleB;\n'
               '\t\t\t\t\tcout << "Enter the third side of the triangle: ";\n'
               '\t\t\t\t\tcin >> sidetriangleC;\n'
               '\t\t\t\t\tcout << endl;\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=150,
          lineno=391,
          tokens=228,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\t\t\tif (sidetriangleA > 0 && sidetriangleB > 0 && '
               'sidetriangleC > 0 && sidetriangleC < sidetriangleA + '
               'sidetriangleB && sidetriangleA < sidetriangleB + sidetriangleC '
               '&& sidetriangleB < sidetriangleC + sidetriangleA)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tcircumference(sidetriangleA, sidetriangleB, '
               'sidetriangleC);\n'
               '\t\t\t\t\t\tsecond();\n'
               '\t\t\t\t\t\tgoto g;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto d1;\n'
               '\t\t\t\t\tbreak;\n'
               '\n'
               '\t\t\t\tcase 4:\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t***Square***" << endl;\n'
               '\t\t\t\te1:\n'
               '\t\t\t\t\tcout << "Enter the side of square: ";\n'
               '\t\t\t\t\tcin >> sidesquare;\n'
               '\t\t\t\t\tif (sidesquare > 0)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tcircumference(sidesquare);\n'
               '\t\t\t\t\t\tsecond();\n'
               '\t\t\t\t\t\tgoto g;\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse\n'
               '\t\t\t\t\t\tgoto e1;\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 5:\n'
               '\t\t\t\t\tmain();\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tdefault:\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t}\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=151,
          lineno=423,
          tokens=195,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\telse\n'
               '\t\t\t\tgoto g;\n'
               '\t\t\tbreak;\n'
               '\t\t\t'
               '///////////////////////////////////////////////////////////////////////////////////////////////////////////\n'
               '\t\tcase 3: // '
               'third333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n'
               '\t\t\tthird();\n'
               '\t\t\tcout << "\\t\\t\\tPlease enter 3 numbers to '
               'compare.\\n\\t\\t\\tYou can write even an integer or decimal '
               'number. For example: 123, 12.123, 0,123 \\n";\n'
               '\t\tx:\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tcout << "Enter the first number: ";\n'
               '\t\t\tcin >> n1;\n'
               '\t\t\tcout << "Enter the second number: ";\n'
               '\t\t\tcin >> n2;\n'
               '\t\t\tcout << "Enter the third number: ";\n'
               '\t\t\tcin >> n3;\n'
               '\t\t\tfindlargest(n1, n2, n3);\n'
               '\t\t\tchar quit;\n'
               '\t\t\tcout << "Do you want to try again(y/n)? ";\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=152,
          lineno=441,
          tokens=56,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body="\t\t\tif (cin >> quit && quit == 'y') // when user will input "
               "'y' the code will again ask you to input a 3 numbers\n"
               "\t\t\t\tgoto x;\t\t\t\t\t\t// when it will be 'n' the code "
               'will go to the main menu\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=153,
          lineno=443,
          tokens=228,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\telse\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tmain();\n'
               '\t\t\t}\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t\t'
               '/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n'
               '\t\tcase 4: // '
               'four4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444\n'
               '\t\t\tthird();\n'
               '\t\t\tcout << "\\t\\t\\tPlease enter 3 numbers to '
               'compare.\\n\\t\\t\\tYou can write even an integer or decimal '
               'number. For example: 123, 12.123, 0,123 \\n";\n'
               '\t\tqw:\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tcout << "Enter the first number: ";\n'
               '\t\t\tcin >> n1;\n'
               '\t\t\tcout << "Enter the second number: ";\n'
               '\t\t\tcin >> n2;\n'
               '\t\t\tcout << "Enter the third number: ";\n'
               '\t\t\tcin >> n3;\n'
               '\t\t\tfindlargest(n1, n2, n3);\n'
               '\t\t\tchar quit2;\n'
               '\t\t\tcout << "Do you want to try again(y/n)? "; // when user '
               "will input 'y' the code will again ask you to input a 3 "
               'numbers\n'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=154,
          lineno=465,
          tokens=98,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body="\t\t\tif (cin >> quit2 && quit2 == 'y')\t\t   // when it will "
               "be 'n' the code will go to the main menu\n"
               '\t\t\t\tgoto qw;\n'
               '\t\t\telse\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tmain();\n'
               '\t\t\t}\n'
               '\t\t\tbreak; // breaking the case 4 of the main menu\n'
               '\t\tdefault:\n'
               '\t\t\tbreak; // breaking the default\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t\tgoto b;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=155,
          lineno=5,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=156,
          lineno=70,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='area1',
          body='double area1;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=157,
          lineno=71,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='input_radius',
          body='double input_radius;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=158,
          lineno=80,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='area2',
          body='double area2;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=159,
          lineno=89,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='area3',
          body='double area3, S;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=160,
          lineno=99,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='area4',
          body='float area4;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=161,
          lineno=109,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='circumference1',
          body='double circumference1;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=162,
          lineno=110,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='input_radius',
          body='double input_radius;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=163,
          lineno=119,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='circumference2',
          body='double circumference2;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=164,
          lineno=128,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='circumference3',
          body='double circumference3;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=165,
          lineno=137,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='circumference4',
          body='float circumference4;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=166,
          lineno=211,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='radius1',
          body='double radius1;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=167,
          lineno=212,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='sideA',
          body='double sideA, sideB;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=168,
          lineno=213,
          tokens=16,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='sidetriangleA',
          body='double sidetriangleA, sidetriangleB, sidetriangleC;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=169,
          lineno=214,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='sidesquare',
          body='float sidesquare;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=170,
          lineno=245,
          tokens=4,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='firstfirst',
          body='int firstfirst;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=171,
          lineno=339,
          tokens=4,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='secondsecond',
          body='int secondsecond;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=172,
          lineno=439,
          tokens=3,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='quit',
          body='char quit;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=173,
          lineno=463,
          tokens=4,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='quit2',
          body='char quit2;'),
 Fragment(document_cs='119e4574b21bdd2c4d649ed64b7798f83a37adf75d93bf8bcd5cd7151382aa08',
          id=174,
          lineno=1,
          tokens=58,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: Large area circumference findlargest first main '
               'second third\n'
               '  Variables: area1 area2 area3 area4 circumference1 '
               'circumference2 circumference3 circumference4 firstfirst '
               'input_radius quit quit2 radius1 secondsecond sideA sidesquare '
               'sidetriangleA\n'
               '  Using: std\n'),
 Fragment(document_cs='11b771d710b2fb57e4559bd4ef3d79dc31ba48d84054f68d8b38bbfbedd739be',
          id=175,
          lineno=6,
          tokens=53,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='power',
          body='power(long long int x, long long int y)long long int '
               'power(long long int x, long long int y)\n'
               '{\n'
               '\tif (y == 0)\n'
               '\t\treturn 1;\n'
               '\telse\n'
               '\t\treturn x * power(x, y - 1);\n'
               '}'),
 Fragment(document_cs='11b771d710b2fb57e4559bd4ef3d79dc31ba48d84054f68d8b38bbfbedd739be',
          id=176,
          lineno=14,
          tokens=94,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main1',
          body='int main1()\n'
               '{\n'
               '\tcout << "\\t\\t\\t***Program to calculate the x^y using '
               'recursion***" << endl;\n'
               '\tint x, y;\n'
               '\tcout << "Please enter the numbers x^y: ";\n'
               '\tcin >> x >> y;\t\t\t\t\t   // inpuing the interval of the '
               'numbers\n'
               '\tcout << "Result: " << power(x, y); // calling function '
               "'power'\n"
               '\tcout << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main1()'),
 Fragment(document_cs='11b771d710b2fb57e4559bd4ef3d79dc31ba48d84054f68d8b38bbfbedd739be',
          id=177,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='11b771d710b2fb57e4559bd4ef3d79dc31ba48d84054f68d8b38bbfbedd739be',
          id=178,
          lineno=1,
          tokens=12,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main1 power\n  Using: std\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=179,
          lineno=22,
          tokens=226,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Item',
          body='class Item { // class ITEM which includes the name and '
               'universal item code\n'
               'protected: \n'
               '\tstring name;\n'
               '\tstring UIC;\n'
               'public:\n'
               '\tItem() { // default constructor\n'
               '\t\tname = "Unknown";\n'
               '\t\tUIC = "Unknown";\n'
               '\t}\n'
               '\n'
               '\tItem(string name, string UIC) { // parametirized '
               'constructor\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->UIC = UIC;\n'
               '\t}\n'
               '\n'
               '\tvoid set_name(string name) { // function for inputing the '
               'name of item\n'
               '\t\tthis->name = name;\n'
               '\t}\n'
               '\n'
               '\tvoid set_UIC(string UIC) {\n'
               '\t\tthis->UIC = UIC;\n'
               '\t}\n'
               '\n'
               '\tstring get_name() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tstring get_UIC() {\n'
               '\t\treturn UIC;\n'
               '\t}\n'
               '\n'
               '\tvoid virtual display() {\n'
               '\t\tcout << left << setw(20) << name << setw(15) << UIC;\n'
               '\t}\n'
               '\n'
               '\tvoid virtual input() {\n'
               '\t\tcout << "Enter the name of a new product: ";\n'
               '\t    cin >> name;\n'
               '\t\tcout << "Enter the UIC of a new product: ";\n'
               '\t\tcin >> UIC;\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=180,
          lineno=67,
          tokens=145,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='PackedGroceries',
          body='class PackedGroceries : public Item {\n'
               '\n'
               'private:\n'
               '\tdouble price;\n'
               '\tint quantity;\n'
               '\tint quantity_purchased;\n'
               'public:\n'
               '\t\n'
               '\tPackedGroceries() {\n'
               '\t\tprice = 0.0;\n'
               '\t\tquantity = 0;\n'
               '\t\tquantity_purchased = 0;\n'
               '\t}\n'
               '\n'
               '\tPackedGroceries(string name, string UIC, double price, int '
               'quantity, int quantity_purchased) : Item(name, UIC) {\n'
               '\t\tthis->price = price;\n'
               '\t\tthis->quantity = quantity;\n'
               '\t\tthis->quantity_purchased = quantity_purchased;\n'
               '\t}\n'
               '\n'
               '\tvoid display() {\n'
               '\t    Item::display();\n'
               '\t\tcout << left << setw(20) << price << setw(15) << quantity '
               '<< endl;\n'
               '\t'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=181,
          lineno=90,
          tokens=134,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='PackedGroceries',
          body='}\n'
               '\n'
               '\tvoid input() {\n'
               '\t\tItem::input();\n'
               '\t\tcout << "Enter the price of a new product: ";\n'
               '\t\tcin >> price;\n'
               '\t\tcout << "Enter the quantity of a new product: ";\n'
               '\t\tcin >> quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid set_quantity(int quantity) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tint get_quantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tdouble get_price() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tvoid set_quantity_p(int quantity_purchased) {\n'
               '\t\tthis->quantity_purchased = quantity_purchased;\n'
               '\t}\n'
               '\n'
               '\tint get_quantity_p() {\n'
               '\t\tquantity_purchased++;\n'
               '\t\tquantity--;\n'
               '\t\treturn quantity_purchased;\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=182,
          lineno=125,
          tokens=238,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='FreshGroceries',
          body='class FreshGroceries : public Item {\n'
               'private:\n'
               '\tdouble price;\n'
               '\tint quantity;\n'
               '\tint quantity_purchased;\n'
               '\n'
               'public:\n'
               '\n'
               '\tFreshGroceries() {\n'
               '\t\tprice = 0.0;\n'
               '\t\tquantity = 0;\n'
               '\t\tquantity_purchased = 0;\n'
               '\t}\n'
               '\n'
               '\tFreshGroceries(string name, string UIC, double price, int '
               'quantity, int quantity_purchased) : Item(name, UIC) {\n'
               '\t\tthis->price = price;\n'
               '\t\tthis->quantity = quantity;\n'
               '\t\tthis->quantity_purchased = quantity_purchased;\n'
               '\t}\n'
               '\n'
               '\tvoid display() {\n'
               '\t\tItem::display();\n'
               '\t\tcout << left << setw(20) << price << setw(15) << quantity '
               '<< endl;\n'
               '\n'
               '\t}\n'
               '\n'
               '\tint get_quantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tdouble get_price() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint get_quantity_p() {\n'
               '\t\tquantity--;\n'
               '\t\tquantity_purchased++;\n'
               '\t\treturn quantity_purchased;\n'
               '\t}\n'
               '\n'
               '\tvoid input() {\n'
               '\t\tItem::input();\n'
               '\t\tcout << "Enter the price of a new product: ";\n'
               '\t\tcin >> price;\n'
               '\t\tcout << "Enter the quantity of a new product: ";\n'
               '\t\tcin >> quantity;\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=183,
          lineno=24,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=184,
          lineno=25,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='UIC',
          body='string UIC;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=185,
          lineno=70,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price',
          body='double price;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=186,
          lineno=71,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=187,
          lineno=72,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_purchased',
          body='int quantity_purchased;int quantity_purchased;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=188,
          lineno=127,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price',
          body='double price;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=189,
          lineno=128,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=190,
          lineno=19,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=191,
          lineno=27,
          tokens=24,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Item',
          body='Item()Item() { // default constructor\n'
               '\t\tname = "Unknown";\n'
               '\t\tUIC = "Unknown";\n'
               '\t}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=192,
          lineno=32,
          tokens=42,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Item',
          body='Item(string name, string UIC)Item(string name, string UIC) { '
               '// parametirized constructor\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->UIC = UIC;\n'
               '\t}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=193,
          lineno=75,
          tokens=37,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='PackedGroceries',
          body='PackedGroceries() {\n'
               '\t\tprice = 0.0;\n'
               '\t\tquantity = 0;\n'
               '\t\tquantity_purchased = 0;\n'
               '\t}PackedGroceries()'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=194,
          lineno=81,
          tokens=22,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='PackedGroceries',
          body='PackedGroceries(string name, string UIC, double price, int '
               'quantity, int quantity_purchased)'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=195,
          lineno=81,
          tokens=57,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='PackedGroceries',
          body='PackedGroceries(string name, string UIC, double price, int '
               'quantity, int quantity_purchased) : Item(name, UIC) {\n'
               '\t\tthis->price = price;\n'
               '\t\tthis->quantity = quantity;\n'
               '\t\tthis->quantity_purchased = quantity_purchased;\n'
               '\t}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=196,
          lineno=133,
          tokens=91,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='FreshGroceries',
          body='FreshGroceries() {\n'
               '\t\tprice = 0.0;\n'
               '\t\tquantity = 0;\n'
               '\t\tquantity_purchased = 0;\n'
               '\t}FreshGroceries()FreshGroceries(string name, string UIC, '
               'double price, int quantity, int quantity_purchased) : '
               'Item(name, UIC) {\n'
               '\t\tthis->price = price;\n'
               '\t\tthis->quantity = quantity;\n'
               '\t\tthis->quantity_purchased = quantity_purchased;\n'
               '\t}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=197,
          lineno=139,
          tokens=21,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='FreshGroceries',
          body='FreshGroceries(string name, string UIC, double price, int '
               'quantity, int quantity_purchased)'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=198,
          lineno=175,
          tokens=35,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='void Purchase(){\n'
               '\tPackedGroceries p; // declaration of object PackedGroceries\n'
               '\tFreshGroceries f; // declaration of object for class '
               'FreshGroceri\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=199,
          lineno=175,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='Purchase()'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=200,
          lineno=178,
          tokens=231,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t\tstring UIC; // UIC for serching the product from the file\n'
               '\n'
               '\t\tofstream outBill("Bill", ios::binary | ios::app);\n'
               '\n'
               '\t\tcout << "Second Main Menu: \\n";\n'
               '\t\tcout << "1. Go to Packed Groceries\\n";\n'
               '\t\tcout << "2. Go to Fresh Groceries \\n";\n'
               '\t\tcout << "3. Bill \\n";\n'
               '\t\tcout << "0. Go Back\\n";\n'
               '\t\tcout << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tofstream outTempPacked("TempPacked", ios::binary | '
               'ios::app);\n'
               '\n'
               '\t\t\t// listing the products which exist\n'
               '\t\t\tifstream inPacked1("Packed", ios::binary);\n'
               '\t\t\tcout << left << setw(20) << "Name" << setw(15) << "UIC" '
               '<< setw(20) << "Price" << setw(15) << "Quantity" << endl;\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=201,
          lineno=201,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\t\t\twhile (inPacked1.read((char*)&p, '
               'sizeof(PackedGroceries))) {\n'
               '\t\t\t\tp.display();\n'
               '\t\t\t}\n'
               '\t\t\tinPacked1.close();\t\t\t// closing the files after '
               'execution\n'
               '\n'
               '\t\t\t// searching the product by its code\n'
               '\t\t\tcout << "\\nEnter the UIC of product you want to '
               'purchase: ";\n'
               '\t\t\tcin >> UIC;\n'
               '\n'
               '\t\t\tbool isFound = false; // bool for cheaking the existance '
               'of product\n'
               '\n'
               '\t\t\tifstream inPacked("Packed", ios::binary);\n'
               '\t\t\twhile (inPacked.read((char*)&p, '
               'sizeof(PackedGroceries))) {\t\n'
               '\t\t\t\t// serching from the file the product\n'
               '\t\t\t\tif (p.get_UIC() == UIC) {\n'
               '\t\t\t\t\tisFound = true;\t\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=202,
          lineno=217,
          tokens=208,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\t\t\t\t\tif (p.get_quantity() > 0) { // validation for '
               'quantity\n'
               '\t\t\t\t\t\tp.get_quantity_p(); // functions for calculating '
               'the quantities\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse if (p.get_quantity() < 0) { // quantity cannot '
               'be less than zero\n'
               '\t\t\t\t\t\tcout << "Sorry, product is over!\\n";\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\t// w\n'
               '\t\t\t\t\toutTempPacked.write((char*)&p, '
               'sizeof(PackedGroceries));\n'
               '\t\t\t\t\toutBill.write((char*)&p, sizeof(PackedGroceries));\n'
               '\n'
               '\t\t\t\t\tcout << "Successfully purchased 1 pc.\\n";\n'
               '\t\t\t\t\tcout << "Done Great\\n";\n'
               '\t\t\t\t}\t\t\n'
               '\t\t\t\telse if (p.get_UIC() != UIC) {\n'
               '\t\t\t\t\toutTempPacked.write((char*)&p, '
               'sizeof(PackedGroceries));\n'
               '\n'
               '\t\t\t\t}\n'
               '\t\t\t\telse {\n'
               '\t\t\t\t\tisFound = false;\n'
               '\t\t\t\t}\n'
               '\n'
               '\t\t\t} // switch\n'
               '\t\t\toutTempPacked.close(); // closing temp\n'
               '\t\t\tinPacked.close(); // closing packed\n'
               '\t\t\toutBill.close();\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=203,
          lineno=242,
          tokens=131,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\n'
               '\t\t\t\t\n'
               '\t\t\tif (!isFound) {\n'
               '\t\t\t\tcout << "Not Found 404 ERROR\\n";\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\t// removing and renaming temp\n'
               '     \t\tremove("Packed");\n'
               '\t\t    rename("TempPacked", "Packed");\n'
               '\n'
               '\t\t\tcout << "\\n\\nThe new table: \\n";\n'
               '\t\t\t// for redisplaaying the file\n'
               '\t\t\tifstream inPacked1_2("Packed", ios::binary);\n'
               '\t\t\tcout << left << setw(20) << "Name" << setw(15) << "UIC" '
               '<< setw(20) << "Price" << setw(15) << "Quantity" << endl;\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=204,
          lineno=256,
          tokens=244,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\t\t\twhile (inPacked1_2.read((char*)&p, '
               'sizeof(PackedGroceries))) {\n'
               '\t\t\t\tp.display();\n'
               '\t\t\t}\n'
               '\t\t\tinPacked1_2.close();\t\t\t// closing the files after '
               'execution\n'
               '\t\t\tcout << endl << endl;\n'
               '\n'
               '\t\t\t\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tofstream outTempFresh("TempFresh", ios::binary | '
               'ios::app);\n'
               '\n'
               '\t\t\tifstream inFresh1("Fresh", ios::binary);\n'
               '\t\t\tcout << left << setw(20) << "Name" << setw(15) << "UIC" '
               '<< setw(20) << "Price" << setw(15) << "Quantity" << endl;\n'
               '\t\t\twhile (inFresh1.read((char*)&f, sizeof(FreshGroceries))) '
               '{\n'
               '\t\t\t\tf.display();\n'
               '\t\t\t}\n'
               '\t\t\tinFresh1.close(); \t\t\t// closing the files after '
               'execution\n'
               '\n'
               '\t\t\t// searching the product by its code\n'
               '\t\t\tcout << "\\nEnter the UIC of product you want to '
               'purchase: ";\n'
               '\t\t\tcin >> UIC;\n'
               '\n'
               '\t\t\tbool isFound2 = false;\n'
               '\t\t\tifstream inFresh("Fresh", ios::binary);\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=205,
          lineno=283,
          tokens=250,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\n'
               '\t\t\twhile (inFresh.read((char*)&f, sizeof(FreshGroceries))) '
               '{\n'
               '\t\t\t\t\tif (f.get_UIC() == UIC) {\n'
               '\t\t\t\t\t\tisFound2 = true;\n'
               '\t\t\t\t\t\tif (f.get_quantity() > 0) {\n'
               '\t\t\t\t\t\t\tf.get_quantity_p(); // functions for calculating '
               'the quantities\n'
               '\t\t\t\t\t\t}\n'
               '\t\t\t\t\t\telse if (f.get_quantity() < 0) {\n'
               '\t\t\t\t\t\t\tcout << "Sorry, product is over!\\n";\n'
               '\t\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t\t\t// storing the found data to files \n'
               '\t\t\t\t\t\t// first for Billing system\n'
               '\t\t\t\t\t\t// next for Listing\n'
               '\t\t\t\t\t    outBill.write((char*)&f, '
               'sizeof(FreshGroceries));\n'
               '\t\t\t\t\t\toutTempFresh.write((char*)&f, '
               'sizeof(FreshGroceries));\n'
               '\n'
               '\t\t\t\t\t\tcout << "Successfully purchased 1 pc.\\n";\n'
               '\t\t\t\t\t\tcout << "Done Great\\n";\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse if (f.get_UIC() != UIC) {\n'
               '\t\t\t\t\t\toutTempFresh.write((char*)&f, '
               'sizeof(FreshGroceries));\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tisFound2 = false;\n'
               '\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t} // switch\n'
               '\t\t\t\toutTempFresh.close(); // closing temp\n'
               '\t\t\t\tinFresh.close(); // closing packed\n'
               '\t\t\t\toutBill.close();\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=206,
          lineno=314,
          tokens=128,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\n'
               '\t\t\t\tif (!isFound2) {\n'
               '\t\t\t\t\tcout << "Not Found 404 ERROR\\n";\n'
               '\t\t\t\t}\n'
               '\n'
               '\t\t\t\t// removing and renaming temp\n'
               '\t\t\t\tremove("Fresh");\n'
               '\t\t\t\trename("TempFresh", "Fresh");\n'
               '\n'
               '\t\t\t\t// for redisplaying the table\n'
               '\t\t\t\tcout << "\\n\\nThe new table: \\n";\n'
               '\t\t\t\tifstream inFresh1_2("Fresh", ios::binary);\n'
               '\t\t\t\tcout << left << setw(20) << "Name" << setw(15) << '
               '"UIC" << setw(20) << "Price" << setw(15) << "Quantity" << '
               'endl;\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=207,
          lineno=327,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\t\t\t\twhile (inFresh1_2.read((char*)&f, '
               'sizeof(FreshGroceries))) {\n'
               '\t\t\t\t\tf.display();\n'
               '\t\t\t\t}\n'
               '\t\t\t\tinFresh1_2.close(); \t\t\t// closing the files after '
               'execution\n'
               '\t\t\t\tcout << endl << endl;\n'
               '\n'
               '\t\t\t\t\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tdouble price_final = 0.0;\n'
               '\n'
               '\t\t\t// the billing system for Packed\n'
               '\t\t\tcout << "The billing system:\\n";\n'
               '\t\t\tifstream inBill("Bill", ios::binary);\n'
               '\t\t\tcout << left << setw(20) << "Name" << setw(15) << "UIC" '
               '<<endl;\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=208,
          lineno=345,
          tokens=175,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Purchase',
          body='\t\t\twhile (inBill.read((char*)&p, sizeof(PackedGroceries))) '
               '{\n'
               '\t\t\t\tp.Item::display();\n'
               '\t\t\t\tcout << endl;\n'
               '\t\t\t\t// calculating the price\n'
               '\t\t\t\tprice_final = p.get_quantity_p() * p.get_price();\n'
               '\n'
               '\t\t\t}\n'
               '\t\t\tinBill.close();\t\t\t// closing the files after '
               'execution\n'
               '\t\t\tcout << endl << endl;\n'
               '\n'
               '\t\t\tcout << "Overall Price: " << price_final << endl << '
               'endl;\n'
               '\t\t\tcout << "Thank you for you purchase!\\n";\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '0': {\n"
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tdefault: {\n'
               '\t\t\tcout << "Your choise is not available in menu!\\nPlese, '
               'try one more time.\\n\\n";\n'
               '\t\t}\n'
               '\n'
               '\t\t} // swich ends\n'
               '\t} // for loop ends\n'
               '}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=209,
          lineno=374,
          tokens=221,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\tPackedGroceries p; // declaration of object PackedGroceries\n'
               '\tFreshGroceries f; // declaration of object for class '
               'FreshGroceries\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Main Menu: \\n";\n'
               '\t\tcout << "1. List all products\\n";\n'
               '\t\tcout << "2. Add Packed Groceries \\n";\n'
               '\t\tcout << "3. Add Fresh Groceries\\n";\n'
               '\t\tcout << "4. Purchase\\n";\n'
               '\t\tcout << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tifstream inPacked("Packed", ios::binary);\n'
               '\t\t\tifstream inFresh("Fresh", ios::binary);\n'
               '\n'
               '\t\t\t// displaying the list of packed products\n'
               '\t\t\tcout << left << setw(20) << "Name" << setw(15) << "UIC" '
               '<< setw(20) << "Price" << setw(15) << "Quantity" << endl;\n'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=210,
          lineno=374,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=211,
          lineno=395,
          tokens=182,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\twhile (inPacked.read((char*)&p, '
               'sizeof(PackedGroceries))) {\n'
               '\t\t\t\tp.display();\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\t// displaying the list of fresh products\n'
               '\t\t\twhile ( inFresh.read((char*)&f, sizeof(FreshGroceries))) '
               '{\n'
               '\t\t\t\tf.display();\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\t// closing the files after execution\n'
               '\t\t\tinPacked.close();\n'
               '\t\t\tinFresh.close();\t\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\t// inputing the info for the new item\n'
               '\t\t\tofstream outPacked("Packed", ios::binary | ios::app);\n'
               '\t\t\tp.input();\n'
               '\t\t\t// writing to binary file\n'
               '\t\t\toutPacked.write((char*)&p, sizeof(PackedGroceries));\n'
               '\t\t\toutPacked.close();\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"
               '\t\t\tsystem("c'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=212,
          lineno=421,
          tokens=147,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='ls");\n'
               '\t\t\tofstream outFresh("Fresh", ios::binary | ios::app);\n'
               '\t\t\t// inputing the info for the new item\n'
               '\t\t\tf.input();\n'
               '\t\t\t// writing to binary file the data inputted by user\n'
               '\t\t\toutFresh.write((char*)&f, sizeof(FreshGroceries));\n'
               '\t\t\toutFresh.close();\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '4': {\n"
               '\t\t\tPurchase(); // function for customer purchasing\n'
               '\t\t}break;\n'
               '\n'
               '\n'
               '\t\tdefault: {\n'
               '\t\t\tcout << "Your choise is not available in menu!\\nPlese, '
               'try one more time.\\n\\n";\n'
               '\t\t}\n'
               '\t\t\n'
               '\t\t} // swich ends\n'
               '\t} // for loop ends\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=213,
          lineno=17,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=214,
          lineno=182,
          tokens=4,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='UIC',
          body='string UIC;'),
 Fragment(document_cs='11e5386fcac7a3c4cbc51e333530c0f4e64c37ad045ec52ef8d76578a2609e2c',
          id=215,
          lineno=1,
          tokens=58,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: FreshGroceries Item PackedGroceries\n'
               '  Functions: FreshGroceries Item PackedGroceries Purchase '
               'main\n'
               '  Fields: UIC name price quantity quantity_purchased\n'
               '  Variables: UIC\n'
               '  Using: std\n'
               '  Usages: app binary display input\n'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=216,
          lineno=38,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='String',
          body='class String'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=217,
          lineno=39,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='TcpSocket',
          body='class TcpSocket'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=218,
          lineno=40,
          tokens=4,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='UdpSocket',
          body='class UdpSocket'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=219,
          lineno=47,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=220,
          lineno=77,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='append',
          body='append(const void* data, std::size_t sizeInBytes)'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=221,
          lineno=87,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='clear',
          body='clear()'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=222,
          lineno=102,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getData',
          body='getData() const'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=223,
          lineno=115,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDataSize',
          body='getDataSize() const'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=224,
          lineno=129,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='endOfPacket',
          body='endOfPacket() const'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=225,
          lineno=358,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='onSend',
          body='onSend(std::size_t& size)'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=226,
          lineno=377,
          tokens=13,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onReceive',
          body='onReceive(const void* data, std::size_t size)'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=227,
          lineno=398,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='checkSize',
          body='checkSize(std::size_t size)'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=228,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_PACKET_HPP',
          body='#define SFML_PACKET_HPP'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=229,
          lineno=338,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='UdpSocket',
          body='friend class UdpSocket;'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=230,
          lineno=403,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_data',
          body='std::vector<char> m_data;'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=231,
          lineno=404,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_readPos',
          body='std::size_t       m_readPos;'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=232,
          lineno=405,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sendPos',
          body='std::size_t       m_sendPos;'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=233,
          lineno=406,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_isValid',
          body='bool              m_isValid;'),
 Fragment(document_cs='126b1e75f5c3166aec4b9ca3a04b028af4231ad2cf90b3ec53200384db92e14c',
          id=234,
          lineno=1,
          tokens=58,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_NETWORK_API String TcpSocket UdpSocket\n'
               '  Macros: SFML_PACKET_HPP\n'
               '  Functions: append checkSize clear endOfPacket getData '
               'getDataSize onReceive onSend\n'
               '  Variables: UdpSocket m_data m_isValid m_readPos m_sendPos\n'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=235,
          lineno=42,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=236,
          lineno=63,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='SoundSource',
          body='SoundSource(const SoundSource& copy)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=237,
          lineno=85,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPitch',
          body='setPitch(float pitch)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=238,
          lineno=98,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setVolume',
          body='setVolume(float volume)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=239,
          lineno=114,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(float x, float y, float z)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=240,
          lineno=128,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(const Vector3f& position)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=241,
          lineno=144,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setRelativeToListener',
          body='setRelativeToListener(bool relative)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=242,
          lineno=161,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setMinDistance',
          body='setMinDistance(float distance)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=243,
          lineno=180,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setAttenuation',
          body='setAttenuation(float attenuation)'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=244,
          lineno=190,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPitch',
          body='getPitch() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=245,
          lineno=200,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getVolume',
          body='getVolume() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=246,
          lineno=210,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=247,
          lineno=221,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isRelativeToListener',
          body='isRelativeToListener() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=248,
          lineno=231,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getMinDistance',
          body='getMinDistance() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=249,
          lineno=241,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getAttenuation',
          body='getAttenuation() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=250,
          lineno=263,
          tokens=2,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='play',
          body='play()'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=251,
          lineno=274,
          tokens=2,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='pause',
          body='pause()'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=252,
          lineno=286,
          tokens=2,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='stop',
          body='stop()'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=253,
          lineno=294,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getStatus',
          body='getStatus() const'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=254,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDSOURCE_HPP',
          body='#define SFML_SOUNDSOURCE_HPP'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=255,
          lineno=309,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_source',
          body='unsigned int m_source;'),
 Fragment(document_cs='1301d598c2d6f55d156008a4881156a9c55f82c1a6d9dbcfb11e288069e9fddb',
          id=256,
          lineno=1,
          tokens=64,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n'
               '  Macros: SFML_SOUNDSOURCE_HPP\n'
               '  Functions: SoundSource getAttenuation getMinDistance '
               'getPitch getPosition getStatus getVolume isRelativeToListener '
               'pause play setAttenuation setMinDistance setPitch setPosition '
               'setRelativeToListener setVolume stop\n'
               '  Variables: m_source\n'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=257,
          lineno=12,
          tokens=102,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Publication',
          body='class Publication\n'
               "{ // base class for classes 'Book' and 'Tape'\n"
               'private:\n'
               '\tstring title;\n'
               '\tfloat price;\n'
               '\n'
               'public:\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tcout << " Book title: ";\n'
               '\t\tcin >> title;\n'
               '\t\tcout << " Price \'USA $\': ";\n'
               '\t\tcin >> price;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tcout << " Book title: \'" << title << "\'" << endl;\n'
               '\t\tcout << " Price: " << price << "$" << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=258,
          lineno=33,
          tokens=99,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Book',
          body='class Book : public Publication\n'
               '{ // derived class from Publication\n'
               'private:\n'
               '\tint page_count;\n'
               '\n'
               'public:\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tPublication::getdata(); // getdata() of class Publicaton\n'
               '\t\tcout << " Number of pages: ";\n'
               '\t\tcin >> page_count;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tPublication::showdata(); // showdata() of class '
               'Publication\n'
               '\t\tcout << " Number of pages: " << page_count << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=259,
          lineno=52,
          tokens=87,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Tape',
          body='class Tape : public Publication\n'
               '{ // derived class from Publication\n'
               'private:\n'
               '\tfloat playing_time;\n'
               '\n'
               'public:\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tPublication::getdata();\n'
               '\t\tcout << " Playing time of audiobook: ";\n'
               '\t\tcin >> playing_time;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tPublication::showdata();\n'
               '\t\tcout << " Playing time of audionbook: " << playing_time << '
               'endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=260,
          lineno=72,
          tokens=130,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='ACCOUNT',
          body='class ACCOUNT\n'
               '{\n'
               'private:\n'
               '\t// customer name, account number and type of account.\n'
               '\tstring name;\n'
               '\tstring account_number;\n'
               '\tstring type_account;\n'
               '\n'
               'public:\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tcout << " Name: ";\n'
               '\t\tcin >> name;\n'
               '\t\tcout << " Account Number: ";\n'
               '\t\tcin >> account_number;\n'
               '\t\tcout << " Type of Account: ";\n'
               '\t\tcin >> type_account;\n'
               '\t}\n'
               '\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tcout << " Name: " << name << endl;\n'
               '\t\tcout << " Account Number: " << account_number << endl;\n'
               '\t\tcout << " Type of Account: " << type_account << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=261,
          lineno=99,
          tokens=184,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CURR_ACCT',
          body='class CURR_ACCT : public ACCOUNT\n'
               '{\n'
               'private:\n'
               '\tint amount;\n'
               '\tint penalty = 2;\n'
               '\tint balance = 0;\n'
               '\tint withdraw;\n'
               '\n'
               'public:\n'
               '\tvoid Deposit()\n'
               '\t{\n'
               '\t\tcout << " Enter your deposit balance: ";\n'
               '\t\tcin >> amount;\n'
               '\n'
               '\t\tif (amount >= 100)\n'
               '\t\t{\n'
               '\t\t\tbalance = balance + amount;\n'
               '\t\t\tcout << " Successfully added!\\n\\n";\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << " Deposit cannot be less than 100$\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tDeposit();\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '\tvoid Balance()\n'
               '\t{\n'
               '\t\tACCOUNT::showdata();\n'
               '\t\tcout << " Balance: " << balance << endl\n'
               '\t\t\t << endl;\n'
               '\t}\n'
               '\n'
               '\tvoid Withdraw()\n'
               '\t{\n'
               '\t\tcout << " Enter the balance you want to withdraw: ";\n'
               '\t\tcin >> withdraw;\n'
               '\t}\n'
               '\n'
               '\tvoid Penalty()\n'
               '\t{\n'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=262,
          lineno=142,
          tokens=143,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CURR_ACCT',
          body='\t\tif (balance - withdraw > 100)\n'
               '\t\t{\n'
               '\t\t\tbalance = balance - withdraw;\n'
               '\t\t\tcout << " Successfully done!\\n\\n";\n'
               '\t\t}\n'
               '\t\telse if (balance - withdraw < 0)\n'
               '\t\t{\n'
               '\t\t\tcout << " You do not have such balance of money in your '
               'account!\\n";\n'
               '\t\t\tcout << " Your balance is " << balance << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tWithdraw();\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << " Your account balance is less than 100$.\\n You '
               'got penalty -2$.\\n\\n";\n'
               '\t\t\tbalance = balance - withdraw - penalty;\n'
               '\t\t}\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=263,
          lineno=163,
          tokens=112,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='SAV_ACCT',
          body='class SAV_ACCT : public ACCOUNT\n'
               '{\n'
               'private:\n'
               '\tint amount;\n'
               '\tint balance = 0;\n'
               '\tint withdraw;\n'
               '\tfloat year;\n'
               '\n'
               'public:\n'
               '\tvoid Deposit()\n'
               '\t{\n'
               '\t\tcout << " Enter your deposit balance: ";\n'
               '\t\tcin >> amount;\n'
               '\t\tbalance = balance + amount;\n'
               '\t}\n'
               '\n'
               '\tvoid Balance()\n'
               '\t{\n'
               '\t\tACCOUNT::showdata();\n'
               '\t\tcout << " Balance: " << balance << endl\n'
               '\t\t\t << endl;\n'
               '\t}\n'
               '\n'
               '\tvoid Withdraw()\n'
               '\t{\n'
               '\t\tcout << " Enter the balance you want to withdraw: ";\n'
               '\t\tcin >> withdraw;\n'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=264,
          lineno=190,
          tokens=178,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='SAV_ACCT',
          body='\t\tif (balance - withdraw > 100)\n'
               '\t\t{\n'
               '\t\t\tbalance = balance - withdraw;\n'
               '\t\t\tcout << " Successfully done!\\n\\n";\n'
               '\t\t}\n'
               '\t\telse if (balance - withdraw < 0)\n'
               '\t\t{\n'
               '\t\t\tcout << " You do not have such balance of money in your '
               'account!\\n";\n'
               '\t\t\tcout << " Your balance is " << balance << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tWithdraw();\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '\tvoid Compute_Interest()\n'
               '\t{\n'
               '\t\tBalance();\n'
               '\t\tcout << " ROI (Return on Investment) = 4%\\n";\n'
               '\t\tcout << " Enter the year of investment: ";\n'
               '\t\tcin >> year;\n'
               '\t\tcout << " Your balance after " << year << " year(s) will '
               'be " << balance * pow(1.04, year) << "\\n\\n";\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=265,
          lineno=15,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='title',
          body='string title;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=266,
          lineno=16,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price',
          body='float price;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=267,
          lineno=36,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='page_count',
          body='int page_count;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=268,
          lineno=55,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='playing_time',
          body='float playing_time;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=269,
          lineno=76,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=270,
          lineno=77,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='account_number',
          body='string account_number;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=271,
          lineno=78,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='type_account',
          body='string type_account;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=272,
          lineno=102,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='amount',
          body='int amount;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=273,
          lineno=103,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='penalty',
          body='int penalty = 2;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=274,
          lineno=104,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='balance',
          body='int balance = 0;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=275,
          lineno=105,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='withdraw',
          body='int withdraw;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=276,
          lineno=166,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='amount',
          body='int amount;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=277,
          lineno=167,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='balance',
          body='int balance = 0;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=278,
          lineno=168,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='withdraw',
          body='int withdraw;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=279,
          lineno=169,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='year',
          body='float year;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=280,
          lineno=8,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='F_First_Program()'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=281,
          lineno=9,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='F_Second_Program()'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=282,
          lineno=215,
          tokens=207,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\n\\t\\t 1. First program (Books)\\n\\t\\t 2. '
               'Second program (Bank account) \\n\\t\\t 0. Exit \\n\\n\\t Your '
               'choice: ";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\t\t// case '1' for the first program\n"
               "\t\tcase '1':\n"
               '\t\t\tF_First_Program();\n'
               '\t\t\tbreak;\n'
               "\t\t\t// case '2' for the second program\n"
               "\t\tcase '2':\n"
               '\t\t\tF_Second_Program();\n'
               '\t\t\tbreak;\n'
               "\t\t\t// case '0' to exit\n"
               "\t\tcase '0':\n"
               '\t\t\tk = 1000;\n'
               '\t\t\tbreak;\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "\\tYour choice is not available in Menu. \\n\\t '
               'Please try one more time.\\n";\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=283,
          lineno=247,
          tokens=19,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='void F_First_Program()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\n'
               '\tBook book;\n'
               '\tTape tape;\n'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=284,
          lineno=247,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='F_First_Program()'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=285,
          lineno=253,
          tokens=245,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='\n'
               '\tfor (int j = 0; j < 1000; j++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << " Welcome to Bookshop \'AliBooks\' \\n 1. Paper '
               'version \\n 2. Audiobook \\n 0. Go back\\n Your choice: ";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\t// case 1 for the first program\n'
               "\t\tcase '1':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tbook.getdata();\n'
               '\t\t\tcout << "\\n\\n Your given info:\\n";\n'
               '\t\t\tbook.showdata();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t\t// case 2 for the second program\n'
               "\t\tcase '2':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\ttape.getdata();\n'
               '\t\t\tcout << "\\n\\nYour given info:\\n";\n'
               '\t\t\ttape.showdata();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t\t// case 0 to exit\n'
               "\t\tcase '0':\n"
               '\t\t\tj = 1000;\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "\\t Your choice is not available in Menu. '
               '\\n\\t Please try one more time.\\n";\n'
               '\t\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=286,
          lineno=290,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='void F_Second_Program()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\n'
               '\tCURR_ACCT account1;\n'
               '\tSAV_ACCT account2;\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\t WELCOME TO \'AliBank\' \\n Chooce your '
               'account rate: \\n 1. Current account\\n 2. Saving account\\n '
               '0. Go back \\n Your choice: ";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\t// current account\n'
               "\t\tcase '1':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\taccount1.getdata(); // calling the function from base '
               'class\n'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=287,
          lineno=290,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='F_Second_Program()'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=288,
          lineno=307,
          tokens=140,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\tfor (int l = 0; l < 1000; l++)\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << " 1. Deposit \\n 2. Display the balance \\n 3. '
               'Withdraw money \\n 0. Go back \\n Your choice: ";\n'
               '\t\t\t\tswitch (_getch())\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\t// case 1 for the first program\n'
               "\t\t\t\tcase '1':\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\taccount1.Deposit();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\t\t// case 2 for the second program\n'
               "\t\t\t\tcase '2':\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\taccount1.Balance();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=289,
          lineno=324,
          tokens=128,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\n'
               "\t\t\t\tcase '3':\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\taccount1.Withdraw();\n'
               '\t\t\t\t\taccount1.Penalty();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\tcase '0':\n"
               '\t\t\t\t\tl = 1000;\n'
               '\t\t\t\t\tF_Second_Program();\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tdefault:\n'
               '\t\t\t\t\tcout << "\\tYour choice is not available in Menu. '
               '\\n\\t Please try one more time.\\n";\n'
               '\t\t\t\t\tbreak;\n'
               '\n'
               '\t\t\t\t} // switch\n'
               '\t\t\t}\t  // for loop\n'
               '\n'
               '\t\t\t// saving account\n'
               "\t\tcase '2':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\taccount2.getdata(); // calling the function from base '
               'class\n'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=290,
          lineno=346,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\tfor (int j = 0; j < 1000; j++)\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << " 1. Deposit \\n 2. Display the balance \\n 3. '
               'Withdraw money \\n 4. Compute Interest \\n 0. Go back \\n Your '
               'choice: ";\n'
               '\t\t\t\tswitch (_getch())\n'
               '\t\t\t\t{\n'
               "\t\t\t\tcase '1':\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\taccount2.Deposit();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\tcase '2':\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\taccount2.Balance();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\tcase '3':\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\taccount2.Withdraw();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\tcase '4':\n"
               '\t\t\t'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=291,
          lineno=368,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\tsystem("cls");\n'
               '\t\t\t\t\taccount2.Compute_Interest();\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\tcase '0':\n"
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tF_Second_Program();\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tdefault:\n'
               '\t\t\t\t\tcout << "\\tYour choice is not available in Menu. '
               '\\n\\t Please try one more time.\\n";\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\t// go back to start\n'
               "\t\tcase '0':\n"
               '\t\t\ti = 1000;\n'
               '\t\t\tbreak;\n'
               '\t\t\t// default case for big switch\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "\\tYour choice is not available in Menu. \\n\\t '
               'Please try one more time.\\n";\n'
               '\t\t\tbreak;\n'
               '\t\t} // big switch\n'
               '\t}\t  // big for\n'
               '}'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=292,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=293,
          lineno=251,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='book',
          body='Book book;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=294,
          lineno=252,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='tape',
          body='Tape tape;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=295,
          lineno=294,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='account1',
          body='CURR_ACCT account1;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=296,
          lineno=295,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='account2',
          body='SAV_ACCT account2;'),
 Fragment(document_cs='1315c7e92663f8b620651965656e7734fcd84a5ee3fc6083f947021263c70960',
          id=297,
          lineno=1,
          tokens=74,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: ACCOUNT Book CURR_ACCT Publication SAV_ACCT Tape\n'
               '  Functions: F_First_Program F_Second_Program main\n'
               '  Fields: account_number amount balance name page_count '
               'penalty playing_time price title type_account withdraw year\n'
               '  Variables: account1 account2 book tape\n'
               '  Using: std\n'
               '  Usages: getdata showdata\n'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=298,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CONFIG_HPP',
          body='#define SFML_CONFIG_HPP'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=299,
          lineno=32,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VERSION_MAJOR',
          body='#define SFML_VERSION_MAJOR 2'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=300,
          lineno=33,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VERSION_MINOR',
          body='#define SFML_VERSION_MINOR 5'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=301,
          lineno=34,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VERSION_PATCH',
          body='#define SFML_VERSION_PATCH 1'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=302,
          lineno=44,
          tokens=12,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_WINDOWS',
          body='#define SFML_SYSTEM_WINDOWS\n    #ifndef NOMINMAX'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=303,
          lineno=46,
          tokens=8,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='NOMINMAX',
          body='#define NOMINMAX\n    #endif'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=304,
          lineno=57,
          tokens=12,
          depth=4,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_IOS',
          body='#define SFML_SYSTEM_IOS\n\n    #elif TARGET_OS_MAC'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=305,
          lineno=62,
          tokens=10,
          depth=4,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_MACOS',
          body='#define SFML_SYSTEM_MACOS\n\n    #else'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=306,
          lineno=77,
          tokens=13,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_ANDROID',
          body='#define SFML_SYSTEM_ANDROID\n\n    #elif defined(__linux__)'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=307,
          lineno=82,
          tokens=21,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_LINUX',
          body='#define SFML_SYSTEM_LINUX\n'
               '\n'
               '    #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=308,
          lineno=87,
          tokens=15,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_FREEBSD',
          body='#define SFML_SYSTEM_FREEBSD\n\n    #elif defined(__OpenBSD__)'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=309,
          lineno=92,
          tokens=10,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_OPENBSD',
          body='#define SFML_SYSTEM_OPENBSD\n\n    #else'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=310,
          lineno=114,
          tokens=4,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEBUG',
          body='#define SFML_DEBUG'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=311,
          lineno=127,
          tokens=9,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_API_EXPORT',
          body='#define SFML_API_EXPORT __declspec(dllexport)'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=312,
          lineno=128,
          tokens=11,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_API_IMPORT',
          body='#define SFML_API_IMPORT __declspec(dllimport)'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=313,
          lineno=143,
          tokens=14,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_API_EXPORT',
          body='#define SFML_API_EXPORT __attribute__ ((__visibility__ '
               '("default")))'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=314,
          lineno=144,
          tokens=14,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_API_IMPORT',
          body='#define SFML_API_IMPORT __attribute__ ((__visibility__ '
               '("default")))'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=315,
          lineno=149,
          tokens=26,
          depth=6,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_API_EXPORT',
          body='#define SFML_API_EXPORT\n'
               '            #define SFML_API_IMPORT#define SFML_API_EXPORT\n'
               '    #define SFML_API_IMPORT'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=316,
          lineno=179,
          tokens=4,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEPRECATED',
          body='#define SFML_DEPRECATED'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=317,
          lineno=186,
          tokens=9,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEPRECATED',
          body='#define SFML_DEPRECATED __declspec(deprecated)'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=318,
          lineno=191,
          tokens=10,
          depth=4,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEPRECATED',
          body='#define SFML_DEPRECATED __attribute__ ((deprecated))'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=319,
          lineno=198,
          tokens=4,
          depth=5,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEPRECATED',
          body='#define SFML_DEPRECATED'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=320,
          lineno=213,
          tokens=7,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Int8',
          body='typedef signed   char Int8;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=321,
          lineno=214,
          tokens=6,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Uint8',
          body='typedef unsigned char Uint8;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=322,
          lineno=217,
          tokens=7,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Int16',
          body='typedef signed   short Int16;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=323,
          lineno=218,
          tokens=6,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Uint16',
          body='typedef unsigned short Uint16;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=324,
          lineno=221,
          tokens=7,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Int32',
          body='typedef signed   int Int32;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=325,
          lineno=222,
          tokens=6,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Uint32',
          body='typedef unsigned int Uint32;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=326,
          lineno=226,
          tokens=9,
          depth=4,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Int64',
          body='typedef signed   __int64 Int64;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=327,
          lineno=227,
          tokens=15,
          depth=4,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Uint64',
          body='typedef unsigned __int64 Uint64;typedef unsigned long long '
               'Uint64;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=328,
          lineno=229,
          tokens=8,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Int64',
          body='typedef signed   long long Int64;'),
 Fragment(document_cs='135ec10d4ccd3f67f1297817033c8f31234f14b48ddd30a186ae096017005054',
          id=329,
          lineno=1,
          tokens=90,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Typedefs: Int16 Int32 Int64 Int8 Uint16 Uint32 Uint64 Uint8\n'
               '  Macros: NOMINMAX SFML_API_EXPORT SFML_API_IMPORT '
               'SFML_CONFIG_HPP SFML_DEBUG SFML_DEPRECATED SFML_SYSTEM_ANDROID '
               'SFML_SYSTEM_FREEBSD SFML_SYSTEM_IOS SFML_SYSTEM_LINUX '
               'SFML_SYSTEM_MACOS SFML_SYSTEM_OPENBSD SFML_SYSTEM_WINDOWS '
               'SFML_VERSION_MAJOR SFML_VERSION_MINOR SFML_VERSION_PATCH\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=330,
          lineno=44,
          tokens=227,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='class Event\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Size events parameters (Resized)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct SizeEvent\n'
               '    {\n'
               '        unsigned int width;  ///< New width, in pixels\n'
               '        unsigned int height; ///< New height, in pixels\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Keyboard event parameters (KeyPressed, '
               'KeyReleased)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct KeyEvent\n'
               '    {\n'
               '        Keyboard::Key code;    ///< Code of the key that has '
               'been pressed\n'
               '        bool          alt;     ///< Is the Alt key pressed?\n'
               '        bool          control; ///< Is the Control key '
               'pressed?\n'
               '        bool          shift;   ///< Is the Shift key pressed?\n'
               '        bool          system;  ///< Is the System key '
               'pressed?\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Text event parameters (TextEntered)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct TextEvent\n'
               '    {\n'
               '        Uint32 unicode; ///< UTF-32 Unicode value of the '
               'character\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Mouse move event parameters (MouseMoved)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=331,
          lineno=84,
          tokens=199,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='    struct MouseMoveEvent\n'
               '    {\n'
               '        int x; ///< X position of the mouse pointer, relative '
               'to the left of the owner window\n'
               '        int y; ///< Y position of the mouse pointer, relative '
               'to the top of the owner window\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Mouse buttons events parameters\n'
               '    ///        (MouseButtonPressed, MouseButtonReleased)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct MouseButtonEvent\n'
               '    {\n'
               '        Mouse::Button button; ///< Code of the button that has '
               'been pressed\n'
               '        int           x;      ///< X position of the mouse '
               'pointer, relative to the left of the owner window\n'
               '        int           y;      ///< Y position of the mouse '
               'pointer, relative to the top of the owner window\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Mouse wheel events parameters '
               '(MouseWheelMoved)\n'
               '    ///\n'
               '    /// \\deprecated This event is deprecated and potentially '
               'inaccurate.\n'
               '    ///             Use MouseWheelScrollEvent instead.\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=332,
          lineno=109,
          tokens=234,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='    struct MouseWheelEvent\n'
               '    {\n'
               '        int delta; ///< Number of ticks the wheel has moved '
               '(positive is up, negative is down)\n'
               '        int x;     ///< X position of the mouse pointer, '
               'relative to the left of the owner window\n'
               '        int y;     ///< Y position of the mouse pointer, '
               'relative to the top of the owner window\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Mouse wheel events parameters '
               '(MouseWheelScrolled)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct MouseWheelScrollEvent\n'
               '    {\n'
               '        Mouse::Wheel wheel; ///< Which wheel (for mice with '
               'multiple ones)\n'
               '        float        delta; ///< Wheel offset (positive is '
               'up/left, negative is down/right). High-precision mice may use '
               'non-integral offsets.\n'
               '        int          x;     ///< X position of the mouse '
               'pointer, relative to the left of the owner window\n'
               '        int          y;     ///< Y position of the mouse '
               'pointer, relative to the top of the owner window\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Joystick connection events parameters\n'
               '    ///        (JoystickConnected, JoystickDisconnected)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=333,
          lineno=133,
          tokens=169,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='    struct JoystickConnectEvent\n'
               '    {\n'
               '        unsigned int joystickId; ///< Index of the joystick '
               '(in range [0 .. Joystick::Count - 1])\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Joystick axis move event parameters '
               '(JoystickMoved)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct JoystickMoveEvent\n'
               '    {\n'
               '        unsigned int   joystickId; ///< Index of the joystick '
               '(in range [0 .. Joystick::Count - 1])\n'
               '        Joystick::Axis axis;       ///< Axis on which the '
               'joystick moved\n'
               '        float          position;   ///< New position on the '
               'axis (in range [-100 .. 100])\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Joystick buttons events parameters\n'
               '    ///        (JoystickButtonPressed, '
               'JoystickButtonReleased)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=334,
          lineno=154,
          tokens=182,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='    struct JoystickButtonEvent\n'
               '    {\n'
               '        unsigned int joystickId; ///< Index of the joystick '
               '(in range [0 .. Joystick::Count - 1])\n'
               '        unsigned int button;     ///< Index of the button that '
               'has been pressed (in range [0 .. Joystick::ButtonCount - 1])\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Touch events parameters (TouchBegan, '
               'TouchMoved, TouchEnded)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    struct TouchEvent\n'
               '    {\n'
               '        unsigned int finger; ///< Index of the finger in case '
               'of multi-touch events\n'
               '        int x;               ///< X position of the touch, '
               'relative to the left of the owner window\n'
               '        int y;               ///< Y position of the touch, '
               'relative to the top of the owner window\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Sensor event parameters (SensorChanged)\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=335,
          lineno=175,
          tokens=88,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='    struct SensorEvent\n'
               '    {\n'
               '        Sensor::Type type; ///< Type of the sensor\n'
               '        float x;           ///< Current value of the sensor on '
               'X axis\n'
               '        float y;           ///< Current value of the sensor on '
               'Y axis\n'
               '        float z;           ///< Current value of the sensor on '
               'Z axis\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Enumeration of the different types of events\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=336,
          lineno=187,
          tokens=235,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='    enum EventType\n'
               '    {\n'
               '        Closed,                 ///< The window requested to '
               'be closed (no data)\n'
               '        Resized,                ///< The window was resized '
               '(data in event.size)\n'
               '        LostFocus,              ///< The window lost the focus '
               '(no data)\n'
               '        GainedFocus,            ///< The window gained the '
               'focus (no data)\n'
               '        TextEntered,            ///< A character was entered '
               '(data in event.text)\n'
               '        KeyPressed,             ///< A key was pressed (data '
               'in event.key)\n'
               '        KeyReleased,            ///< A key was released (data '
               'in event.key)\n'
               '        MouseWheelMoved,        ///< The mouse wheel was '
               'scrolled (data in event.mouseWheel) (deprecated)\n'
               '        MouseWheelScrolled,     ///< The mouse wheel was '
               'scrolled (data in event.mouseWheelScroll)\n'
               '        MouseButtonPressed,     ///< A mouse button was '
               'pressed (data in event.mouseButton)\n'
               '        MouseButtonReleased,    ///< A mouse button was '
               'released (data in event.mouseButton)\n'
               '        MouseMoved,             ///< The mouse cursor moved '
               '(data in event.mouseMove)\n'
               '        MouseEntered,           ///< The mouse cursor entered '
               'the area of the window (no data)\n'
               '        MouseLeft,'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=337,
          lineno=202,
          tokens=217,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='              ///< The mouse cursor left the area of the '
               'window (no data)\n'
               '        JoystickButtonPressed,  ///< A joystick button was '
               'pressed (data in event.joystickButton)\n'
               '        JoystickButtonReleased, ///< A joystick button was '
               'released (data in event.joystickButton)\n'
               '        JoystickMoved,          ///< The joystick moved along '
               'an axis (data in event.joystickMove)\n'
               '        JoystickConnected,      ///< A joystick was connected '
               '(data in event.joystickConnect)\n'
               '        JoystickDisconnected,   ///< A joystick was '
               'disconnected (data in event.joystickConnect)\n'
               '        TouchBegan,             ///< A touch event began (data '
               'in event.touch)\n'
               '        TouchMoved,             ///< A touch moved (data in '
               'event.touch)\n'
               '        TouchEnded,             ///< A touch event ended (data '
               'in event.touch)\n'
               '        SensorChanged,          ///< A sensor value changed '
               '(data in event.sensor)\n'
               '\n'
               '        Count                   ///< Keep last -- the total '
               'number of event types\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    // Member data\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    EventType type; ///< Type of the event\n'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=338,
          lineno=220,
          tokens=136,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='\n'
               '    union\n'
               '    {\n'
               '        SizeEvent             size;              ///< Size '
               'event parameters (Event::Resized)\n'
               '        KeyEvent              key;               ///< Key '
               'event parameters (Event::KeyPressed, Event::KeyReleased)\n'
               '        TextEvent             text;              ///< Text '
               'event parameters (Event::TextEntered)\n'
               '        MouseMoveEvent        mouseMove;         ///< Mouse '
               'move event parameters (Event::MouseMoved)\n'
               '        MouseButtonEvent      mouseButton;       ///< Mouse '
               'button event parameters (Event::MouseButtonPressed, '
               'Event::MouseButtonReleased)\n'
               '        MouseWheelEvent       mouseWheel;        ///< Mouse '
               'wheel event parameters (Event::MouseWheelMoved) (deprecated)\n'
               '        MouseWheelScrollEvent mouseWhe'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=339,
          lineno=229,
          tokens=150,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='elScroll;  ///< Mouse wheel event parameters '
               '(Event::MouseWheelScrolled)\n'
               '        JoystickMoveEvent     joystickMove;      ///< Joystick '
               'move event parameters (Event::JoystickMoved)\n'
               '        JoystickButtonEvent   joystickButton;    ///< Joystick '
               'button event parameters (Event::JoystickButtonPressed, '
               'Event::JoystickButtonReleased)\n'
               '        JoystickConnectEvent  joystickConnect;   ///< Joystick '
               '(dis)connect event parameters (Event::JoystickConnected, '
               'Event::JoystickDisconnected)\n'
               '        TouchEvent            touch;             ///< Touch '
               'events parameters (Event::TouchBegan, Event::TouchMoved, '
               'Event::TouchEnded)\n'
               '        SensorEvent           sensor;            ///< Sensor '
               'event parameters (Event::SensorChanged)\n'
               '    };\n'
               '}'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=340,
          lineno=187,
          tokens=214,
          depth=6,
          parent_id=None,
          category='enum',
          summary=False,
          name='EventType',
          body='enum EventType\n'
               '    {\n'
               '        Closed,                 ///< The window requested to '
               'be closed (no data)\n'
               '        Resized,                ///< The window was resized '
               '(data in event.size)\n'
               '        LostFocus,              ///< The window lost the focus '
               '(no data)\n'
               '        GainedFocus,            ///< The window gained the '
               'focus (no data)\n'
               '        TextEntered,            ///< A character was entered '
               '(data in event.text)\n'
               '        KeyPressed,             ///< A key was pressed (data '
               'in event.key)\n'
               '        KeyReleased,            ///< A key was released (data '
               'in event.key)\n'
               '        MouseWheelMoved,        ///< The mouse wheel was '
               'scrolled (data in event.mouseWheel) (deprecated)\n'
               '        MouseWheelScrolled,     ///< The mouse wheel was '
               'scrolled (data in event.mouseWheelScroll)\n'
               '        MouseButtonPressed,     ///< A mouse button was '
               'pressed (data in event.mouseButton)\n'
               '        MouseButtonReleased,    ///< A mouse button was '
               'released (data in event.mouseButton)\n'
               '        MouseMoved,             ///< The mouse cursor moved '
               '(data in event.mouseMove)\n'
               '        MouseEnter'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=341,
          lineno=201,
          tokens=215,
          depth=6,
          parent_id=None,
          category='enum',
          summary=False,
          name='EventType',
          body='ed,           ///< The mouse cursor entered the area of the '
               'window (no data)\n'
               '        MouseLeft,              ///< The mouse cursor left the '
               'area of the window (no data)\n'
               '        JoystickButtonPressed,  ///< A joystick button was '
               'pressed (data in event.joystickButton)\n'
               '        JoystickButtonReleased, ///< A joystick button was '
               'released (data in event.joystickButton)\n'
               '        JoystickMoved,          ///< The joystick moved along '
               'an axis (data in event.joystickMove)\n'
               '        JoystickConnected,      ///< A joystick was connected '
               '(data in event.joystickConnect)\n'
               '        JoystickDisconnected,   ///< A joystick was '
               'disconnected (data in event.joystickConnect)\n'
               '        TouchBegan,             ///< A touch event began (data '
               'in event.touch)\n'
               '        TouchMoved,             ///< A touch moved (data in '
               'event.touch)\n'
               '        TouchEnded,             ///< A touch event ended (data '
               'in event.touch)\n'
               '        SensorChanged,          ///< A sensor value changed '
               '(data in event.sensor)\n'
               '\n'
               '        Count                   ///< Keep last -- the total '
               'number of event types\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=342,
          lineno=54,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='width',
          body='unsigned int width;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=343,
          lineno=55,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='height',
          body='unsigned int height;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=344,
          lineno=64,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='code',
          body='Keyboard::Key code;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=345,
          lineno=65,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='alt',
          body='bool          alt;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=346,
          lineno=66,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='control',
          body='bool          control;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=347,
          lineno=67,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='shift',
          body='bool          shift;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=348,
          lineno=68,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='system',
          body='bool          system;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=349,
          lineno=77,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='unicode',
          body='Uint32 unicode;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=350,
          lineno=97,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='button',
          body='Mouse::Button button;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=351,
          lineno=111,
          tokens=3,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='delta',
          body='int delta;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=352,
          lineno=122,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='wheel',
          body='Mouse::Wheel wheel;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=353,
          lineno=123,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='delta',
          body='float        delta;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=354,
          lineno=135,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='joystickId',
          body='unsigned int joystickId;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=355,
          lineno=144,
          tokens=11,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='joystickId',
          body='unsigned int   joystickId;unsigned int joystickId;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=356,
          lineno=145,
          tokens=6,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='axis',
          body='Joystick::Axis axis;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=357,
          lineno=146,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='position',
          body='float          position;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=358,
          lineno=157,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='button',
          body='unsigned int button;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=359,
          lineno=166,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='finger',
          body='unsigned int finger;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=360,
          lineno=177,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='type',
          body='Sensor::Type type;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=361,
          lineno=219,
          tokens=3,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='type',
          body='EventType type;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=362,
          lineno=223,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='size',
          body='SizeEvent             size;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=363,
          lineno=224,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='key',
          body='KeyEvent              key;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=364,
          lineno=225,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='text',
          body='TextEvent             text;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=365,
          lineno=226,
          tokens=6,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='mouseMove',
          body='MouseMoveEvent        mouseMove;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=366,
          lineno=227,
          tokens=6,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='mouseButton',
          body='MouseButtonEvent      mouseButton;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=367,
          lineno=228,
          tokens=7,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='mouseWheel',
          body='MouseWheelEvent       mouseWheel;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=368,
          lineno=229,
          tokens=8,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='mouseWheelScroll',
          body='MouseWheelScrollEvent mouseWheelScroll;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=369,
          lineno=230,
          tokens=8,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='joystickMove',
          body='JoystickMoveEvent     joystickMove;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=370,
          lineno=231,
          tokens=8,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='joystickButton',
          body='JoystickButtonEvent   joystickButton;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=371,
          lineno=232,
          tokens=8,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='joystickConnect',
          body='JoystickConnectEvent  joystickConnect;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=372,
          lineno=233,
          tokens=4,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='touch',
          body='TouchEvent            touch;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=373,
          lineno=234,
          tokens=5,
          depth=8,
          parent_id=None,
          category='field',
          summary=False,
          name='sensor',
          body='SensorEvent           sensor;'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=374,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_EVENT_HPP',
          body='#define SFML_EVENT_HPP'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=375,
          lineno=52,
          tokens=33,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='SizeEvent',
          body='struct SizeEvent\n'
               '    {\n'
               '        unsigned int width;  ///< New width, in pixels\n'
               '        unsigned int height; ///< New height, in pixels\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=376,
          lineno=62,
          tokens=75,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='KeyEvent',
          body='struct KeyEvent\n'
               '    {\n'
               '        Keyboard::Key code;    ///< Code of the key that has '
               'been pressed\n'
               '        bool          alt;     ///< Is the Alt key pressed?\n'
               '        bool          control; ///< Is the Control key '
               'pressed?\n'
               '        bool          shift;   ///< Is the Shift key pressed?\n'
               '        bool          system;  ///< Is the System key '
               'pressed?\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=377,
          lineno=75,
          tokens=23,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='TextEvent',
          body='struct TextEvent\n'
               '    {\n'
               '        Uint32 unicode; ///< UTF-32 Unicode value of the '
               'character\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=378,
          lineno=84,
          tokens=51,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='MouseMoveEvent',
          body='struct MouseMoveEvent\n'
               '    {\n'
               '        int x; ///< X position of the mouse pointer, relative '
               'to the left of the owner window\n'
               '        int y; ///< Y position of the mouse pointer, relative '
               'to the top of the owner window\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=379,
          lineno=95,
          tokens=70,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='MouseButtonEvent',
          body='struct MouseButtonEvent\n'
               '    {\n'
               '        Mouse::Button button; ///< Code of the button that has '
               'been pressed\n'
               '        int           x;      ///< X position of the mouse '
               'pointer, relative to the left of the owner window\n'
               '        int           y;      ///< Y position of the mouse '
               'pointer, relative to the top of the owner window\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=380,
          lineno=109,
          tokens=74,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='MouseWheelEvent',
          body='struct MouseWheelEvent\n'
               '    {\n'
               '        int delta; ///< Number of ticks the wheel has moved '
               '(positive is up, negative is down)\n'
               '        int x;     ///< X position of the mouse pointer, '
               'relative to the left of the owner window\n'
               '        int y;     ///< Y position of the mouse pointer, '
               'relative to the top of the owner window\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=381,
          lineno=120,
          tokens=102,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='MouseWheelScrollEvent',
          body='struct MouseWheelScrollEvent\n'
               '    {\n'
               '        Mouse::Wheel wheel; ///< Which wheel (for mice with '
               'multiple ones)\n'
               '        float        delta; ///< Wheel offset (positive is '
               'up/left, negative is down/right). High-precision mice may use '
               'non-integral offsets.\n'
               '        int          x;     ///< X position of the mouse '
               'pointer, relative to the left of the owner window\n'
               '        int          y;     ///< Y position of the mouse '
               'pointer, relative to the top of the owner window\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=382,
          lineno=133,
          tokens=35,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='JoystickConnectEvent',
          body='struct JoystickConnectEvent\n'
               '    {\n'
               '        unsigned int joystickId; ///< Index of the joystick '
               '(in range [0 .. Joystick::Count - 1])\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=383,
          lineno=142,
          tokens=73,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='JoystickMoveEvent',
          body='struct JoystickMoveEvent\n'
               '    {\n'
               '        unsigned int   joystickId; ///< Index of the joystick '
               '(in range [0 .. Joystick::Count - 1])\n'
               '        Joystick::Axis axis;       ///< Axis on which the '
               'joystick moved\n'
               '        float          position;   ///< New position on the '
               'axis (in range [-100 .. 100])\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=384,
          lineno=154,
          tokens=65,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='JoystickButtonEvent',
          body='struct JoystickButtonEvent\n'
               '    {\n'
               '        unsigned int joystickId; ///< Index of the joystick '
               '(in range [0 .. Joystick::Count - 1])\n'
               '        unsigned int button;     ///< Index of the button that '
               'has been pressed (in range [0 .. Joystick::ButtonCount - 1])\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=385,
          lineno=164,
          tokens=67,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='TouchEvent',
          body='struct TouchEvent\n'
               '    {\n'
               '        unsigned int finger; ///< Index of the finger in case '
               'of multi-touch events\n'
               '        int x;               ///< X position of the touch, '
               'relative to the left of the owner window\n'
               '        int y;               ///< Y position of the touch, '
               'relative to the top of the owner window\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=386,
          lineno=175,
          tokens=65,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='SensorEvent',
          body='struct SensorEvent\n'
               '    {\n'
               '        Sensor::Type type; ///< Type of the sensor\n'
               '        float x;           ///< Current value of the sensor on '
               'X axis\n'
               '        float y;           ///< Current value of the sensor on '
               'Y axis\n'
               '        float z;           ///< Current value of the sensor on '
               'Z axis\n'
               '    }'),
 Fragment(document_cs='13f6b8b5af6ca82c6d854ca659183de6cfbe1f52881899ad01a83012868fb943',
          id=387,
          lineno=1,
          tokens=97,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Event\n'
               '  Structs: JoystickButtonEvent JoystickConnectEvent '
               'JoystickMoveEvent KeyEvent MouseButtonEvent MouseMoveEvent '
               'MouseWheelEvent MouseWheelScrollEvent SensorEvent SizeEvent '
               'TextEvent TouchEvent\n'
               '  Enums: EventType\n'
               '  Macros: SFML_EVENT_HPP\n'
               '  Fields: alt axis button code control delta finger height '
               'joystickButton joystickConnect joystickId joystickMove key '
               'mouseButton mouseMove mouseWheel mouseWheelScroll position '
               'sensor shift size system text touch type unicode wheel width\n'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=388,
          lineno=39,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='SocketSelector',
          body='class SocketSelector'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=389,
          lineno=45,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=390,
          lineno=96,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setBlocking',
          body='setBlocking(bool blocking)'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=391,
          lineno=106,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isBlocking',
          body='isBlocking() const'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=392,
          lineno=128,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Socket',
          body='Socket(Type type)'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=393,
          lineno=140,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getHandle',
          body='getHandle() const'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=394,
          lineno=148,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create()'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=395,
          lineno=159,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(SocketHandle handle)'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=396,
          lineno=167,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='close',
          body='close()'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=397,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOCKET_HPP',
          body='#define SFML_SOCKET_HPP'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=398,
          lineno=176,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_type',
          body='Type         m_type;'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=399,
          lineno=177,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_socket',
          body='SocketHandle m_socket;'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=400,
          lineno=178,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_isBlocking',
          body='bool         m_isBlocking;'),
 Fragment(document_cs='14d80f0c12e631fee70b9e3ca730e313c2ebbc200fc3eddcc1a8dfe53b3faca7',
          id=401,
          lineno=1,
          tokens=42,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_NETWORK_API SocketSelector\n'
               '  Macros: SFML_SOCKET_HPP\n'
               '  Functions: Socket close create getHandle isBlocking '
               'setBlocking\n'
               '  Variables: m_isBlocking m_socket m_type\n'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=402,
          lineno=31,
          tokens=16,
          depth=0,
          parent_id=None,
          category='enum',
          summary=False,
          name='Direction',
          body='enum Direction { STOP = 0, LEFT, RIGHT, UP, DOWN }'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=403,
          lineno=9,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='welcome',
          body='welcome()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=404,
          lineno=10,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='instructions',
          body='instructions()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=405,
          lineno=11,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='record',
          body='record()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=406,
          lineno=12,
          tokens=51,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='incorrectChoice',
          body='incorrectChoice()void incorrectChoice() {\n'
               '\tcout << "Please try again next time" << endl;\n'
               '\tcout << endl;\n'
               '\tchar back;\n'
               '\tcout << "To go back press any key" << endl;\n'
               '\tcin >> back;\n'
               '\tif (back) welcome();\n'
               '}'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=407,
          lineno=13,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='lostgame',
          body='lostgame()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=408,
          lineno=14,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='win',
          body='win()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=409,
          lineno=37,
          tokens=63,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Init',
          body='void Init() {\n'
               '\tgame = true;\n'
               '\tdir = STOP;\n'
               '\tx = width / 2;\n'
               '\ty = height / 2;\n'
               '\tfx = rand() % width;\n'
               '\tfy = rand() % height;\n'
               '\tscore = 0;\n'
               '\ttx[100] = {};\n'
               '\tty[100] = {};\n'
               '\n'
               '}Init()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=410,
          lineno=51,
          tokens=227,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Map',
          body='void Map() {\n'
               '\tsystem("cls");\n'
               '\tSetConsoleTextAttribute(hConsole, 180);\n'
               '\tfor (int i = 0; i < width + 2; i++)\n'
               '\t\tcout << "#";\n'
               '\tcout << endl;\n'
               '\n'
               '\tfor (int i = 0; i < height; i++)\n'
               '\t{\n'
               '\t\tfor (int j = 0; j < width; j++)\n'
               '\t\t{\n'
               '\t\t\tif (j == 0)\n'
               '\t\t\t\tcout << "#";\n'
               '\t\t\tif (i == y && j == x)\n'
               '\t\t\t\tcout << "O";\n'
               '\t\t\telse if (i == fy && j == fx)\n'
               '\t\t\t\tcout << "X";\n'
               '\t\t\telse\n'
               '\t\t\t{\n'
               '\t\t\t\tbool print = false;\n'
               '\t\t\t\tfor (int k = 0; k < nt; k++) {\n'
               '\t\t\t\t\tif (tx[k] == j && ty[k] == i)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\t\tcout << "o";\n'
               '\t\t\t\t\t\tprint = true;\n'
               '\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (!print)\n'
               '\t\t\t\t\tcout << " ";\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (j == width - 1)\n'
               '\t\t\t\tcout << "#";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=411,
          lineno=51,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Map',
          body='Map()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=412,
          lineno=88,
          tokens=39,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Map',
          body='\n'
               '\tfor (int i = 0; i < width + 2; i++)\n'
               '\t\tcout << "#";\n'
               '\tcout << endl;\n'
               '\tcout << "Score is " << score << endl;\n'
               '\n'
               '}'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=413,
          lineno=96,
          tokens=112,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Input',
          body='void Input() {\n'
               '\tif (_kbhit())\n'
               '\t{\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase 'a':\n"
               '\t\t\tdir = LEFT;\n'
               '\t\t\tbreak;\n'
               "\t\tcase 'd':\n"
               '\t\t\tdir = RIGHT;\n'
               '\t\t\tbreak;\n'
               "\t\tcase 'w':\n"
               '\t\t\tdir = UP;\n'
               '\t\t\tbreak;\n'
               "\t\tcase 's':\n"
               '\t\t\tdir = DOWN;\n'
               '\t\t\tbreak;\n'
               "\t\tcase 'x':\n"
               '\t\t\tgame = false;\n'
               '\t\t\tbreak;\n'
               "\t\tcase 'r':\n"
               '\t\t\tdir = STOP;\n'
               '\t\t\twelcome();\n'
               '\t\tdefault:\n'
               '\t\t\tbreak;\n'
               '\t}\n'
               '\n'
               '\t}\n'
               '}Input()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=414,
          lineno=126,
          tokens=213,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Logic',
          body='Logic()void Logic() {\n'
               '\n'
               '\tint prevx = tx[0];\n'
               '\tint prevy = ty[0];\n'
               '\tint prev2x, prev2y;\n'
               '\ttx[0] = x;\n'
               '\tty[0] = y;\n'
               '\tfor (int i = 1; i < nt; i++) {\n'
               '\t\tprev2x = tx[i];\n'
               '\t\tprev2y = ty[i];\n'
               '\t\ttx[i] = prevx;\n'
               '\t\tty[i] = prevy;\n'
               '\t\tprevx = prev2x;\n'
               '\t\tprevy = prev2y;\n'
               '\t}\n'
               '\n'
               '\n'
               '\n'
               '\tswitch (dir)\n'
               '\t{\n'
               '\tcase UP:\n'
               '\t\ty--;\n'
               '\t\tbreak;\n'
               '\tcase DOWN:\n'
               '\t\ty++;\n'
               '\t\tbreak;\n'
               '\tcase LEFT:\n'
               '\t\tx--;\n'
               '\t\tbreak;\n'
               '\tcase RIGHT:\n'
               '\t\tx++;\n'
               '\t\tbreak;\n'
               '\n'
               '\tdefault:\n'
               '\t\tbreak;\n'
               '\t}\n'
               '\tif (x >= width) x = 0; else if (x < 0) x = width - 1;\n'
               '\tif (y >= height) y = 0; else if (y < 0) y = height - 1;\n'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=415,
          lineno=164,
          tokens=84,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Logic',
          body='\n'
               '\tfor (int i = 0; i < nt; i++) {\n'
               '\t\tif (tx[i] == x && ty[i] == y) {\n'
               '\t\t\tlostgame();\n'
               '\t\t}\n'
               '\n'
               '\t}\n'
               '\n'
               '\tif (x == fx && y == fy) {\n'
               '\t\tscore += 1;\n'
               '\t\tnt++;\n'
               '\t\tfx = rand() % width;\n'
               '\t\tfy = rand() % height;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=416,
          lineno=180,
          tokens=107,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='win',
          body='void win() {\n'
               '\tif (score == 100) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << endl << endl << endl << endl << endl;\n'
               '\t\tcout << "                               ";\n'
               '\t\tcout << "Congratulations you won the game " << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "                               ";\n'
               '\t\tcout << "To go back please enter any key" << endl;\n'
               '\t\tchar back;\n'
               '\t\tcin >> back;\n'
               '\t\tif (back) {\n'
               '\t\t\twelcome();\n'
               '\t\t\tgame = false;\n'
               '\t\t}\n'
               '\t}\n'
               '}win()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=417,
          lineno=198,
          tokens=37,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='startGame',
          body='void startGame() {\n'
               '\tInit();\n'
               '\twhile (game) {\n'
               '\t\tMap();\n'
               '\t\tInput();\n'
               '\t\tLogic();\n'
               '\t\twin();\n'
               '\t\tSleep(10);\n'
               '\t}\n'
               '}startGame()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=418,
          lineno=209,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='welcome',
          body='void welcome() {\n'
               '\tsystem("cls");\n'
               '\tcout << endl << endl << endl << endl << endl << endl << '
               'endl;\n'
               '\tcout << "                               ";\n'
               '\tcout << "Welcome to the snake game!" << endl;\n'
               '\tcout << "                               " << "1. If you want '
               'to start game press 1" << endl;\n'
               '\tcout << "                               " << "2. To see '
               'instruction press 2" << endl;\n'
               '\tcout << "                               " << "3. To see '
               'record press 3" << endl;\n'
               '\tchar choice;\n'
               '\tcin >> choice;\n'
               '\tswitch (choice) {\n'
               "\tcase '1':\n"
               '\t\tsystem("cls");\n'
               '\t\tstartGame();\n'
               "\tcase '2':\n"
               '\t\tinstructions();\n'
               "\tcase '3':\n"
               '\t\trecord();\n'
               '\tdefault:\n'
               '\t\tincorrectChoice();\n'
               '\t}\n'
               '}welcome()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=419,
          lineno=232,
          tokens=222,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='instructions',
          body='void instructions() {\n'
               '\tsystem("cls");\n'
               '\tcout << endl << endl << endl << endl << endl << endl << '
               'endl;\n'
               '\tcout << "                               ";\n'
               '\tcout << "Welcome to the snake game!" << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "                               " << "Here are '
               'instructions" << endl;\n'
               '\tcout << "                               " << "1. If you '
               'reach current record you won the game" << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "                               " << "2. When you '
               'grow up in size you cannot touch yourself, " << endl << '
               '"                               " << "if you touch you will '
               'lose the game" << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "                               " << "3. When you '
               'grow up in size you cannot touch yourself," << endl << '
               '"                               " << "if you move backwards '
               'when you body is backward" << endl << '
               '"                               " << "you automatically lose '
               'the game" << endl;\n'
               '\tcout << endl;\n'
               '\tchar back;\n'
               '\tcout << "                               " << "To go back '
               'press any key" << endl;\n'
               '\tcin >> back;\n'
               '\tif (back) welcome();\n'
               '}instructions()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=420,
          lineno=251,
          tokens=123,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='record',
          body='void record() {\n'
               '\tsystem("cls");\n'
               '\tcout << endl << endl << endl << endl << endl << endl << '
               'endl;\n'
               '\tcout << "                               ";\n'
               '\tcout << "Welcome to the snake game!" << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "                               " << "Current record '
               'is 100" << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "                               " << "If you reach '
               '100 you will win the game" << endl;\n'
               '\tchar back;\n'
               '\tcout << endl;\n'
               '\tcout << "                               " << "To go back '
               'press any key" << endl;\n'
               '\tcin >> back;\n'
               '\tif (back) welcome();\n'
               '}record()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=421,
          lineno=267,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='incorrectChoice',
          body='incorrectChoice()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=422,
          lineno=275,
          tokens=107,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='lostgame',
          body='void lostgame() {\n'
               '\tgame = false;\n'
               '\tsystem("cls");\n'
               '\tcout << endl << endl << endl << endl << endl << endl << '
               'endl;\n'
               '\tcout << "                               ";\n'
               '\tcout << "Sorry you lost the game " << endl;\n'
               '\tcout << "                               " << "Your score was '
               '" << score << endl;\n'
               '\tcout << "                               ";\n'
               '\tcout << "To to back press any button" << endl;\n'
               '\tchar back;\n'
               '\tcin >> back;\n'
               '\tif (back) {\n'
               '\t\tgame = false;\n'
               '\t\twelcome();\n'
               '\t}\n'
               '\n'
               '}lostgame()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=423,
          lineno=293,
          tokens=24,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\tSetConsoleTextAttribute(hConsole, 116);\n'
               '\twelcome();\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=424,
          lineno=5,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=425,
          lineno=32,
          tokens=3,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='dir',
          body='Direction dir;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=426,
          lineno=130,
          tokens=9,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='prev2x',
          body='int prev2x, prev2y;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=427,
          lineno=189,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='back',
          body='char back;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=428,
          lineno=217,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice',
          body='char choice;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=429,
          lineno=245,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='back',
          body='char back;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=430,
          lineno=260,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='back',
          body='char back;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=431,
          lineno=270,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='back',
          body='char back;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=432,
          lineno=284,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='back',
          body='char back;'),
 Fragment(document_cs='1551cfa76c96ab5b452176d223b30eb029e57c3fb22b65d07d8a5ecd2dc6cec8',
          id=433,
          lineno=1,
          tokens=39,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Enums: Direction\n'
               '  Functions: Init Input Logic Map incorrectChoice instructions '
               'lostgame main record startGame welcome win\n'
               '  Variables: back choice dir prev2x\n'
               '  Using: std\n'),
 Fragment(document_cs='164b09052e5ac049937af135a11703b8090fbf74418dd78e3c8e8ec356354f48',
          id=434,
          lineno=6,
          tokens=179,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main4',
          body='int main4()\n'
               '{\n'
               '\tint year;\n'
               '\tcout << "Enter a Year: ";\n'
               '\tcin >> year;\n'
               '\tif (year % 4 == 0)\n'
               '\t{\n'
               '\t\tif (year % 100 == 0)\n'
               '\t\t{\n'
               '\t\t\tif (year % 400 == 0)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "Given " << year << " year is a leap." << '
               'endl;\n'
               '\t\t\t}\n'
               '\t\t\telse\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "Given " << year << " year isn\'t a leap." << '
               'endl;\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "Given " << year << " year is a leap year." << '
               'endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "Given " << year << " year isn\'t a leap." << '
               'endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main4()'),
 Fragment(document_cs='164b09052e5ac049937af135a11703b8090fbf74418dd78e3c8e8ec356354f48',
          id=435,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='164b09052e5ac049937af135a11703b8090fbf74418dd78e3c8e8ec356354f48',
          id=436,
          lineno=8,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='year',
          body='int year;'),
 Fragment(document_cs='164b09052e5ac049937af135a11703b8090fbf74418dd78e3c8e8ec356354f48',
          id=437,
          lineno=1,
          tokens=16,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main4\n  Variables: year\n  Using: std\n'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=438,
          lineno=38,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='TcpListener',
          body='class TcpListener'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=439,
          lineno=39,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='IpAddress',
          body='class IpAddress'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=440,
          lineno=40,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Packet',
          body='class Packet'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=441,
          lineno=46,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=442,
          lineno=223,
          tokens=5,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='Size',
          body='Uint32            Size;'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=443,
          lineno=224,
          tokens=8,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='SizeReceived',
          body='std::size_t       SizeReceived;'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=444,
          lineno=225,
          tokens=7,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='Data',
          body='std::vector<char> Data;'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=445,
          lineno=66,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalPort',
          body='getLocalPort() const'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=446,
          lineno=79,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getRemoteAddress',
          body='getRemoteAddress() const'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=447,
          lineno=92,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getRemotePort',
          body='getRemotePort() const'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=448,
          lineno=112,
          tokens=20,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='connect',
          body='connect(const IpAddress& remoteAddress, unsigned short '
               'remotePort, Time timeout = Time::Zero)'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=449,
          lineno=123,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='disconnect',
          body='disconnect()'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=450,
          lineno=141,
          tokens=12,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='send',
          body='send(const void* data, std::size_t size)'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=451,
          lineno=157,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='send',
          body='send(const void* data, std::size_t size, std::size_t& sent)'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=452,
          lineno=175,
          tokens=18,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='receive',
          body='receive(void* data, std::size_t size, std::size_t& received)'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=453,
          lineno=193,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='send',
          body='send(Packet& packet)'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=454,
          lineno=209,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='receive',
          body='receive(Packet& packet)'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=455,
          lineno=221,
          tokens=3,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='PendingPacket',
          body='PendingPacket()'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=456,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TCPSOCKET_HPP',
          body='#define SFML_TCPSOCKET_HPP'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=457,
          lineno=219,
          tokens=58,
          depth=5,
          parent_id=None,
          category='struct',
          summary=False,
          name='PendingPacket',
          body='struct PendingPacket\n'
               '    {\n'
               '        PendingPacket();\n'
               '\n'
               '        Uint32            Size;         ///< Data of packet '
               'size\n'
               '        std::size_t       SizeReceived; ///< Number of size '
               'bytes received so far\n'
               '        std::vector<char> Data;         ///< Data of the '
               'packet\n'
               '    }'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=458,
          lineno=231,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_pendingPacket',
          body='PendingPacket m_pendingPacket;'),
 Fragment(document_cs='18a3be75b776f3bd00e9d552ada4b36600e32d6d78c4364ae28bf7e053c010e5',
          id=459,
          lineno=1,
          tokens=70,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: IpAddress Packet SFML_NETWORK_API TcpListener\n'
               '  Structs: PendingPacket\n'
               '  Macros: SFML_TCPSOCKET_HPP\n'
               '  Functions: PendingPacket connect disconnect getLocalPort '
               'getRemoteAddress getRemotePort receive send\n'
               '  Fields: Data Size SizeReceived\n'
               '  Variables: m_pendingPacket\n'
               '  Usages: Zero\n'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=460,
          lineno=45,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=461,
          lineno=78,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(char ansiChar, const std::locale& locale = '
               'std::locale())'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=462,
          lineno=86,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(wchar_t wideChar)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=463,
          lineno=94,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(Uint32 utf32Char)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=464,
          lineno=106,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const char* ansiString, const std::locale& locale = '
               'std::locale())'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=465,
          lineno=118,
          tokens=21,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const std::string& ansiString, const std::locale& '
               'locale = std::locale())'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=466,
          lineno=126,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const wchar_t* wideString)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=467,
          lineno=134,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const std::wstring& wideString)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=468,
          lineno=142,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const Uint32* utf32String)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=469,
          lineno=150,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const std::basic_string<Uint32>& utf32String)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=470,
          lineno=158,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='String',
          body='String(const String& copy)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=471,
          lineno=172,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='fromUtf8',
          body='fromUtf8(T begin, T end)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=472,
          lineno=186,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='fromUtf16',
          body='fromUtf16(T begin, T end)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=473,
          lineno=204,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='fromUtf32',
          body='fromUtf32(T begin, T end)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=474,
          lineno=253,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toAnsiString',
          body='toAnsiString(const std::locale& locale = std::locale()) const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=475,
          lineno=266,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toWideString',
          body='toWideString() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=476,
          lineno=276,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf8',
          body='toUtf8() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=477,
          lineno=286,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf16',
          body='toUtf16() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=478,
          lineno=299,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf32',
          body='toUtf32() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=479,
          lineno=355,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='clear',
          body='clear()'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=480,
          lineno=365,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=481,
          lineno=375,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isEmpty',
          body='isEmpty() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=482,
          lineno=387,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='erase',
          body='erase(std::size_t position, std::size_t count = 1)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=483,
          lineno=399,
          tokens=12,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='insert',
          body='insert(std::size_t position, const String& str)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=484,
          lineno=413,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='find',
          body='find(const String& str, std::size_t start = 0) const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=485,
          lineno=427,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='replace',
          body='replace(std::size_t position, std::size_t length, const '
               'String& replaceWith)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=486,
          lineno=439,
          tokens=13,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='replace',
          body='replace(const String& searchFor, const String& replaceWith)'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=487,
          lineno=456,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='substring',
          body='substring(std::size_t position, std::size_t length = '
               'InvalidPos) const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=488,
          lineno=469,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getData',
          body='getData() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=489,
          lineno=479,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='begin',
          body='begin()'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=490,
          lineno=489,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='begin',
          body='begin() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=491,
          lineno=503,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='end',
          body='end()'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=492,
          lineno=517,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='end',
          body='end() const'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=493,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_STRING_HPP',
          body='#define SFML_STRING_HPP'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=494,
          lineno=53,
          tokens=14,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='ConstIterator',
          body='typedef std::basic_string<Uint32>::const_iterator '
               'ConstIterator;'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=495,
          lineno=58,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='InvalidPos',
          body='static const std::size_t InvalidPos;'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=496,
          lineno=527,
          tokens=11,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_string',
          body='std::basic_string<Uint32> m_string;'),
 Fragment(document_cs='1a319faaae3b8905d8b1131ed52003369e40abf30f8fef3fbf070ce26706c40f',
          id=497,
          lineno=1,
          tokens=80,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n'
               '  Typedefs: ConstIterator\n'
               '  Macros: SFML_STRING_HPP\n'
               '  Functions: String begin clear end erase find fromUtf16 '
               'fromUtf32 fromUtf8 getData getSize insert isEmpty replace '
               'substring toAnsiString toUtf16 toUtf32 toUtf8 toWideString\n'
               '  Variables: InvalidPos m_string\n'
               '  Usages: iterator locale\n'),
 Fragment(document_cs='1b60dae4296ad83111c7f96deb2f15742cd17094006c38cdb4afc7e54a54d332',
          id=498,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_WINDOWSTYLE_HPP',
          body='#define SFML_WINDOWSTYLE_HPP'),
 Fragment(document_cs='1b60dae4296ad83111c7f96deb2f15742cd17094006c38cdb4afc7e54a54d332',
          id=499,
          lineno=31,
          tokens=8,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='Style',
          body="namespace b'Style' {...}"),
 Fragment(document_cs='1b60dae4296ad83111c7f96deb2f15742cd17094006c38cdb4afc7e54a54d332',
          id=500,
          lineno=1,
          tokens=15,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_WINDOWSTYLE_HPP\n  Namespaces: Style\n'),
 Fragment(document_cs='1ba4d4cea71ca7b0026bbe915757530d016ea046c8d2757ff24c2bf808545094',
          id=501,
          lineno=1,
          tokens=83,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Operators\n'
               '\n'
               '1. C++ Program to Calculate Area and Circumference of Circle.\n'
               '2. C++ Program to Calculate Area of Scalene Triangle.\n'
               '3. C++ Program to Calculate Area of Equilateral Triangle.\n'
               '4. C++ Program to Calculate Area of Right angle Triangle.\n'
               '5. C++ Program to Calculate Area of Rectangle.\n'
               '6. C++ Program to Calculate Area of Square.'),
 Fragment(document_cs='1ba4d4cea71ca7b0026bbe915757530d016ea046c8d2757ff24c2bf808545094',
          id=502,
          lineno=1,
          tokens=7,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Operators\n'),
 Fragment(document_cs='1c8169e9d6f5156cccd6ef619862955c686a97fc93b1adb4328d92be40ba35f2',
          id=503,
          lineno=1,
          tokens=79,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Control Structures - if/else\n'
               '\n'
               '1. Program to convert temperature from degree centigrade to '
               'Fahrenheit.\n'
               '2. Program to show swap of two no’s without using third '
               'variable.\n'
               '3. Program to find greatest in 3 numbers.\n'
               '4. Program to find that entered year is leap year or not.\n'
               '5. Program to find whether given no is even or odd.'),
 Fragment(document_cs='1c8169e9d6f5156cccd6ef619862955c686a97fc93b1adb4328d92be40ba35f2',
          id=504,
          lineno=1,
          tokens=12,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Control Structures - if/else\n'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=505,
          lineno=43,
          tokens=10,
          depth=7,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_APIclass SFML_SYSTEM_API'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=506,
          lineno=78,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='open',
          body='open(const std::string& filename)'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=507,
          lineno=92,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='read',
          body='read(void* data, Int64 size)'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=508,
          lineno=102,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='seek',
          body='seek(Int64 position)'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=509,
          lineno=110,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='tell',
          body='tell()'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=510,
          lineno=118,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize()'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=511,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_FILEINPUTSTREAM_HPP',
          body='#define SFML_FILEINPUTSTREAM_HPP'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=512,
          lineno=41,
          tokens=7,
          depth=4,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=513,
          lineno=43,
          tokens=8,
          depth=6,
          parent_id=None,
          category='variable',
          summary=False,
          name='ResourceStream',
          body='class SFML_SYSTEM_API ResourceStream;'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=514,
          lineno=55,
          tokens=37,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='FileInputStream',
          body='class SFML_SYSTEM_API FileInputStream : public InputStream, '
               'NonCopyable\n'
               '{\n'
               'public:\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    FileInputStream();'),
 Fragment(document_cs='1ffa369e8b49072f3708d7b456cc349d808284a05d098349d0c3b9f81ef4944d',
          id=515,
          lineno=1,
          tokens=40,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n'
               '  Macros: SFML_FILEINPUTSTREAM_HPP\n'
               '  Functions: getSize open read seek tell\n'
               '  Variables: FileInputStream ResourceStream\n'
               '  Namespaces: priv\n'),
 Fragment(document_cs='224b1ea47c06ba7b8bc0ae311fe2972e472fdd188f3e27ff3be1c5b533805c9b',
          id=516,
          lineno=1,
          tokens=20,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='5\n10\n15\n20\n25\n30\n35\n40\n45\n50\n'),
 Fragment(document_cs='224b1ea47c06ba7b8bc0ae311fe2972e472fdd188f3e27ff3be1c5b533805c9b',
          id=517,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=518,
          lineno=6,
          tokens=186,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='FullName',
          body='class FullName\n'
               '{\n'
               'public:\n'
               '    FullName()\n'
               '    {\n'
               '        FirstName = "Rustam";\n'
               '        MiddleName = "Zokirov";\n'
               '        LastName = "Ibrohimovich";\n'
               '    }\n'
               '\n'
               '    FullName(string fName, string mName, string lName)\n'
               '    {\n'
               '        fName = FirstName;\n'
               '        mName = MiddleName;\n'
               '        lName = LastName;\n'
               '    }\n'
               '    void setFirstName(string f_Name)\n'
               '    {\n'
               '        FirstName = f_Name;\n'
               '    }\n'
               '    string getFirstName()\n'
               '    {\n'
               '        return FirstName;\n'
               '    }\n'
               '    void setMiddleName(string m_Name)\n'
               '    {\n'
               '        MiddleName = m_Name;\n'
               '    }\n'
               '    string getMiddleName()\n'
               '    {\n'
               '        return MiddleName;\n'
               '    }\n'
               '    void setLastName(string l_Name)\n'
               '    {\n'
               '        LastName = l_Name;\n'
               '    }\n'
               '    string getLastName()\n'
               '    {\n'
               '        return LastName;\n'
               '    }\n'
               '\n'
               'private:\n'
               '    string FirstName;\n'
               '    string MiddleName;\n'
               '    string LastName;\n'
               '}'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=519,
          lineno=53,
          tokens=206,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Player',
          body='class Player\n'
               '{\n'
               'private:\n'
               '    string Player_ID;\n'
               '    int Matches_Played;\n'
               '    FullName Player_Name;\n'
               '\n'
               'public:\n'
               '    static int Goals_Scored;\n'
               '\n'
               '    Player()\n'
               '    {\n'
               '        Player_ID = "U1910049";\n'
               '        Matches_Played = 100;\n'
               '    }\n'
               '    Player(string id, int matches, int goals)\n'
               '    {\n'
               '        Player_ID = id;\n'
               '        Matches_Played = matches;\n'
               '    }\n'
               '    void setPlayer_ID(string ID)\n'
               '    {\n'
               '        Player_ID = ID;\n'
               '    }\n'
               '    string getPlayer_ID()\n'
               '    {\n'
               '        return Player_ID;\n'
               '    }\n'
               '    void setMatches_Played(int Matches)\n'
               '    {\n'
               '        Matches_Played = Matches;\n'
               '    }\n'
               '    int getMatches_Played()\n'
               '    {\n'
               '        return Matches_Played;\n'
               '    }\n'
               '    /* void setGoals_Scored(int Goals) {\n'
               '         Matches_Played = Goals;\n'
               '     }\n'
               '     int getGoals_Scored() {\n'
               '         return Goals_Scored;\n'
               '     }*/\n'
               '    friend void Increse_GoalScored(Player);\n'
               '}'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=520,
          lineno=48,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='FirstName',
          body='string FirstName;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=521,
          lineno=49,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='MiddleName',
          body='string MiddleName;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=522,
          lineno=50,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='LastName',
          body='string LastName;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=523,
          lineno=56,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Player_ID',
          body='string Player_ID;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=524,
          lineno=57,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Matches_Played',
          body='int Matches_Played;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=525,
          lineno=58,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Player_Name',
          body='FullName Player_Name;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=526,
          lineno=61,
          tokens=7,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Goals_Scored',
          body='static int Goals_Scored;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=527,
          lineno=9,
          tokens=35,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='FullName',
          body='FullName()FullName()\n'
               '    {\n'
               '        FirstName = "Rustam";\n'
               '        MiddleName = "Zokirov";\n'
               '        LastName = "Ibrohimovich";\n'
               '    }'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=528,
          lineno=16,
          tokens=11,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='FullName',
          body='FullName(string fName, string mName, string lName)'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=529,
          lineno=16,
          tokens=32,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='FullName',
          body='FullName(string fName, string mName, string lName)\n'
               '    {\n'
               '        fName = FirstName;\n'
               '        mName = MiddleName;\n'
               '        lName = LastName;\n'
               '    }'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=530,
          lineno=63,
          tokens=24,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Player',
          body='Player()\n'
               '    {\n'
               '        Player_ID = "U1910049";\n'
               '        Matches_Played = 100;\n'
               '    }'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=531,
          lineno=63,
          tokens=2,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Player',
          body='Player()'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=532,
          lineno=68,
          tokens=37,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Player',
          body='Player(string id, int matches, int goals)\n'
               '    {\n'
               '        Player_ID = id;\n'
               '        Matches_Played = matches;\n'
               '    }Player(string id, int matches, int goals)'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=533,
          lineno=95,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Increse_GoalScored',
          body='Increse_GoalScored(Player)'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=534,
          lineno=99,
          tokens=34,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Increse_GoalScored',
          body='void Increse_GoalScored(Player player1)\n'
               '{\n'
               '    player1.Goals_Scored++;\n'
               '}Increse_GoalScored(Player player1)'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=535,
          lineno=104,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=536,
          lineno=104,
          tokens=139,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '    int choice;\n'
               '    while (1)\n'
               '    {\n'
               '\n'
               '        string firstName, middleName, lastName;\n'
               '        FullName fullName1;\n'
               '        // 2\n'
               '        string Id;\n'
               '        int goals, matches;\n'
               '        Player player1;\n'
               '        cout << "Add: First Name, Middle Name, Last Name: '
               '\\n\\n";\n'
               '        cout << "First Name: \\n";\n'
               '        cin >> firstName;\n'
               '        cout << "Middle Name: \\n";\n'
               '        cin >> middleName;\n'
               '        cout << "Last Name:\\n ";\n'
               '        cin >> lastName;\n'
               '\n'
               '        FullName fullName(firstName, middleName, lastName);\n'
               '        fullName.setFirstName(firstName);\n'
               '        fullName.setMiddleName(middleName);\n'
               '    '),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=537,
          lineno=124,
          tokens=8,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='fullName',
          body='fullName(firstName, middleName, lastName)'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=538,
          lineno=127,
          tokens=132,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='    fullName.setLastName(lastName);\n'
               '\n'
               '        cout << "Main menu: \\n";\n'
               '        cout << "[1] Add details\\n";\n'
               '        cout << "[2] Display details\\n";\n'
               '        cout << "[3] No. of goals\\n";\n'
               '        cout << "[4] Delete details\\n";\n'
               '        cout << "[0] Exit\\n";\n'
               '        cout << "Your Choice: ";\n'
               '\n'
               '        cin >> choice;\n'
               '        switch (choice)\n'
               '        {\n'
               '        case 1:\n'
               '            system("cls");\n'
               '            cout << "We have entered in the beginning!" << '
               'endl;\n'
               '            // fullName.setFirstName(firstName);\n'
               '            // fullName.setMiddleName(middleName);\n'
               '            // fullName'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=539,
          lineno=145,
          tokens=241,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='.setLastName(lastName);\n'
               '            /* FullName fullName(firstName, middleName, '
               'lastName);\n'
               '             fullName.setFirstName(firstName);\n'
               '             fullName.setMiddleName(middleName);\n'
               '             fullName.setLastName(lastName);*/\n'
               '\n'
               '            break;\n'
               '        case 2:\n'
               '            system("cls");\n'
               '            cout << "Details of the Player: \\n";\n'
               '            cout << "Id: ";\n'
               '            cin >> Id;\n'
               '            cout << "Matches_Played: ";\n'
               '            cin >> matches;\n'
               '            player1.setPlayer_ID(Id);\n'
               '            player1.setMatches_Played(matches);\n'
               '            cout << endl;\n'
               '            cout << player1.getPlayer_ID();\n'
               '            cout << fullName.getFirstName() << " " << '
               'fullName.getLastName() << " " << fullName.getMiddleName() << '
               'endl;\n'
               '            cout << player1.getMatches_Played();\n'
               '            break;\n'
               '        case 3:\n'
               '            system("cls");\n'
               '            cout << "Number of goals: \\n";\n'
               '            Increse_GoalScored(player1);\n'
               '            break;\n'
               '        case 4:\n'
               '            system("cls");\n'
               '            cout << "Deletion for finished successfully! '
               '\\n";\n'
               '            break;\n'
               '        case 5:\n'
               '            system("exit");\n'
               '        }\n'
               '    }\n'
               '    return 0;\n'
               '}'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=540,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=541,
          lineno=106,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice',
          body='int choice;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=542,
          lineno=110,
          tokens=8,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='firstName',
          body='string firstName, middleName, lastName;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=543,
          lineno=111,
          tokens=4,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='fullName1',
          body='FullName fullName1;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=544,
          lineno=113,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='Id',
          body='string Id;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=545,
          lineno=114,
          tokens=5,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='goals',
          body='int goals, matches;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=546,
          lineno=115,
          tokens=4,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='player1',
          body='Player player1;'),
 Fragment(document_cs='2255df417bc44c5e2e1da8f194c2307f98d21ed604ef8f8146cdaa19d86d3266',
          id=547,
          lineno=1,
          tokens=66,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: FullName Player\n'
               '  Functions: FullName Increse_GoalScored Player fullName main\n'
               '  Fields: FirstName Goals_Scored LastName Matches_Played '
               'MiddleName Player_ID Player_Name\n'
               '  Variables: Id choice firstName fullName1 goals player1\n'
               '  Using: std\n'
               '  Usages: Goals_Scored\n'),
 Fragment(document_cs='2591fb5e4fa0fc957272d2269a6387d7e8ca3ed4d3e938c54a957f7b1bd47608',
          id=548,
          lineno=7,
          tokens=157,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main7',
          body='main7()int main7() {\n'
               '\tint day ;\n'
               '\tcout << "Enter the number from 1 to 7: ";\n'
               '\tcin >> day;\n'
               '\tswitch (day) {\n'
               '\tcase 1:\n'
               '\t\tcout << "Monday" << endl;\n'
               '\t\tbreak;\n'
               '\tcase 2:\n'
               '\t\tcout << "Tuesday" << endl;\n'
               '\t\tbreak;\n'
               '\tcase 3:\n'
               '\t\tcout << "Wednesday" << endl;\n'
               '\t\tbreak;\n'
               '\tcase 4:\n'
               '\t\tcout << "Thursday" << endl;\n'
               '\t\tbreak;\n'
               '\tcase 5:\n'
               '\t\tcout << "Friday" << endl;\n'
               '\t\tbreak;\n'
               '\tcase 6:\n'
               '\t\tcout << "Saturday" << endl;\n'
               '\t\tbreak;\n'
               '\tcase 7:\n'
               '\t\tcout << "Sunday" << endl;\n'
               '\t\tbreak;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='2591fb5e4fa0fc957272d2269a6387d7e8ca3ed4d3e938c54a957f7b1bd47608',
          id=549,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='2591fb5e4fa0fc957272d2269a6387d7e8ca3ed4d3e938c54a957f7b1bd47608',
          id=550,
          lineno=8,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='day',
          body='int day ;'),
 Fragment(document_cs='2591fb5e4fa0fc957272d2269a6387d7e8ca3ed4d3e938c54a957f7b1bd47608',
          id=551,
          lineno=1,
          tokens=16,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main7\n  Variables: day\n  Using: std\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=552,
          lineno=27,
          tokens=21,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='User_1',
          body='User_1(Name_Memory, TellNum_Memory, Login_Memory, '
               'Parol_Memory)'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=553,
          lineno=45,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='F_General_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=554,
          lineno=46,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='F_Sign_in()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=555,
          lineno=47,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='F_Developers()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=556,
          lineno=48,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='F_Logo()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=557,
          lineno=49,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo_Owner',
          body='F_Logo_Owner()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=558,
          lineno=52,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='F_User_Main_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=559,
          lineno=53,
          tokens=10,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Table_For_Increasing_And_Decreasing',
          body='F_Table_For_Increasing_And_Decreasing()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=560,
          lineno=54,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='F_Vegetables_Fruits_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=561,
          lineno=55,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='F_Water_Beverages_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=562,
          lineno=56,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='F_Bread_Bakery_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=563,
          lineno=57,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='F_Cart_Check()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=564,
          lineno=59,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='F_Owner_Main_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=565,
          lineno=60,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='F_Owner_Products_Stotage()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=566,
          lineno=61,
          tokens=7,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Customers_List',
          body='F_Owner_Customers_List()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=567,
          lineno=65,
          tokens=29,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\n'
               '\t//Loading\n'
               '\tF_Loading();\n'
               '\tF_General_Menu();\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=568,
          lineno=76,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='F_General_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=569,
          lineno=76,
          tokens=250,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='void F_General_Menu() {\n'
               '\t// Main Menu \n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << "        A L I B A Z A '
               'R                                             A U T H E N T I '
               'C A T I O N     \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Authentication \\n" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   1. Sign in" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   2. Sign up" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   3. About" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   0. Exit" << endl << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Your Choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Sign in\n'
               '\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 50: {  // Register\n'
               '\t\t\t\t\t // Set details with validation \n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=570,
          lineno=100,
          tokens=242,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\tfor (int i = 0; i != 1;) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << "        A L I B A Z A '
               'R                                             R E G I S T R A '
               'T I O N         \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       Example of Registration: " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       ________________________" '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        User Name : Abdullokh " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Telephone : 974006102 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Login     : Alimov_8 " << '
               'endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Password  : Alimov808 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       ________________________" '
               '<< endl << endl;\n'
               '\t\t\t\tUser_Validtaion.SetUser();\n'
               '\n'
               '\t\t\t\t////////////\n'
               '\n'
               '\t\t\t\tValidationParol(User_Validtaion);\n'
               '\t\t\t\tValidationName(User_Validtaion);\n'
               '\t\t\t\tValidationTellNum(User_Validtaion);\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=571,
          lineno=119,
          tokens=175,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\t\tif (Validation == 3) {\n'
               '\t\t\t\t\t////// File Handling For User Info\n'
               '\t\t\t\t\tofstream User_Info;\n'
               '\t\t\t\t\tUser_Info.open("User_Info.txt", ios::app);  // '
               'Opening File\n'
               '\t\t\t\t\t// Setting User Info in Memory\n'
               '\t\t\t\t\tUser_Info << Name_Memory << endl;\n'
               '\t\t\t\t\tUser_Info << TellNum_Memory << endl;\n'
               '\t\t\t\t\tUser_Info << Login_Memory << endl;\n'
               '\t\t\t\t\tUser_Info << Parol_Memory << endl;\n'
               '\t\t\t\t\tUser_Info.close();\n'
               '\t\t\t\t\t///////// End of the File Handling\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t '
               '__________________________________" << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t      Correct Validation" << '
               'endl;\n'
               '\t\t\t\t\ti++;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\tPlease press any key to '
               'continue..." << endl << endl;\n'
               '\t\t\t\t\tsystem("Pause");\n'
               '\t\t\t\t\tValidation = 0;\n'
               '\t\t\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=572,
          lineno=137,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\t\telse {\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t '
               '__________________________________" << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t       Invalid Validation" << '
               'endl;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t    Please press any key to '
               'rewrite details..." << endl << endl;\n'
               '\t\t\t\t\tsystem("Pause"); system("cls");\n'
               '\t\t\t\t\tValidation = 0;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 51: {  // Developers\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Developers();\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 48: {  // Developers\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\n\\n\\n\\n\\t\\t\\t\\tThank you for your '
               'attention!\\n\\n\\n\\n\\n\\n\\n\\n\\n";\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: {  cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=573,
          lineno=172,
          tokens=199,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='void F_Developers() {\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                           A '
               'B O U T        \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\tcout << "\\n\\t\\t\\t\\t\'AliBazar\' Online Shopping '
               'Aplication " << endl << endl;\n'
               '\tcout << "\\t\\t\\t\\t   Team Name: EightSoft " << endl;\n'
               '\tcout << "\\t\\t\\t\\tTeam Section: OOP2 - '
               '004                         " << endl;\n'
               '\tcout << "\\t\\t\\t\\tTeam Members: " ;\n'
               '\tcout << "Alimov Abdullokh [U1910060]\\n\\t\\t\\t\\t\\t      '
               'Zokirov Rustam   [U1910049] " << endl;\n'
               '\n'
               '\tcout << "\\n\\n\\t\\t\\t\\tPress any key to go back to Menu '
               '\\n\\n" << endl;\n'
               '\tsystem("pause");\n'
               '\tF_General_Menu();\n'
               '}F_Developers()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=574,
          lineno=188,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='void F_Sign_in() {\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << "        A L I B A Z A '
               'R                                                       S I G '
               'N  I N          \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t     Sign in\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t1. Sign in as Owner" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t2. Sign in as User" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t0. Back" << endl << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=575,
          lineno=188,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='F_Sign_in()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=576,
          lineno=199,
          tokens=177,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='   Your Choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Sign in as Owner\n'
               '\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                          O W '
               'N E R          \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t        Owner '
               'Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tLogin    : "; cin >> '
               'Login_Sign;\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tPassword : "; cin >> '
               'Parol_Sign;\n'
               '\t\t\tif (Login_Sign == Owner_Login_Sign && Parol_Sign == '
               'Owner_Parol_Sign) {\n'
               "\t\t\t\t/////// Owner's Menu\n"
               '\t\t\t\tF_Owner_Main_Menu();\n'
               '\t\t\t\t//////\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=577,
          lineno=217,
          tokens=221,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body="\t\t\telse {  // If Login hasn't Registered\n"
               '\t\t\t\tcout << "\\n\\n\\t\\t\\t        Your Login and '
               'Password are Invalid." << endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t   Please press any key to go back '
               'to \'Sign in\' Menu.\\n\\n" << endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t\tF_Sign_in();\n'
               '\t\t\t}\n'
               '\t\t}   break;\n'
               '\n'
               '\t\tcase 50: {  // Sign in as User\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                     C U S T '
               'O M E R         \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Customer '
               'Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tLogin    : "; cin >> '
               'Login_Sign;\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tPassword : "; cin >> '
               'Parol_Sign;\n'
               '\n'
               '\t\t\t//////   File Handling For User Info\n'
               '\t\t\tifstream Search;\n'
               '\t\t\tSearch.open("User_Info.txt");\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=578,
          lineno=237,
          tokens=40,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='\t\t\twhile (Search) {\n'
               '\t\t\t\tSearch >> Name_Memory;\n'
               '\t\t\t\tSearch >> TellNum_Memory;\n'
               '\t\t\t\tSearch >> Login_Memory;\n'
               '\t\t\t\tSearch >> Parol_Memory;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=579,
          lineno=242,
          tokens=228,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='\t\t\t\tif (Login_Sign == Login_Memory && Parol_Sign == '
               'Parol_Memory) {\n'
               '\t\t\t\t\tUser User_1(Name_Memory, TellNum_Memory, '
               'Login_Memory, Parol_Memory);\n'
               '\t\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tSearch.close();\n'
               '\t\t\t///////// End of the File Handling\n'
               '\t\t\tcout << "\\n\\n\\t\\t\\t        Your Login and Password '
               'are Invalid." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t   Please press any key to go back to '
               '\'Sign in\' Menu.\\n\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tF_Sign_in();\n'
               '\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 48: {  // Back\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_General_Menu();\n'
               '\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=580,
          lineno=243,
          tokens=21,
          depth=13,
          parent_id=None,
          category='function',
          summary=False,
          name='User_1',
          body='User_1(Name_Memory, TellNum_Memory, Login_Memory, '
               'Parol_Memory)'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=581,
          lineno=275,
          tokens=56,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='void F_Logo() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                    8. '
               'Account Info         \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '}F_Logo()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=582,
          lineno=283,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='F_User_Main_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=583,
          lineno=283,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='void F_User_Main_Menu() {\n'
               '\t// Entering as a Guest\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\n'
               '\t\tF_Logo();\n'
               '\n'
               '\t\tcout << "       Categories\\n\\n";\n'
               '\t\tcout << "       1. Vegetables & Fruits\\n\\n";\n'
               '\t\tcout << "       2. Water & Beverages\\n\\n";\n'
               '\t\tcout << "       3. Bread & Bakery Products\\n\\n";\n'
               '\t\tcout << "       4. Cart and Overall Sums\\n\\n";\n'
               '\t\tcout << "       0. Go Back\\n\\n";\n'
               '\t\tcout << "       Your choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\tF_Vegetables_Fruits_Menu();'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=584,
          lineno=299,
          tokens=124,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 50: {\n'
               '\t\t\tF_Water_Beverages_Menu();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 51: {\n'
               '\t\t\tF_Bread_Bakery_Menu();\n'
               '\t\t}\n'
               '\t\tcase 52:\n'
               '\t\t{\n'
               '\t\t\tF_Cart_Check();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 48: {  // Back to Menu\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=585,
          lineno=322,
          tokens=218,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch \n'
               '\t} // for loop \n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=586,
          lineno=343,
          tokens=103,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Table_For_Increasing_And_Decreasing',
          body='void F_Table_For_Increasing_And_Decreasing() {\n'
               '\n'
               '\tcout << "     (+)   \'Press 1\'                        '
               '\\n";\n'
               '\tcout << "     (-)   \'Press 2\'                        '
               '\\n";\n'
               '\tcout << "     (0)   \'Back\'                           '
               '\\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\tcout << "     Add to Cart:  \\n";\n'
               '\t//cin >> VariableForIncreasingAndDecreasing;\n'
               '}F_Table_For_Increasing_And_Decreasing()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=587,
          lineno=354,
          tokens=126,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='void F_Vegetables_Fruits_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories -> Vegetables & Fruits \\t\\t '
               'Cart \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << " 1. Potatoes, Weight \\t\\t\\t\\t\\t"; cout << '
               'Potatoes.getQuantity() << " (kg)" << endl;\n'
               '\t\tcout << "    " << Potatoes.getPrice() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\tcout << " 2.'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=588,
          lineno=354,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='F_Vegetables_Fruits_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=589,
          lineno=361,
          tokens=140,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body=' Yellow Carrot, Weight \\t\\t\\t\\t"; cout << '
               'Carrot.getQuantity() << " (kg)" << endl;\n'
               '\t\tcout << "    " << Carrot.getPrice() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\tcout << " 3. Onion, Weight \\t\\t\\t\\t\\t"; cout << '
               'Onion.getQuantity() << " (kg)" << endl;\n'
               '\t\tcout << "    " << Onion.getPrice() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\t\t// for potatoes\n'
               '\t\tcase 49: {\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=590,
          lineno=370,
          tokens=132,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Vegetables & Fruits '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Potatoes, Weight \\t\\t\\t\\t\\t"; cout '
               '<< Potatoes.getQuantity() << " (kg)" << endl;\n'
               '\t\t\t\tcout << "     " << Potatoes.getPrice() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\t\t\t//\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=591,
          lineno=382,
          tokens=124,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Potatoes.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tUser_1.Potatoes_User++;\n'
               '\t\t\t\t\t\tPotatoes.quantity--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Potatoes (kg): " << '
               'User_1.Potatoes_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=592,
          lineno=395,
          tokens=167,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (User_1.Potatoes_User > 0) { // Check for (-1 '
               'kg)\n'
               '\t\t\t\t\t\tUser_1.Potatoes_User--;\n'
               '\t\t\t\t\t\tPotatoes.quantity++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Potatoes (kg): " << '
               'User_1.Potatoes_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // for carrot\n'
               '\t\tcase 50: {\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=593,
          lineno=413,
          tokens=132,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Vegetables & Fruits '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Carrot, Weight \\t\\t\\t\\t\\t"; cout << '
               'Carrot.getQuantity() << " (kg)" << endl;\n'
               '\t\t\t\tcout << "     " << Carrot.getPrice() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\t\t\t//\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=594,
          lineno=425,
          tokens=122,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Carrot.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tUser_1.Carrot_User++;\n'
               '\t\t\t\t\t\tCarrot.quantity--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Carrot (kg): " << '
               'User_1.Carrot_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=595,
          lineno=438,
          tokens=164,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (User_1.Carrot_User > 0) { // Check for (-1 kg)\n'
               '\t\t\t\t\t\tUser_1.Carrot_User--;\n'
               '\t\t\t\t\t\tCarrot.quantity++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Carrot (kg): " << '
               'User_1.Carrot_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // for onion\n'
               '\t\tcase 51: {\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=596,
          lineno=456,
          tokens=249,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Vegetables & Fruits '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Onion, Weight \\t\\t\\t\\t\\t"; cout << '
               'Onion.getQuantity() << " (kg)" << endl;\n'
               '\t\t\t\tcout << "     " << Onion.getPrice() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\t\t\t//\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Onion.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tUser_1.Onion_User++;\n'
               '\t\t\t\t\t\tOnion.quantity--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Onion (kg): " << '
               'User_1.Onion_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=597,
          lineno=481,
          tokens=248,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (User_1.Onion_User > 0) { // Check for (-1 kg)\n'
               '\t\t\t\t\t\tUser_1.Onion_User--;\n'
               '\t\t\t\t\t\tCarrot.quantity++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Carrot (kg): " << '
               'User_1.Onion_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\t//F_User_Main_Menu(); \n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"_________________________________________________'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=598,
          lineno=506,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='___________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\t} // loop ends\n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=599,
          lineno=524,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='F_Water_Beverages_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=600,
          lineno=524,
          tokens=123,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='void F_Water_Beverages_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories -> Water & Beverages \\t\\t\\t '
               'Cart \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << " 1. Water, Hydrolife without gas 500ml '
               '\\t\\t\\t"; cout << Water.getQuantity() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Water.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=601,
          lineno=531,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body=' << " 2. Pepsi 500ml   \\t\\t\\t\\t\\t"; cout << '
               'Pepsi.getQuantity() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Pepsi.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout << " 3. Nectar, Zet Apple 125ml \\t\\t\\t\\t"; cout '
               '<< Nectar.getQuantity() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Nectar.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Water\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=602,
          lineno=539,
          tokens=131,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Water & Beverages '
               '\\t\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Water, Hydrolife without gas 500ml '
               '\\t\\t"; cout << Water.getQuantity() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << Water.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=603,
          lineno=549,
          tokens=120,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Water.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tWater.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Water_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'User_1.Water_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=604,
          lineno=562,
          tokens=161,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (User_1.Water_User > 0) { // Check for (-1 kg)\n'
               '\t\t\t\t\t\tWater.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Water_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'User_1.Water_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for water\n"
               "\t\t\t}// 'for' loop for water\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 50: { // Pepsi\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=605,
          lineno=579,
          tokens=127,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Water & Beverages '
               '\\t\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "      Pepsi 500ml \\t\\t\\t\\t\\t"; cout << '
               'Pepsi.getQuantity() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "      " << Pepsi.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=606,
          lineno=589,
          tokens=125,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Pepsi.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tPepsi.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Pepsi_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'User_1.Pepsi_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=607,
          lineno=602,
          tokens=166,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (User_1.Pepsi_User > 0) { // Check for (-1 kg)\n'
               '\t\t\t\t\t\tPepsi.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Pepsi_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'User_1.Pepsi_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for water\n"
               "\t\t\t}// 'for' loop for water\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 51: { // Nectar\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=608,
          lineno=619,
          tokens=130,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Water & Beverages '
               '\\t\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "      Nectar 500ml \\t\\t\\t\\t\\t"; cout << '
               'Nectar.getQuantity() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "      " << Nectar.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=609,
          lineno=629,
          tokens=202,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Nectar.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tNectar.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Nectar_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'User_1.Nectar_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tif (User_1.Nectar_User > 0) { // Check for (-1 kg)\n'
               '\t\t\t\t\t\tNectar.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Nectar_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'User_1.Nectar_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=610,
          lineno=649,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for water\n"
               "\t\t\t}// 'for' loop for water\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"______________________________________________________'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=611,
          lineno=666,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='______________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\n'
               '\t} // loop ends\n'
               '\n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=612,
          lineno=686,
          tokens=10,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='void F_Bread_Bakery_Menu() {\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=613,
          lineno=686,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='F_Bread_Bakery_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=614,
          lineno=687,
          tokens=246,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories -> Bread & Bakery Products '
               '\\t\\t Cart \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << " 1. Pizza \\t\\t\\t\\t\\t\\t"; cout << '
               'Pizza.getQuantity() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Pizza.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout << " 2. Burger \\t\\t\\t\\t\\t\\t"; cout << '
               'Burger.getQuantity() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Burger.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout << " 3. Potatoe Fries \\t\\t\\t\\t\\t"; cout << '
               'Fries.getQuantity() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Fries.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Pizza\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=615,
          lineno=701,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Food Products \\t\\t Cart '
               '\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Pizza \\t\\t\\t\\t\\t"; cout << '
               'Pizza.getQuantity() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << Pizza.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Pizza.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tPizza.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Pizza_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Pizza (pc): " << '
               'User_1.Pizza_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=616,
          lineno=724,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (User_1.Pizza_User > 0) { // Check for (-1 pc)\n'
               '\t\t\t\t\t\tPizza.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Pizza_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Pizza (pc): " << '
               'User_1.Pizza_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 50: { // Burger\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=617,
          lineno=741,
          tokens=241,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Food Products \\t\\t Cart '
               '\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Burger \\t\\t\\t\\t\\t"; cout << '
               'Burger.getQuantity() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << Burger.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Burger.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tBurger.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Burger_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Burger (pc): " << '
               'User_1.Burger_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=618,
          lineno=764,
          tokens=163,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (User_1.Burger_User > 0) { // Check for (-1 pc)\n'
               '\t\t\t\t\t\tBurger.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Burger_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Burger (pc): " << '
               'User_1.Burger_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 51: { // Fries\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=619,
          lineno=781,
          tokens=246,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Food Products \\t\\t Cart '
               '\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Potatoe Fries \\t\\t\\t\\t"; cout << '
               'Fries.getQuantity() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << Fries.getPrice() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Fries.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tFries.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Fries_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of Fries (pc): " << '
               'User_1.Fries_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=620,
          lineno=804,
          tokens=244,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (User_1.Fries_User > 0) { // Check for (-1 pc)\n'
               '\t\t\t\t\t\tBurger.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Fries_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of Fries (pc): " << '
               'User_1.Fries_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"__________________________________________________'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=621,
          lineno=828,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='__________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\n'
               '\t} // loop ends\n'
               '\n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=622,
          lineno=848,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='void F_Cart_Check() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "                                              C A R '
               'T \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t// Check\n'
               '\tfor (int i = 1; i <= 1; i++) {\n'
               '\t\tif (User_1.Potatoes_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Potatoes, '
               'Weight    " << User_1.Potatoes_User << " (kg)    Price: " << '
               'User_1.Potatoes_User * Potatoes.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Potatoes_User * '
               'Potatoes.getPrice();\n'
               '\t\t}\n'
               '\t\t\n'
               '\t\tif (User_1.Carrot_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Carrot, '
               'Weight      " << User_1.Carrot_User << " (kg)    Price: " << '
               'User_1.Carrot_User * Carrot.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Carrot_User * Carrot.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=623,
          lineno=848,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='F_Cart_Check()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=624,
          lineno=866,
          tokens=173,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\n'
               '\t\tif (User_1.Onion_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Onion, '
               'Weight       " << User_1.Onion_User << " (kg)    Price: " << '
               'User_1.Onion_User * Onion.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Onion_User * Onion.getPrice();\n'
               '\t\t}\n'
               '\n'
               '\t\tif (User_1.Water_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Water, '
               '500ml        " << User_1.Water_User << " (pc)    Price: " << '
               'User_1.Water_User * Water.getPrice();\n'
               '\t\t\ti++; \n'
               '\t\t\tOverall_Sum += User_1.Water_User * Water.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=625,
          lineno=878,
          tokens=181,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (User_1.Pepsi_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Pepsi, '
               '500ml        " << User_1.Pepsi_User << " (pc)    Price: " << '
               'User_1.Pepsi_User * Pepsi.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Pepsi_User * Pepsi.getPrice();\n'
               '\t\t}\n'
               '\t\tif (User_1.Nectar_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Nectar, '
               '500ml       " << User_1.Nectar_User << " (pc)    Price: " << '
               'User_1.Nectar_User * Nectar.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Nectar_User * Nectar.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=626,
          lineno=888,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (User_1.Pizza_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Pizza\\t        '
               '" << User_1.Pizza_User << " (pc)\\t  Price: " << '
               'User_1.Pizza_User * Pizza.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Pizza_User * Pizza.getPrice();\n'
               '\t\t}\n'
               '\t\tif (User_1.Burger_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << '
               '"Burger\\t        " << User_1.Burger_User << " (pc)\\t  Price: '
               '" << User_1.Burger_User * Burger.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Burger_User * Burger.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=627,
          lineno=898,
          tokens=167,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (User_1.Fries_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << "." << "Fries\\t        '
               '" << User_1.Fries_User << " (pc)\\t  Price: " << '
               'User_1.Fries_User * Fries.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Fries_User * Fries.getPrice();\n'
               '\t\t}\n'
               '\n'
               '\t\tif (i == 1) { // if nothing go to Menu\n'
               '\t\t\tcout << "\\n\\t You do not have any product in '
               '\'CART\'.\\n";\n'
               '\t\t\tcout << "\\tPress any key to go to \'Products '
               'Menu\'\\n\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tOverall_Sum = 0;\n'
               '\t\t\tF_User_Main_Menu();\n'
               '\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=628,
          lineno=911,
          tokens=178,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (i > 1) { // Menu for buying or back \n'
               '\t\t\tcout << "\\n\\n\\t\\t\\t  Overall Price: " << '
               'Overall_Sum << " Sums" << endl;\n'
               '\t\t\tcout << "\\n\\t   1. Buy now" << endl;\n'
               '\t\t\tcout << "\\t   0. Products Menu" << endl;\n'
               '\n'
               '\t\t\tswitch (_getch()) {\n'
               '\t\t\tcase 49: { //buy\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t////\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << "                                              '
               'C A R T \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\n'
               '\t\t\t\t////\n'
               '\t\t\t\tcout << " Money will be taken from your \'Telephone '
               'Number\': " << endl;\n'
               '\t\t\t\tcout << " 1. OK" << endl;\n'
               '\t\t\t\tcout << " Press any key to go back..." << endl;\n'
               '\t\t\t\t'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=629,
          lineno=928,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='switch (_getch()) {\n'
               '\t\t\t\tcase 49: {\n'
               '\t\t\t\t\tcout << "\\n  Transaction Successful!\\n  '
               'Congratulations ! :)" << endl;\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tOverall_Sum = 0;\n'
               '\t\t\t\t\t// Storage\n'
               '\t\t\t\t\tUser_1.Potatoes_User = 0; User_1.Onion_User = 0; '
               'User_1.Carrot_User = 0;\n'
               '\t\t\t\t\tUser_1.Water_User = 0; User_1.Pepsi_User = 0; '
               'User_1.Nectar_User = 0;\n'
               '\t\t\t\t\tUser_1.Pizza_User = 0; User_1.Burger_User = 0; Use'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=630,
          lineno=936,
          tokens=124,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='r_1.Fries_User = 0;\n'
               '\t\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t\t}\n'
               '\t\t\t\t\t   break;\n'
               '\n'
               '\t\t\t\tdefault:  F_Cart_Check();\n'
               '\n'
               '\t\t\t\t} // switch of case 49\n'
               '\n'
               '\t\t\t\t////\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'
               '\t\t\t\t   break;\n'
               '\t\t\tcase 48: { // Back\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tOverall_Sum = 0;\n'
               '\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t}\n'
               '\t\t\t\t   break;\n'
               '\t\t\tdefault: F_Cart_Check();\n'
               '\t\t\t} // switch ends\n'
               '\n'
               '\t\t} //if ends\n'
               '\n'
               '\t}// loop end\n'
               '\t//system("pause");\n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=631,
          lineno=968,
          tokens=65,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo_Owner',
          body='void F_Logo_Owner() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                  O W N E R  '
               'M E N U         \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '}F_Logo_Owner()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=632,
          lineno=976,
          tokens=184,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='void F_Owner_Main_Menu() {\n'
               '\tsystem("cls");\n'
               '\tcout << endl << endl;\n'
               '\t// Entering as a Owner of shop\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo_Owner();\n'
               '\t\tcout << "       Main Menu\\n\\n";\n'
               '\t\tcout << "       1. Products in stock \\n\\n";\n'
               '\t\tcout << "       2. Customers list \\n\\n";\n'
               '\t\tcout << "       0. Back\\n\\n";\n'
               '\t\tcout << "       Your choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\tF_Owner_Products_Stotage();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 50: {\n'
               '\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                           C U S T O M E R '),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=633,
          lineno=976,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='F_Owner_Main_Menu()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=634,
          lineno=997,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='S  L I S T        \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\n\\t\\t\\t   Customers list :" << endl << '
               'endl;\n'
               '\n'
               '\t\t\tF_Owner_Customers_List();\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\n'
               '\t\tcase 48: {  // Back to Menu\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tk = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch \n'
               '\t} // for loop \n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=635,
          lineno=1023,
          tokens=204,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='void F_Owner_Products_Stotage() {\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tF_Logo_Owner();\n'
               '\t\tcout << "  Products List                                '
               'Category                    Price          In Stock\\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << " 1. Potatoes, Weight                          '
               'Vegetables & Fruits          " << Potatoes.getPrice() << '
               '"\\t\\t  " << Potatoes.getQuantity() << endl;\n'
               '\t\tcout << " 2. Yellow Carrot, Weight                     '
               'Vegetables & Fruits          " << Carrot.getPrice() << '
               '"\\t\\t  " << Carrot.getQuantity() << endl;\n'
               '\t\tcout << " 3. Onion, Weight                             '
               'Vegetables & Fruits          " << Onion.getPrice() << "\\t\\t  '
               '" << Onion.getQuantity() << endl;\n'
               '\t\tcout << " 4. Water                                     '
               'Water & Beverages            " << Water.getPrice() << "\\t\\t  '
               '" << Water.'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=636,
          lineno=1023,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='F_Owner_Products_Stotage()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=637,
          lineno=1031,
          tokens=211,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='getQuantity() << endl;\n'
               '\t\tcout << " 5. Pepsi                                     '
               'Water & Beverages            " << Pepsi.getPrice() << "\\t\\t  '
               '" << Pepsi.getQuantity() << endl;\n'
               '\t\tcout << " 6. Nector                                    '
               'Water & Beverages            " << Nectar.getPrice() << '
               '"\\t\\t  " << Nectar.getQuantity() << endl;\n'
               '\t\tcout << " 7. Pizza                                     '
               'Bread & Bakery Products      " << Pizza.getPrice() << "\\t  " '
               '<< Pizza.getQuantity() << endl;\n'
               '\t\tcout << " 8. Burger                                    '
               'Bread & Bakery Products      " << Burger.getPrice() << "\\t  " '
               '<< Burger.getQuantity() << endl;\n'
               '\t\tcout << " 9. Potatoe Fries                             '
               'Bread & Bakery Products      " << Fries.getPrice() << "\\t  " '
               '<< Fries.getQuantity() << endl;\n'
               '\t\tcout << " \\n 0. Back\\n";\n'
               '\t\tcout << " Make changes in: ";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=638,
          lineno=1042,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Potatoes, Weight                          '
               'Vegetables & Fruits             " << Potatoes.getPrice() << '
               '"\\t\\t " << Potatoes.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << " Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=639,
          lineno=1053,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tPotatoes.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << " Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tPotatoes.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '2':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=640,
          lineno=1084,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Yellow Carrot, Weight                     '
               'Vegetables & Fruits             " << Carrot.getPrice() << '
               '"\\t\\t " << Carrot.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 3. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=641,
          lineno=1094,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tCarrot.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tCarrot.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '3':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=642,
          lineno=1126,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Onion, Weight                             '
               'Vegetables & Fruits             " << Onion.getPrice() << '
               '"\\t\\t " << Onion.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=643,
          lineno=1136,
          tokens=217,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tOnion.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tOnion.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '4':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=644,
          lineno=1166,
          tokens=159,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Water, Hydrolife without gas 750ml        '
               'Water & Beverages               " << Water.getPrice() << '
               '"\\t\\t " << Water.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=645,
          lineno=1177,
          tokens=218,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\n'
               '\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tWater.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tWater.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '5':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=646,
          lineno=1208,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Drink, Aloe Original 500ml                '
               'Water & Beverages               " << Pepsi.getPrice() << '
               '"\\t\\t " << Pepsi.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=647,
          lineno=1219,
          tokens=220,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\n'
               '\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tPepsi.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tPepsi.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '6':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=648,
          lineno=1251,
          tokens=159,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Nectar, Zet Apple 125ml                   '
               'Water & Beverages               " << Nectar.getPrice() << '
               '"\\t\\t " << Nectar.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=649,
          lineno=1262,
          tokens=217,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tNectar.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tNectar.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '7':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=650,
          lineno=1292,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Pizza                                   '
               'Bread & Bakery Products           " << Pizza.getPrice() << '
               '"\\t " << Pizza.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=651,
          lineno=1302,
          tokens=217,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tPizza.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tPizza.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '8':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=652,
          lineno=1332,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Burger                                  '
               'Bread & Bakery Products           " << Burger.getPrice() << '
               '"\\t" << Burger.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=653,
          lineno=1342,
          tokens=217,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tBurger.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tBurger.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '9':\n"),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=654,
          lineno=1372,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Potatoe Fries                           '
               'Bread & Bakery Products           " << Fries.getPrice() << '
               '"\\t" << Fries.getQuantity() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=655,
          lineno=1382,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\n'
               '\t\t\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\t\t\tFries.price = Ch_Price;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> Ch_Quantity;\n'
               '\t\t\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\t\t\tFries.quantity = Ch_Quantity;\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=656,
          lineno=1401,
          tokens=161,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '0': {  // Back to Menu\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_Owner_Main_Menu();\n'
               '\t\t} break;\n'
               '\n'
               "\t\tcase 'i' || 'I': { // User info   \n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\n\\t\\t\\t   User Information:" << endl;;\n'
               '\t\t\tcout << "\\t\\t    _______________________________" << '
               'endl << endl;;\n'
               '\t\t\tcout << "\\t\\t      User Name  : "'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=657,
          lineno=1422,
          tokens=145,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body=' << Name_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t      Telephone  : " << TellNum_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Login      : " << Login_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Password   : " << Parol_Memory << '
               'endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t\t\t   break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\t\\t      Your choice is not '
               'available in Menu" << endl;\n'
               '\t\t\tcout << "\\t\\tPlease press any keyboard to continue '
               'program\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t} break;\n'
               '\n'
               '\t\t} // switch\n'
               '\n'
               '\t} // for loop for products in stock  \n'
               '}'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=658,
          lineno=1441,
          tokens=173,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Customers_List',
          body='void F_Owner_Customers_List() {\n'
               '\tcout << endl;\n'
               '\n'
               '\tifstream in;\n'
               '\tint Num = 1;\n'
               '\tstring Info;\n'
               '\n'
               '\tin.open("User_Info.txt");\n'
               '\twhile (in) {\n'
               '\t\tcout << "\\t " << Num << "." << endl;\n'
               '\t\tcout << "\\t-------------------------" << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t User Name: " << Info << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t Phone    : " << Info << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t Login    : " << Info << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t Password : " << Info << endl;\n'
               '\t\tNum++;\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tcout << "\\t-------------------------" << endl;\n'
               '\tin.close();\n'
               '}F_Owner_Customers_List()'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=659,
          lineno=23,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=660,
          lineno=26,
          tokens=7,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_Validtaion',
          body='Validation_C User_Validtaion;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=661,
          lineno=35,
          tokens=6,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Overall_Sum',
          body='long double Overall_Sum;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=662,
          lineno=36,
          tokens=9,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Ch_Price',
          body='long double Ch_Price, Ch_Quantity;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=663,
          lineno=121,
          tokens=4,
          depth=12,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_Info',
          body='ofstream User_Info;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=664,
          lineno=235,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='Search',
          body='ifstream Search;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=665,
          lineno=1446,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Info',
          body='string Info;'),
 Fragment(document_cs='26dff41de3b01f5b05ff1ec67718d0c63c7b480202bbf4690898eb56fc6e8e4a',
          id=666,
          lineno=1,
          tokens=114,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Bread_Bakery_Menu F_Cart_Check F_Developers '
               'F_General_Menu F_Logo F_Logo_Owner F_Owner_Customers_List '
               'F_Owner_Main_Menu F_Owner_Products_Stotage F_Sign_in '
               'F_Table_For_Increasing_And_Decreasing F_User_Main_Menu '
               'F_Vegetables_Fruits_Menu F_Water_Beverages_Menu User_1 main\n'
               '  Variables: Ch_Price Info Overall_Sum Search User_Info '
               'User_Validtaion\n'
               '  Using: std\n'
               '  Usages: app\n'),
 Fragment(document_cs='279f5a85296ac0f1e04c1f0d377b5c556b743d0721e9fc75f97d8f81f62f7494',
          id=667,
          lineno=4,
          tokens=228,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint a[10];\n'
               '\tint n = 10;\n'
               '\tcout << "Input numbers for into arrays." << endl;\n'
               '\tfor (int i = 0; i < n; i++)\n'
               '\t{\n'
               '\t\tcout << "a[" << i << "] = "; // input array\n'
               '\t\tcin >> a[i];\n'
               '\t}\n'
               '\tint value;\n'
               '\tint position;\n'
               '\tcout << "Enter value which you want to delete: ";\n'
               '\tcin >> value;\n'
               '\tfor (int i = 0; i < n; i++)\n'
               '\t{ // finding the position\n'
               '\t\tif (value == a[i])\n'
               '\t\t\tposition = i;\n'
               '\t}\n'
               '\tfor (int i = position; i < n; i++)\n'
               '\t{ // incrementing the array elements into 1\n'
               '\t\ta[i] = a[i + 1];\n'
               '\t}\n'
               '\tn = n - 1;\n'
               '\tfor (int i = 0; i < n; i++)\n'
               '\t{\n'
               '\t\tcout << "a[" << i << "] =" << a[i] << endl; // output '
               'arrays with correct order\n'
               '\t}\n'
               '\ta[9] = 0;\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='279f5a85296ac0f1e04c1f0d377b5c556b743d0721e9fc75f97d8f81f62f7494',
          id=668,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='279f5a85296ac0f1e04c1f0d377b5c556b743d0721e9fc75f97d8f81f62f7494',
          id=669,
          lineno=14,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='value',
          body='int value;'),
 Fragment(document_cs='279f5a85296ac0f1e04c1f0d377b5c556b743d0721e9fc75f97d8f81f62f7494',
          id=670,
          lineno=15,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='position',
          body='int position;'),
 Fragment(document_cs='279f5a85296ac0f1e04c1f0d377b5c556b743d0721e9fc75f97d8f81f62f7494',
          id=671,
          lineno=1,
          tokens=16,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Variables: position value\n  Using: std\n'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=672,
          lineno=7,
          tokens=119,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Student',
          body='class Student\n'
               '{\n'
               'private:\n'
               '\tstring student_id;\n'
               '\tstring student_name;\n'
               '\tdouble OOP2_Score;\n'
               '\tdouble math_Score;\n'
               '\tdouble english_Score;\n'
               '\tdouble total_Score;\n'
               '\tdouble ctotal()\n'
               '\t{\n'
               '\t\ttotal_Score = OOP2_Score + math_Score + english_Score;\n'
               '\t\treturn total_Score;\n'
               '\t}\n'
               '\n'
               'public:\n'
               '\tvoid TakeData()\n'
               '\t{\n'
               '\t\tcout << "ID : ";\n'
               '\t\tcin >> student_id;\n'
               '\t\tcout << "Name: ";\n'
               '\t\tcin >> student_name;\n'
               '\t\tcout << "OOP2: ";\n'
               '\t\tcin >> OOP2_S'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=673,
          lineno=30,
          tokens=132,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Student',
          body='core;\n'
               '\t\tcout << "Math: ";\n'
               '\t\tcin >> math_Score;\n'
               '\t\tcout << "English: ";\n'
               '\t\tcin >> english_Score;\n'
               '\t\tctotal();\n'
               '\t}\n'
               '\tvoid showData()\n'
               '\t{\n'
               '\n'
               '\t\tcout << "ID: " << student_id << endl;\n'
               '\t\tcout << "Name: " << student_name << endl;\n'
               '\t\tcout << "OOP2: " << OOP2_Score << endl;\n'
               '\t\tcout << "Math: " << math_Score << endl;\n'
               '\t\tcout << "English: " << english_Score << endl;\n'
               '\t\tcout << "Total score: " << total_Score << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=674,
          lineno=50,
          tokens=166,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Employee',
          body='class Employee\n'
               '{\n'
               'private:\n'
               '\tstring Employee_ID;\n'
               '\tstring Employee_Name;\n'
               '\tint Hours;\n'
               '\tint Rate;\n'
               '\n'
               'public:\n'
               '\tvoid setEmployee_ID(string x)\n'
               '\t{\n'
               '\t\tEmployee_ID = x;\n'
               '\t}\n'
               '\tstring getEmployee_ID()\n'
               '\t{\n'
               '\t\treturn Employee_ID;\n'
               '\t}\n'
               '\tvoid setEmployee_Name(string y)\n'
               '\t{\n'
               '\t\tEmployee_Name = y;\n'
               '\t}\n'
               '\tstring getEmployee_Name()\n'
               '\t{\n'
               '\t\treturn Employee_Name;\n'
               '\t}\n'
               '\tvoid setHours(int z)\n'
               '\t{\n'
               '\t\tHours = z;\n'
               '\t}\n'
               '\tint getHours()\n'
               '\t{\n'
               '\t\treturn Hours;\n'
               '\t}\n'
               '\tvoid setRate(int i)\n'
               '\t{\n'
               '\t\tRate = i;\n'
               '\t}\n'
               '\tint getRate()\n'
               '\t{\n'
               '\t\treturn Rate;\n'
               '\t}\n'
               '\tdouble total_salary()\n'
               '\t{\n'
               '\t\tint total;\n'
               '\t\ttotal = Hours * Rate;\n'
               '\t\treturn total;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=675,
          lineno=10,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='student_id',
          body='string student_id;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=676,
          lineno=11,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='student_name',
          body='string student_name;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=677,
          lineno=12,
          tokens=7,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='OOP2_Score',
          body='double OOP2_Score;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=678,
          lineno=13,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='math_Score',
          body='double math_Score;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=679,
          lineno=14,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='english_Score',
          body='double english_Score;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=680,
          lineno=15,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='total_Score',
          body='double total_Score;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=681,
          lineno=53,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Employee_ID',
          body='string Employee_ID;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=682,
          lineno=54,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Employee_Name',
          body='string Employee_Name;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=683,
          lineno=55,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Hours',
          body='int Hours;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=684,
          lineno=56,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Rate',
          body='int Rate;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=685,
          lineno=99,
          tokens=110,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint choice;\n'
               '\tcout << "1. Student" << endl;\n'
               '\tcout << "2. Employee" << endl;\n'
               '\tcout << "Your choice: ";\n'
               '\tcin >> choice;\n'
               '\tcout << endl;\n'
               '\n'
               '\tStudent student;   // creating an object of a class '
               '"Student"\n'
               '\tEmployee employee; // creating an object of a class '
               '"Employee"\n'
               '\tswitch (choice)\n'
               '\t{\n'
               '\tcase 1:\n'
               '\t{\n'
               '\t\tstudent.TakeData();\n'
               '\t\tcout << endl;\n'
               '\t\tstudent.showData();\n'
               '\t}\n'
               '\tbreak;\n'
               '\tcase 2:\n'
               '\t{\n'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=686,
          lineno=99,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=687,
          lineno=121,
          tokens=190,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\twhile (true)\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tint choice_employee;\n'
               '\n'
               '\t\t\tcout << "1. Input Employee Details\\n";\n'
               '\t\t\tcout << "2. Display Employee Details\\n";\n'
               '\t\t\tcout << "3. Display Salary\\n";\n'
               '\t\t\tcin >> choice_employee;\n'
               '\t\t\tswitch (choice_employee)\n'
               '\t\t\t{\n'
               '\t\t\tcase 1:\n'
               '\t\t\t{\n'
               '\t\t\t\tstring x, y;\n'
               '\t\t\t\tint z, i;\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\t\\t\\tEmployee information\\n";\n'
               '\t\t\t\tcout << "Employee_ID: ";\n'
               '\t\t\t\tcin >> x;\n'
               '\t\t\t\tcout << "Employee_Name: ";\n'
               '\t\t\t\tcin >> y;\n'
               '\t\t\t\tcout << "Number of worked Hours: ";\n'
               '\t\t\t\tcin >> z;\n'
               '\t\t\t\tcout << "Rate per Hour: ";\n'
               '\t\t\t\tcin >> i;\n'
               '\t\t\t\tcout << endl;\n'
               '\t\t\t\temployee.setEmployee_ID(x);\n'
               '\t\t\t\temployee.setEmployee_Name(y);\n'
               '\t\t\t\temployee.setHours(z);\n'
               '\t\t\t\temployee.setRat'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=688,
          lineno=150,
          tokens=197,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='e(i);\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'
               '\t\t\tbreak;\n'
               '\t\t\tcase 2:\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "ID: " << employee.getEmployee_ID() << endl;\n'
               '\t\t\t\tcout << "Name: " << employee.getEmployee_Name() << '
               'endl;\n'
               '\t\t\t\tcout << "Hours: " << employee.getHours() << endl;\n'
               '\t\t\t\tcout << "Rate: " << employee.getRate() << endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'
               '\t\t\tbreak;\n'
               '\t\t\tcase 3:\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "Total salary: " << employee.total_salary() << '
               'endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'
               '\t\t\tbreak;\n'
               '\t\t\tdefault:\n'
               '\t\t\t\tcout << "Incorrect input! Try again!" << endl;\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t}\n'
               '\tbreak;\n'
               '\tdefault:\n'
               '\t\tcout << "Incorrect input! Try again!" << endl;\n'
               '\t\tbreak;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=689,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=690,
          lineno=93,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='total',
          body='int total;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=691,
          lineno=101,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice',
          body='int choice;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=692,
          lineno=108,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='student',
          body='Student student;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=693,
          lineno=109,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='employee',
          body='Employee employee;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=694,
          lineno=124,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice_employee',
          body='int choice_employee;'),
 Fragment(document_cs='28a57bf880d617b57143b7d23c2181097eb46e8c24cf5d63c3f69cd34681a14b',
          id=695,
          lineno=1,
          tokens=54,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Employee Student\n'
               '  Functions: main\n'
               '  Fields: Employee_ID Employee_Name Hours OOP2_Score Rate '
               'english_Score math_Score student_id student_name total_Score\n'
               '  Variables: choice choice_employee employee student total\n'
               '  Using: std\n'),
 Fragment(document_cs='29f4b24362266ece3e357c07f94850cd54c8aec336283920084b822f59c6ef30',
          id=696,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_EXPORT_HPP',
          body='#define SFML_SYSTEM_EXPORT_HPP'),
 Fragment(document_cs='29f4b24362266ece3e357c07f94850cd54c8aec336283920084b822f59c6ef30',
          id=697,
          lineno=39,
          tokens=9,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_API',
          body='#define SFML_SYSTEM_API SFML_API_EXPORT'),
 Fragment(document_cs='29f4b24362266ece3e357c07f94850cd54c8aec336283920084b822f59c6ef30',
          id=698,
          lineno=43,
          tokens=9,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_API',
          body='#define SFML_SYSTEM_API SFML_API_IMPORT'),
 Fragment(document_cs='29f4b24362266ece3e357c07f94850cd54c8aec336283920084b822f59c6ef30',
          id=699,
          lineno=1,
          tokens=13,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_SYSTEM_API SFML_SYSTEM_EXPORT_HPP\n'),
 Fragment(document_cs='2ca0bb217236db5ef8c1bcebda8706618842e89945f9bea6b09fc253ad9b0a60',
          id=700,
          lineno=4,
          tokens=145,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint a[10];\n'
               '\t// code for the input the elements of the array\n'
               '\tcout << "Input an Array Elements. " << endl;\n'
               '\tfor (int i = 0; i < 10; i++)\n'
               '\t{\n'
               '\t\tcout << "array element [ " << i << " ] ";\n'
               '\t\tcin >> a[i];\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\t// output tje arrays\n'
               '\tcout << "Displaying arrays: " << endl;\n'
               '\tfor (int i = 0; i < 5; i++)\n'
               '\t{\n'
               '\t\tcout << "a[ " << i << " ] = " << a[i] << endl;\n'
               '\t}\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='2ca0bb217236db5ef8c1bcebda8706618842e89945f9bea6b09fc253ad9b0a60',
          id=701,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='2ca0bb217236db5ef8c1bcebda8706618842e89945f9bea6b09fc253ad9b0a60',
          id=702,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='2da956d565d2c2210ab6134e8991ba6c0a662c000e124ce06716d2aecf46090a',
          id=703,
          lineno=3,
          tokens=249,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main1',
          body='main1()int main1()\n'
               '{\n'
               '\tcout << "\\t\\t\\tPascal\'s triangle\\n";\n'
               '\tint row = 0, col = 0;\n'
               '\tint a[7][7] = {};\n'
               '\ta[0][0] = 1;\t\t\t\t  // giving the value for the array with '
               'address a[0][0]\n'
               '\tfor (row = 0; row < 7; row++) // rows\n'
               '\t{\n'
               '\t\tfor (col = 0; col <= row; col++) // columns\n'
               '\t\t{\n'
               '\t\t\t// code for the borders of the triangle\n'
               '\t\t\t// giving to then the value 1\n'
               '\t\t\tif (col == 0 || row == col)\n'
               '\t\t\t{\n'
               '\t\t\t\ta[row][col] = 1;\n'
               '\t\t\t\tcout << " " << a[row][col];\n'
               '\t\t\t}\n'
               '\t\t\t// code for the finding the values for the inside '
               'numbers of the triangle\n'
               '\t\t\telse\n'
               '\t\t\t{\n'
               '\t\t\t\ta[row][col] = a[row - 1][col - 1] + a[row - 1][col];\n'
               '\t\t\t\tcout << " " << a[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='2da956d565d2c2210ab6134e8991ba6c0a662c000e124ce06716d2aecf46090a',
          id=704,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='2da956d565d2c2210ab6134e8991ba6c0a662c000e124ce06716d2aecf46090a',
          id=705,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main1\n  Using: std\n'),
 Fragment(document_cs='2f2686e93f35205c959c57ddf30b08ac46e72262e6fea3716a436bfd8c916e6f',
          id=706,
          lineno=1,
          tokens=162,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Operator Overloading\n'
               '\n'
               '### Program 1\n'
               'Define a class DayTime:\n'
               '```\n'
               'private:\n'
               'int hour, minute, second;\n'
               'public:\n'
               '    • parameterized constructor to initialize value\n'
               '    • int getHour() const{ return hour; }\n'
               '    • int getMinute() const { return minute; }\n'
               '    • int getSecond() const { return second; }\n'
               '    • int asSeconds() const // Daytime in seconds\n'
               '    • overload increment operator to increment the value of '
               'seconds.\n'
               '    • Overload decrement operator to decrement the value of '
               'minutes.\n'
               '```\n'
               'Write  a menu driven program and create following menu '
               'options:\n'
               '1. To Display Time.\n'
               '2. To Display Time in Seconds.\n'
               '3. To Increment seconds.\n'
               '4. To decrements minutes.\n'
               '0. To exit.\n'
               '\n'),
 Fragment(document_cs='2f2686e93f35205c959c57ddf30b08ac46e72262e6fea3716a436bfd8c916e6f',
          id=707,
          lineno=24,
          tokens=120,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='### PRogram 2\n'
               'Define a class Dollar:\n'
               '```\n'
               'private:\n'
               '    float currency, mktrate, offrate\n'
               'public:\n'
               '    • float getDollar() { return currency in dollar }\n'
               '    • float  getMarketSoums() { return currency in soums }\n'
               '    • float  getofficialSoums() { return currency in soums }\n'
               '    • void setRates() { // input current date market and '
               'official rates }\n'
               '    • overload operator "<<" to print the details of a '
               'Dollar.\n'
               '```\n'
               'Inside main declare one object and show the results similar to '
               'Program 1.\n'),
 Fragment(document_cs='2f2686e93f35205c959c57ddf30b08ac46e72262e6fea3716a436bfd8c916e6f',
          id=708,
          lineno=1,
          tokens=20,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Operator Overloading\n'
               '### Program 1\n'
               '### PRogram 2\n'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=709,
          lineno=20,
          tokens=160,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='class Validation_C {\n'
               'private:\n'
               '\t// Identifires\n'
               '\tstring Name, Login, Parol, TellNum;\n'
               'public:\n'
               '\n'
               '\t// Defoult Constructor\n'
               '\tValidation_C() {\n'
               '\t\tName = "";\n'
               '\t\tLogin = "";\n'
               '\t\tParol = "";\n'
               '\t\tTellNum = "";\n'
               '\t}\n'
               '\n'
               '\t//Function display\n'
               '\tvoid Display() {\n'
               '\t\tcout << "\\t\\t\\tUser Information:" << endl << endl;\n'
               '\t\tcout << "\\t\\tUser Name  : " << Name << endl;\n'
               '\t\tcout << "\\t\\tTelephone  : " << TellNum << endl;\n'
               '\t\tcout << "\\t\\tLogin      : " << Login << endl;\n'
               '\t\tcout << "\\t\\tPassword   : " << Parol << endl;\n'
               '\t}\n'
               '\n'
               '\t// Set Info of User\n'
               '\tvoid SetUser('),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=710,
          lineno=44,
          tokens=229,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body=') {\n'
               '\t\tcout << "\\t\\t\\t\\t       Register User:" << endl << '
               'endl;\n'
               '\t\tcout << "\\t\\t\\t\\t        User Name : "; cin >> Name;\n'
               '\t\tcout << "\\t\\t\\t\\t        Telephone : "; cin >> '
               'TellNum;\n'
               '\t\tcout << "\\t\\t\\t\\t        Login     : "; cin >> Login;\n'
               '\t\tcout << "\\t\\t\\t\\t        Password  : "; cin >> Parol;\n'
               '\n'
               '\t\t// Info sended to Memory\n'
               '\t\tName_Memory = Name;\n'
               '\t\tParol_Memory = Parol;\n'
               '\t\tLogin_Memory = Login;\n'
               '\t\tTellNum_Memory = TellNum;\n'
               '\t}\n'
               '\n'
               '\t// Friend Functions\n'
               '\t//Validation Check for parol\n'
               '\tfriend void ValidationParol(Validation_C User) {\n'
               '\t\tif (User.Parol.length() >= 6 && User.Parol.length() <= 15) '
               '{\n'
               '\t\t\tfor (int i = 0; i < User.Parol.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Parol[i])) {  // Number of Upper '
               'Letters\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=711,
          lineno=66,
          tokens=225,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='\t\t\t\tif (islower(User.Parol[i])) {  // Number of Lower '
               'Letters\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Parol[i])) {  // Number of Digits \n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper >= 1 && Num_Upper <= 10 && Num_Lower >= 4 '
               '&& Num_Lower <= 10 && Num_Number >= 2 && Num_Number <= 10) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\t//Validation Check for Name\n'
               '\tfriend void ValidationName(Validation_C  User) {\n'
               '\t\tif (User.Name.length() >= 1 && User.Name.length() <= 15) '
               '{\n'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=712,
          lineno=84,
          tokens=241,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='\t\t\tfor (int i = 0; i < User.Name.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (Num_Upper <= 1 && Num_Lower >= 1 && Num_Lower <= 14 '
               '&& Num_Number == 0) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\t//Validation Check for TellNum\n'
               '\tfriend void ValidationTellNum(Validation_C User) {\n'
               '\t\tif (User.TellNum.length() >= 9 && User.TellNum.length() <= '
               '12) {\n'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=713,
          lineno=107,
          tokens=206,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='\t\t\tfor (int i = 0; i < User.TellNum.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper == 0 && Num_Lower == 0 && Num_Number >= 9 '
               '&& Num_Number <= 12) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=714,
          lineno=23,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Name',
          body='string Name, Login, Parol, TellNum;'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=715,
          lineno=27,
          tokens=30,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Validation_C',
          body='Validation_C() {\n'
               '\t\tName = "";\n'
               '\t\tLogin = "";\n'
               '\t\tParol = "";\n'
               '\t\tTellNum = "";\n'
               '\t}Validation_C()'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=716,
          lineno=60,
          tokens=40,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationParol',
          body='ValidationParol(Validation_C User)void '
               'ValidationParol(Validation_C User) {\n'
               '\t\tif (User.Parol.length() >= 6 && User.Parol.length() <= 15) '
               '{\n'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=717,
          lineno=62,
          tokens=236,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationParol',
          body='\t\t\tfor (int i = 0; i < User.Parol.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Parol[i])) {  // Number of Upper '
               'Letters\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Parol[i])) {  // Number of Lower '
               'Letters\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Parol[i])) {  // Number of Digits \n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper >= 1 && Num_Upper <= 10 && Num_Lower >= 4 '
               '&& Num_Lower <= 10 && Num_Number >= 2 && Num_Number <= 10) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=718,
          lineno=82,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationName',
          body='ValidationName(Validation_C  User)'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=719,
          lineno=82,
          tokens=228,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationName',
          body='void ValidationName(Validation_C  User) {\n'
               '\t\tif (User.Name.length() >= 1 && User.Name.length() <= 15) '
               '{\n'
               '\t\t\tfor (int i = 0; i < User.Name.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (Num_Upper <= 1 && Num_Lower >= 1 && Num_Lower <= 14 '
               '&& Num_Number == 0) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=720,
          lineno=105,
          tokens=247,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationTellNum',
          body='void ValidationTellNum(Validation_C User) {\n'
               '\t\tif (User.TellNum.length() >= 9 && User.TellNum.length() <= '
               '12) {\n'
               '\t\t\tfor (int i = 0; i < User.TellNum.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper == 0 && Num_Lower == 0 && Num_Number >= 9 '
               '&& Num_Number <= 12) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}ValidationTellNum(Validation_C User)'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=721,
          lineno=8,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=722,
          lineno=13,
          tokens=10,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Login_Sign',
          body='string Login_Sign, Parol_Sign;'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=723,
          lineno=17,
          tokens=19,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Name_Memory',
          body='string Name_Memory, Login_Memory, Parol_Memory, '
               'TellNum_Memory;'),
 Fragment(document_cs='2f877964eb2a6e1d7b705319c3bc848aeef4de0b9044e6a66f2fdb2b3be2499a',
          id=724,
          lineno=1,
          tokens=40,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Validation_C\n'
               '  Functions: ValidationName ValidationParol ValidationTellNum '
               'Validation_C\n'
               '  Fields: Name\n'
               '  Variables: Login_Sign Name_Memory\n'
               '  Using: std\n'),
 Fragment(document_cs='30bd8c0704280158da9b42fe86ddf2201b116a4011293ea8536b4891051fc14d',
          id=725,
          lineno=8,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\tC++ program to Calculate Area and '
               'Circumference of Circle.\\n";\n'
               '\tfloat R, Area, Circumference;\n'
               '\tcout << "Please enter the Radius of Circle: ";\n'
               '\tcin >> R;\n'
               '\tif (R > 0)\n'
               '\t{\n'
               '\t\tArea = 3.14 * R * R;\n'
               '\t\tCircumference = 2 * 3.14 * R;\n'
               '\t\tcout << "Area of Circle is " << Area << ";" << endl;\n'
               '\t\tcout << "Circumference of Circle is " << Circumference << '
               '";" << endl;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "Negative numbers cannot be applied !!!" << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='30bd8c0704280158da9b42fe86ddf2201b116a4011293ea8536b4891051fc14d',
          id=726,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='30bd8c0704280158da9b42fe86ddf2201b116a4011293ea8536b4891051fc14d',
          id=727,
          lineno=11,
          tokens=9,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='R',
          body='float R, Area, Circumference;'),
 Fragment(document_cs='30bd8c0704280158da9b42fe86ddf2201b116a4011293ea8536b4891051fc14d',
          id=728,
          lineno=1,
          tokens=15,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Variables: R\n  Using: std\n'),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=729,
          lineno=39,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='MutexImpl',
          body='class MutexImpl'),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=730,
          lineno=47,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=731,
          lineno=73,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='lock',
          body='lock()'),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=732,
          lineno=81,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='unlock',
          body='unlock()'),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=733,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_MUTEX_HPP',
          body='#define SFML_MUTEX_HPP'),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=734,
          lineno=37,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='3416ce909df11481da926cc82a192b6c5731fae3245e86172d9d1d5a42133538',
          id=735,
          lineno=1,
          tokens=37,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: MutexImpl SFML_SYSTEM_API\n'
               '  Macros: SFML_MUTEX_HPP\n'
               '  Functions: lock unlock\n'
               '  Namespaces: priv\n'
               '  Usages: MutexImpl\n'),
 Fragment(document_cs='34d297ddd4f009bd245d72f49aae027afedfa761d4cb58df054ecc3e198e2a9e',
          id=736,
          lineno=1,
          tokens=236,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Introduction to class and object '
               'with `set()` and `get()` methods\n'
               '\n'
               '**Note: In class diagram + for public, - for private.**\n'
               '\n'
               '1. Define a class student with the following specification. \n'
               '    ```\n'
               '    Student\n'
               '    ---\n'
               '    - Student_ID: String\n'
               '    - Student_Name: String\n'
               '    - OOP2_Score: double\n'
               '    - Maths_Score: double\n'
               '    - English_Score: double\n'
               '    - Total_Score: double\n'
               '    ---\n'
               '    - ctotal(): Function to calculate eng + math + OOP-2 with '
               'double return type.\n'
               '    + Takedata(): Function to accept values for student id, '
               'Student Name, eng, OOP-2, maths and invoke ctotal() to '
               'calculate total.\n'
               '    + Showdata(): Function to display all the data members on '
               'the screen.\n'
               '    ```\n'
               '\n'
               '2. Write C++ header file Employee.h with class Employee with '
               'following details.\n'
               '\n'
               '    ```\n'
               '    Employee\n'
               '    ---\n'
               '    - Employee_ID: String\n'
               '    - Employee_Name: String\n'
               '    - No_of_Hours_Work: int\n'
               '    - Rate_per_Hour: int\n'
               '    ---'),
 Fragment(document_cs='34d297ddd4f009bd245d72f49aae027afedfa761d4cb58df054ecc3e198e2a9e',
          id=737,
          lineno=30,
          tokens=108,
          depth=7,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    + setEmployee_ID(String)\n'
               '    + getEmployee_ID(): String\n'
               '    + setEmployee_Name(String)\n'
               '    + getEmployee_Name(): String\n'
               '    + setNo_of_Hours_Work(int)\n'
               '    + getNo_of_Hours_Work(): int\n'
               '    + setRate_per_Hour(int)\n'
               '    + getRate_per_Hour(): int \n'
               '    + getTotal_Monthly_Salary(): double\n'
               '    ```\n'
               '    Write C++ menu driven program to get employee details, '
               'display employee details, and display monthly salary details '
               'of employee.\n'),
 Fragment(document_cs='34d297ddd4f009bd245d72f49aae027afedfa761d4cb58df054ecc3e198e2a9e',
          id=738,
          lineno=1,
          tokens=20,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Introduction to class and object '
               'with `set()` and `get()` methods\n'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=739,
          lineno=11,
          tokens=245,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_BreadBakery',
          body='class Product_BreadBakery\n'
               '{\n'
               'private:\n'
               '\n'
               '\t// "Owner" Only\n'
               '\t// this 3 integers for the quantity in the storage (ñêëàä)\n'
               '\t// the quantity in storage could be changed by "Owner"\n'
               '\tint storage_quantity_bun_smart_food;\n'
               '\tint storage_quantity_cracker_tuc_cheese_100g;\n'
               '\tint storage_quantity_bread_samarkand;\n'
               '\n'
               '\t// prices of products\n'
               '\t// the prices only could be changed by "Owner"\n'
               '\tint price_bun_smart_food;\n'
               '\tint price_cracker_tuc_cheese_100g;\n'
               '\tint price_bread_samarkand;\n'
               '\n'
               '\t// "User" - Visible only for Users\n'
               '\t// it could be decremented when "User" buying this droduct\n'
               '\tint quantity_bun_smart_food;\n'
               '\tint quantity_cracker_tuc_cheese_100g;\n'
               '\tint quantity_bread_samarkand;\n'
               '\n'
               'public:\n'
               '\n'
               '\t// default constructor\n'
               '\tProduct_BreadBakery();\n'
               '\n'
               '\t// Parametirized constructor\n'
               '\t//Product_VegetablesFruits(int sp, int sc, int so, int pp, '
               'int pc, int po);\n'
               '\n'
               '\t// for only "Owner" setting the parameters for the s'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=740,
          lineno=42,
          tokens=231,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_BreadBakery',
          body='torage\n'
               '\tvoid set_storage_quantity_bun_smart_food(int '
               'storage_quantity_bun_smart_food) {\n'
               '\t\tthis->storage_quantity_bun_smart_food = '
               'storage_quantity_bun_smart_food;\n'
               '\t}\n'
               '\tint get_storage_quantity_bun_smart_food() {\n'
               '\t\treturn storage_quantity_bun_smart_food;\n'
               '\t}\n'
               '\n'
               '\tvoid set_storage_quantity_cracker_tuc_cheese_100g(int '
               'storage_quantity_cracker_tuc_cheese_100g) {\n'
               '\t\tthis->storage_quantity_cracker_tuc_cheese_100g = '
               'storage_quantity_cracker_tuc_cheese_100g;\n'
               '\t}\n'
               '\tint get_storage_quantity_cracker_tuc_cheese_100g() {\n'
               '\t\treturn storage_quantity_cracker_tuc_cheese_100g;\n'
               '\t}\n'
               '\n'
               '\tvoid set_storage_quantity_bread_samarkand(int '
               'storage_quantity_bread_samarkand) {\n'
               '\t\tthis->storage_quantity_bread_samarkand = '
               'storage_quantity_bread_samarkand;\n'
               '\t}\n'
               '\tint get_storage_quantity_bread_samarkand() {\n'
               '\t\treturn storage_quantity_bread_samarkand;\n'
               '\t}\n'
               '\n'
               '\t// setting the prices of products\n'
               '\tvoid set_price_bun_smar'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=741,
          lineno=65,
          tokens=138,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_BreadBakery',
          body='t_food(int price_bun_smart_food) {\n'
               '\t\tthis->price_bun_smart_food = price_bun_smart_food;\n'
               '\t}\n'
               '\tint get_price_bun_smart_food() {\n'
               '\t\treturn price_bun_smart_food;\n'
               '\t}\n'
               '\tvoid set_price_cracker_tuc_cheese_100g(int '
               'price_cracker_tuc_cheese_100g) {\n'
               '\t\tthis->price_cracker_tuc_cheese_100g = '
               'price_cracker_tuc_cheese_100g;\n'
               '\t}\n'
               '\tint get_price_cracker_tuc_cheese_100g() {\n'
               '\t\treturn price_cracker_tuc_cheese_100g;\n'
               '\t}\n'
               '\tvoid set_price_bread_samarkand(int price'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=742,
          lineno=77,
          tokens=135,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_BreadBakery',
          body='_bread_samarkand) {\n'
               '\t\tthis->price_bread_samarkand = price_bread_samarkand;\n'
               '\t}\n'
               '\tint get_price_bread_samarkand() {\n'
               '\t\treturn price_bread_samarkand;\n'
               '\t}\n'
               '\n'
               '\t// for "User"\n'
               "\t// if '1'  incrementing ... should be +1, if '2' "
               'decrementing ... should be -1\n'
               '\tvoid set_quantity_bun_smart_food_incrementing() {\n'
               '\t\tquantity_bun_smart_food++;\n'
               '\t\tstorage_quantity_bun_smart_food--;\n'
               '\t}\n'
               '\tvoid set_quantity_bun_smart_food_decrementing() {\n'
               '\t\tquantity_bun_smart_fo'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=743,
          lineno=91,
          tokens=133,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_BreadBakery',
          body='od--;\n'
               '\t\tstorage_quantity_bun_smart_food++;\n'
               '\t}\n'
               '\tint get_quantity_bun_smart_food() {\n'
               '\t\treturn quantity_bun_smart_food;\n'
               '\t}\n'
               '\n'
               '\t//cracker_tuc_cheese_100g\n'
               '\tvoid set_quantity_cracker_tuc_cheese_100g_incrementing() {\n'
               '\t\tquantity_cracker_tuc_cheese_100g++;\n'
               '\t\tstorage_quantity_cracker_tuc_cheese_100g--;\n'
               '\t}\n'
               '\tvoid set_quantity_cracker_tuc_cheese_100g_decrementing() {\n'
               '\t\tquantity_cracker_tuc_cheese_100g--;\n'
               '\t\tstorage_quantity_cracker_tuc_cheese_100g++;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=744,
          lineno=105,
          tokens=137,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_BreadBakery',
          body='\n'
               '\t}\n'
               '\tint get_quantity_cracker_tuc_cheese_100g() {\n'
               '\t\treturn quantity_cracker_tuc_cheese_100g;\n'
               '\t}\n'
               '\t//bread_samarkand\n'
               '\tvoid set_quantity_bread_samarkand_incrementing() {\n'
               '\t\tquantity_bread_samarkand++;\n'
               '\t\tstorage_quantity_bread_samarkand--;\n'
               '\t}\n'
               '\tvoid set_quantity_bread_samarkand_decrementing() {\n'
               '\t\tquantity_bread_samarkand--;\n'
               '\t\tstorage_quantity_bread_samarkand++;\n'
               '\t}\n'
               '\tint get_quantity_bread_samarkand() {\n'
               '\t\treturn quantity_bread_samarkand;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=745,
          lineno=18,
          tokens=8,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_bun_smart_food',
          body='int storage_quantity_bun_smart_food;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=746,
          lineno=19,
          tokens=13,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_cracker_tuc_cheese_100g',
          body='int storage_quantity_cracker_tuc_cheese_100g;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=747,
          lineno=20,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_bread_samarkand',
          body='int storage_quantity_bread_samarkand;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=748,
          lineno=24,
          tokens=7,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_bun_smart_food',
          body='int price_bun_smart_food;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=749,
          lineno=25,
          tokens=12,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_cracker_tuc_cheese_100g',
          body='int price_cracker_tuc_cheese_100g;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=750,
          lineno=26,
          tokens=9,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_bread_samarkand',
          body='int price_bread_samarkand;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=751,
          lineno=30,
          tokens=7,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_bun_smart_food',
          body='int quantity_bun_smart_food;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=752,
          lineno=31,
          tokens=12,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_cracker_tuc_cheese_100g',
          body='int quantity_cracker_tuc_cheese_100g;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=753,
          lineno=32,
          tokens=9,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_bread_samarkand',
          body='int quantity_bread_samarkand;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=754,
          lineno=37,
          tokens=7,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Product_BreadBakery',
          body='Product_BreadBakery()'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=755,
          lineno=126,
          tokens=153,
          depth=0,
          parent_id=None,
          category='method',
          summary=False,
          name='Product_BreadBakery::Product_BreadBakery',
          body='Product_BreadBakery::Product_BreadBakery() {\n'
               '\t// on storage we have ...\n'
               '\tstorage_quantity_bun_smart_food = 10;\n'
               '\tstorage_quantity_cracker_tuc_cheese_100g = 10;\n'
               '\tstorage_quantity_bread_samarkand = 10;\n'
               '\n'
               '\t// pries by default\n'
               '\tprice_bun_smart_food = 3290;\n'
               '\tprice_cracker_tuc_cheese_100g = 7390;\n'
               '\tprice_bread_samarkand = 5990;\n'
               '\n'
               '\t//quantity bought by user by default\n'
               '\tquantity_bun_smart_food = 0;\n'
               '\tquantity_cracker_tuc_cheese_100g = 0;\n'
               '\tquantity_bread_samarkand = 0;\n'
               '}'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=756,
          lineno=9,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='355ccb011c196c0be8c512fa9111e900ce4429e8f465ebe50f4e38a2cec1b361',
          id=757,
          lineno=1,
          tokens=126,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Product_BreadBakery\n'
               '  Functions: Product_BreadBakery\n'
               '  Methods: Product_BreadBakery::Product_BreadBakery\n'
               '  Fields: price_bread_samarkand price_bun_smart_food '
               'price_cracker_tuc_cheese_100g quantity_bread_samarkand '
               'quantity_bun_smart_food quantity_cracker_tuc_cheese_100g '
               'storage_quantity_bread_samarkand '
               'storage_quantity_bun_smart_food '
               'storage_quantity_cracker_tuc_cheese_100g\n'
               '  Using: std\n'
               '  Usages: Product_BreadBakery\n'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=758,
          lineno=9,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='area',
          body='area(float radius)'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=759,
          lineno=9,
          tokens=55,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='area',
          body='float area(float radius)\n'
               '{ // function for calculating the area\n'
               '\tfloat area;\n'
               '\tarea = (atan(1) * 4) * (pow(radius, 2)); //"atan" is the '
               'function which is finding the PI=3.14\n'
               '\treturn area;\n'
               '}'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=760,
          lineno=16,
          tokens=102,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main1',
          body='int main1()\n'
               '{\n'
               '\tfloat radius;\n'
               '\tcout << "Please enter the radius of circle: ";\n'
               '\tcin >> radius; // inputing the radius\n'
               '\n'
               '\tif (radius > 0)\n'
               '\t\tcout << area(radius) << endl; // calling the function '
               '"area" for calculating the Area of Circle\n'
               '\n'
               '\telse\n'
               '\t\tcout << "INVALID Radius!" << endl; // if radius is a '
               'negative number or equal to zero the program will show '
               '"Invalid radius"\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main1()'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=761,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=762,
          lineno=11,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='area',
          body='float area;'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=763,
          lineno=18,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='radius',
          body='float radius;'),
 Fragment(document_cs='36808a8598c49b653b35c66999caceadf037b7f95ef1734dfa351119408292d7',
          id=764,
          lineno=1,
          tokens=18,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: area main1\n'
               '  Variables: area radius\n'
               '  Using: std\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=765,
          lineno=1,
          tokens=208,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# C++ Programming\n'
               '\n'
               '\n'
               '## Contents\n'
               '- [Tips](#keep-these-tips-in-mind-while-learning-programming)\n'
               '- [Computer Science Basics](#computer-science-basics)\n'
               '- [Learning Resources](#learning-resources)\n'
               '- [Problem Solving](#problem-solving)\n'
               '- [Projects Ideas](#projects-ideas)\n'
               '\n'
               '\n'
               '## Keep These Tips in Mind While Learning Programming\n'
               '```\n'
               '1. Learn and code every day, consistency is important.\n'
               '2. Write it down - plan your code before you start coding and '
               'understand the input to your program and the output from your '
               'code.\n'
               '3. Learn to debug your code - look at the code line by line to '
               'see how it works.\n'
               '4. Surround yourself with other people who are learning. Teach '
               'each other.\n'
               '5. Learn taking notes.\n'
               '6. Build something, anything. For example, simple calculator, '
               'or program to save and read data from TXT files.\n'
               '7. Focus on 1 thing! Take small steps, but every day, '
               'consistency is very important again.\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=766,
          lineno=21,
          tokens=140,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='8. Learn to ask GOOD questions to others:\n'
               '  - G: Give context on what you are trying to do, clearly '
               'describing the problem.\n'
               '  - O: Outline the things you have already tried to fix the '
               'issue.\n'
               '  - O: Offer your best guess as to what the problem might be. '
               'It helps the person who is helping you not only know what '
               "you're thinking, but also know that you've thought of "
               'something yourself.\n'
               "  - D: Demonstrate what's going on. Include the code, the "
               'tracing error message, and an explanation of the steps you '
               'followed that resulted in the error. That way, the person '
               "helping doesn't have to try to recreate the problem.\n"
               '```\n'
               '\n'
               '\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=767,
          lineno=29,
          tokens=243,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='## Computer Science Basics\n'
               '- [Harvard '
               'CS50](https://youtube.com/playlist?list=PLhQjrBD2T383f9scHRNYJkior2VvYjpSL) '
               '- Scratch, C, Arrays, Algorithms, Memory, Data structures, '
               'Python, SQL, HTML, CSS, JavaScript, Flask\n'
               '- `Optional` [Crash Course Computer '
               'Science](https://www.youtube.com/playlist?list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo)\n'
               '- [Computer Science for '
               'Everyone](https://www.youtube.com/playlist?list=PLrC-HcVNfULbGKkhJSgfqvqmaFAZvfHes) \n'
               '\n'
               '## Learning Resources\n'
               '- EN [C++ for beginners — '
               'CodeBeauty](https://www.youtube.com/playlist?list=PL43pGnjiVwgQHLPnuH9ch-LhZdwckM8Tq)\n'
               '- EN [C++ Programming Tutorial — '
               'thenewboston](https://www.youtube.com/playlist?list=PLAE85DE8440AA6B83)\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=768,
          lineno=37,
          tokens=192,
          depth=15,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='- EN [C++ by The '
               'Cherno](https://www.youtube.com/watch?v=18c3MTX0PK0&list=PLlrATfBNZ98dudnM48yfGUldqGD0S4FFb)\n'
               '- EN [C++ by '
               'freeCodeCamp.org](https://www.youtube.com/watch?v=vLnPwxZdW4Y)\n'
               '- RU [C++ by Denis '
               'Markov](https://www.youtube.com/playlist?list=PLbmlzoDQrXVFC13GjpPrJxl6mzTiX65gs)\n'
               '- RU [C++ Уроки - Гоша '
               'Дударь](https://www.youtube.com/watch?v=qSHP98i9mDU&list=PL0lO_mIqDDFXNfqIL9PHQM7Wg_kOtDZsW)\n'
               '- To read:\n'
               '  '),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=769,
          lineno=42,
          tokens=77,
          depth=14,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='- [cplusplus.com](https://cplusplus.com/doc/tutorial/)\n'
               '  - '
               '[w3schools.com](https://www.w3schools.com/cpp/default.asp) \n'
               '  - '
               '[tutorialspoint.com](https://www.tutorialspoint.com/cplusplus/index.htm)\n'
               '  - '
               '[GeegsForGeeks.org](https://www.geeksforgeeks.org/c-plus-plus/):\n'
               '\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=770,
          lineno=47,
          tokens=242,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='## Problem Solving\n'
               '```\n'
               '1. C++ Program to print "Hello, World!"\n'
               '2. C++ Program to Print an Integer (Entered by the User)\n'
               '3. C++ Program to Add Two Integers\n'
               '4. C++ Program to Multiply two Floating Point Numbers\n'
               '5. C++ Program to Find ASCII Value of a Character\n'
               '6. C++ Program to Compute Quotient and Remainder\n'
               '7. C++ Program to Find the Size of int, float, double and '
               'char\n'
               '8. C++ Program to Demonstrate the Working of Keyword long\n'
               '9. C++ Program to Swap Two Numbers\n'
               '10. C++ Program to Check Whether a Number is Even or Odd\n'
               '11. C++ Program to Check Whether a Character is Vowel or '
               'Consonant\n'
               '12. C++ Program to Find the Largest Number Among Three '
               'Numbers\n'
               '13. C++ Program to Find all Roots of a Quadratic equation\n'
               '14. C++ Program to Check Leap Year\n'
               '15. C++ Program to Check Whether a Number is Positive or '
               'Negative\n'
               '16. C++ Program to Check Whether a Character is an Alphabet or '
               'not\n'
               '17. C++ Program to Calculate the Sum of Natural Numbers\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=771,
          lineno=66,
          tokens=236,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='18. C++ Program to Find Factorial of a Number\n'
               '19. C++ Program to Generate Multiplication Table\n'
               '20. C++ Program to Display Fibonacci Sequence\n'
               '21. C++ Program to Find GCD of two Numbers\n'
               '22. C++ Program to Find LCM of two Numbers\n'
               '23. C++ Program to Display Characters from A to Z Using Loop\n'
               '24. C++ Program to Count Number of Digits in an Integer\n'
               '25. C++ Program to Reverse a Number\n'
               '26. C++ Program to Calculate the Power of a Number\n'
               '27. C++ Program to Check Whether a Number is Palindrome or '
               'Not\n'
               '28. C++ Program to Check Whether a Number is Prime or Not\n'
               '29. C++ Program to Display Prime Numbers Between Two '
               'Intervals\n'
               '30. C++ Program to Check Armstrong Number\n'
               '31. C++ Program to Display Armstrong Number Between Two '
               'Intervals\n'
               '32. C++ Program to Display Factors of a Number\n'
               '33. C++ Programming Code To Create Pyramid and Structure\n'
               '34. C++ Program to Make a Simple Calculator Using '
               'switch...case\n'
               '35. C++ Program to Display Prime Numbers Between Intervals '
               'Using Function\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=772,
          lineno=84,
          tokens=234,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='36. C++ Program to Check Prime or Armstrong Number Using '
               'User-defined Function\n'
               '37. C++ Program to Check Whether a Number can be Expressed as '
               'Sum of Two Prime Numbers\n'
               '38. C++ Program to Find the Sum of Natural Numbers using '
               'Recursion\n'
               '39. C++ Program to Find Factorial of a Number Using Recursion\n'
               '40. C++ Program to Find G.C.D Using Recursion\n'
               '41. C++ Program to Convert Binary Number to Decimal and '
               'vice-versa\n'
               '42. C++ Program to Convert Octal Number to Decimal and '
               'vice-versa\n'
               '43. C++ Program to Convert Binary Number to Octal and '
               'vice-versa\n'
               '44. C++ Program to Reverse a Sentence Using Recursion\n'
               '45. C++ Program to calculate the power using recursion\n'
               '46. C++ Program to Calculate Average Using Arrays\n'
               '47. C++ Program to Find Largest Element of an Array\n'
               '48. C++ Program to Calculate Standard Deviation\n'
               '49. C++ Program to Add Two Matrix Using Multi-dimensional '
               'Arrays\n'
               '50. C++ Program to Multiply to Matrix Using Multi-dimensional '
               'Arrays\n'
               '51. C++ Program to Find Transpose of a Matrix\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=773,
          lineno=100,
          tokens=246,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='52. C++ Program to Multiply two Matrices by Passing Matrix to '
               'a Function\n'
               '53. C++ Program to Access Elements of an Array Using Pointer\n'
               '54. C++ Program Swap Numbers in Cyclic Order Using Call by '
               'Reference\n'
               '55. C++ Program to Find Largest Number Using Dynamic Memory '
               'Allocation\n'
               '56. C++ Program to Find the Frequency of Characters in a '
               'String\n'
               '57. C++ Program to count the number of vowels, consonants and '
               'so on\n'
               '58. C++ Program to Remove all Characters in a String Except '
               'Alphabet\n'
               '59. C++ Program to Find the Length of a String\n'
               '60. C++ Program to Concatenate Two Strings\n'
               '61. C++ Program to Copy String Without Using strcpy()\n'
               '62. C++ Program to Sort Elements in Lexicographical Order '
               '(Dictionary Order)\n'
               '63. C++ Program to Store Information(name, roll and marks) of '
               'a Student Using Structure\n'
               '64. C++ Program to Add Two Distances (in inch-feet) System '
               'Using Structures\n'
               '65. C++ Program to Add Two Complex Numbers by Passing '
               'Structure to a Function\n'
               '66. C++ Program to Calculate Difference Between Two Time '
               'Periods\n'
               '67. C++ Program to Store Information of Students Using '
               'Structure\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=774,
          lineno=116,
          tokens=73,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='68. C++ Program to Store Information Using Structures with '
               'Dynamically Memory Allocation\n'
               '69. C++ Program to Write a Sentence to a File\n'
               '70. C++ Program to Read a Line From a File and Display it\n'
               '71. C++ Program to Display its own Source Code as Output\n'
               '72. C++ Programming Code To Create Pyramid and Pattern\n'
               '```\n'
               '\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=775,
          lineno=123,
          tokens=247,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='## Projects Ideas\n'
               '```\n'
               '1. Banking system with all banking facilities like – deposit, '
               'withdrawal, foreign exchange to any currency, availability of '
               'loans for purchasing vehicles, apartments, houses, setting up '
               'business, education loan, management of ATMs and all other '
               'features.\n'
               '2. Airline flight reservation system (online booking of '
               'tickets in different flights for different destinations all '
               'over the world, cancellation of tickets, clear display of '
               'cancellation amount, refund of amount after cancellation, '
               'showing  availability of all flights, showing flights timings '
               'for all 7 days of a week, seats availability, seat selection '
               'for travelers by giving the complete layout of the seating '
               'arrangement inside the flights, food '
               'availability/non-availability inside the flights, change of '
               'travel dates and amount charged.)\n'
               '3. Taxi/cab sharing\n'
               '4. University education portal (providing all information '
               'about under-graduate, post graduate and doctoral programs '
               'offered, facilities available, location & map, fee structure '
               'in all the universities)\n'
               '5. Online exam management system (with total security of '
               'identifying the students during exam, monitoring the students’ '
               'activities during the exam, selection of different questions '
               'for each student, development of a large question bank '
               'containing hundreds of questions in each subject considering '
               'all courses taught at the university)\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=776,
          lineno=130,
          tokens=234,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='6. Library management system\n'
               '7. E-content management system \n'
               '8. Plagiarism checker & file management system\n'
               '9. Hotel reservation & management portal\n'
               '10. Restaurant management\n'
               '11. Healthcare consulting system (doctors with different '
               'specializations for consultation, hospitals with all '
               'facilities for treating different diseases & abroad - one stop '
               'portal for all consultations and treatments)\n'
               '12. Electronic health record management system with builtin '
               'security \n'
               '13. Pharmacy - medical store management \n'
               '14. Blood bank system\n'
               '15. Online shopping and delivery system (like amazon)\n'
               '16. Online car shopping \n'
               '17. Tourism portal\n'
               '18. World tourism portal\n'
               '19. Higher education abroad portal\n'
               '20. Job search/recruitment portal\n'
               '21. Company resource management system\n'
               '22. Attendance monitoring system with fingerprints '
               'verification\n'
               '23. Face recognition - based attendance checking system\n'
               '24. Aircraft communication and monitoring system\n'
               '25. Ticket booking management system for concert ceremonies\n'
               '26. All store stock management (inventory control)\n'
               '27. Multiplayer gaming applications\n'
               '28. City traffic monitoring and control system\n'
               '29. Police traffic violation reporting & control system\n'
               '30. The marriage function hall booking & food/music '
               'arrangement system\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=777,
          lineno=155,
          tokens=244,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='31. Any vehicle (car, bus, heavy vehicles for parties, '
               'functions, family picnics, long distance travel) booking '
               'portal\n'
               '32. Teacher assisted program writing environment for students\n'
               '33. Doctors reservation system for patients\n'
               '34. Bus reservation & tracking system\n'
               '35. Railway booking and train tracking system\n'
               '36. Warehouse management system\n'
               '37. Courier tracking, cargo and freight transportation\n'
               '38. Online code testing system\n'
               '39. Online quiz system (with total security of identifying the '
               'students during the quiz, monitoring the students’ activities '
               'during the quiz, selection of different quiz questions for '
               'each student, development of a large quiz question bank '
               'containing hundreds of quiz questions in each subject '
               'considering all courses taught at the university)\n'
               '40. Land/house/apartment rental & purchase portal\n'
               '41. Housecleaning, plumbing, electricity service & maintenance '
               'system\n'
               '42. Human organ transplantation management system\n'
               '43. Covid-19 tracking, testing, treatment & hospital '
               'management system\n'
               '44. Cryptocurrency trading portal (exchange) allowing trading '
               'of all crypto coins using security, confidentiality and '
               'authentication\n'
               '45. Parking management system\n'
               '46. Online food delivery system (linked to all restaurants in '
               'different districts in different regions in some country)\n'
               '```\n'),
 Fragment(document_cs='37e0a1eabc977c1890765568a47abf350ca72bef6be476bd47d6cb85a33b0a26',
          id=778,
          lineno=1,
          tokens=36,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# C++ Programming\n'
               '## Contents\n'
               '## Keep These Tips in Mind While Learning Programming\n'
               '## Computer Science Basics\n'
               '## Learning Resources\n'
               '## Problem Solving\n'
               '## Projects Ideas\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=779,
          lineno=1,
          tokens=222,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# This script provides the SFML libraries as imported targets\n'
               '# ------------------------------------\n'
               '#\n'
               '# Usage\n'
               '# -----\n'
               '#\n'
               '# When you try to locate the SFML libraries, you must specify '
               'which modules you want to use (system, window, graphics, '
               'network, audio, main).\n'
               '# If none is given, no imported target will be created and you '
               "won't be able to link to SFML libraries.\n"
               '# example:\n'
               '#   find_package(SFML COMPONENTS graphics window system) # '
               'find the graphics, window and system modules\n'
               '#\n'
               '# You can enforce a specific version, either MAJOR.MINOR or '
               'only MAJOR.\n'
               "# If nothing is specified, the version won't be checked (i.e. "
               'any version will be accepted).\n'
               '# example:\n'
               '#   find_package(SFML COMPONENTS ...)     # no specific '
               'version required\n'
               '#   find_package(SFML 2 COMPONENTS ...)   # any 2.x version\n'
               '#   find_package(SFML 2.4 COMPONENTS ...) # version 2.4 or '
               'greater\n'
               '#\n'
               '# By default, the dynamic libraries of SFML will be found. '),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=780,
          lineno=19,
          tokens=226,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='To find the static ones instead,\n'
               '# you must set the SFML_STATIC_LIBRARIES variable to TRUE '
               'before calling find_package(SFML ...).\n'
               "# You don't need to deal with SFML's dependencies when linking "
               'your targets against SFML libraries,\n'
               '# they will all be configured automatically, even if you use '
               'SFML static libraries.\n'
               '# example:\n'
               '#   set(SFML_STATIC_LIBRARIES TRUE)\n'
               '#   find_package(SFML 2 COMPONENTS network system)\n'
               '#\n'
               '# On macOS by default CMake will search for frameworks. If you '
               'want to use static libraries and have installed\n'
               '# both SFML frameworks and SFML static libraries, your must '
               'set CMAKE_FIND_FRAMEWORK to "NEVER" or "LAST"\n'
               '# in addition to setting SFML_STATIC_LIBRARIES to TRUE. '
               'Otherwise CMake will check the frameworks bundle config and\n'
               '# fail after finding out that it does not provide static '
               'libraries. Please refer to CMake documentation for more '
               'details.\n'
               '#\n'
               '# Additionally, keep in mind that SFML frameworks are only '
               'available as release libraries unlike dylibs which\n'
               '# are available for both release and debug modes.\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=781,
          lineno=34,
          tokens=230,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='#\n'
               '# If SFML is not installed in a standard path, you can use the '
               'SFML_DIR CMake variable\n'
               "# to tell CMake where SFML's config file is located "
               '(PREFIX/lib/cmake/SFML for a library-based installation,\n'
               '# and PREFIX/SFML.framework/Resources/CMake on macOS for a '
               'framework-based installation).\n'
               '#\n'
               '# Output\n'
               '# ------\n'
               '#\n'
               '# This script defines the following variables:\n'
               '# - For each specified module XXX (system, window, graphics, '
               'network, audio, main):\n'
               '#   - SFML_XXX_FOUND:  true if either the debug or release '
               'library of the xxx module is found\n'
               '# - SFML_FOUND:        true if all the required modules are '
               'found\n'
               '#\n'
               '# And the following targets:\n'
               '# - For each specified module XXX (system, window, graphics, '
               'network, audio, main):\n'
               '#   - sfml-XXX\n'
               '# The SFML targets are the same for both Debug and Release '
               'build configurations and will automatically provide\n'
               '# correct settings based on your currently active build '
               'configuration. The SFML targets name also do not change\n'
               '# when using dynamic or static SFML libraries.\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=782,
          lineno=53,
          tokens=217,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='#\n'
               '# When linking against a SFML target, you do not need to '
               'specify indirect dependencies. For example, linking\n'
               '# against sfml-graphics will also automatically link against '
               'sfml-window and sfml-system.\n'
               '#\n'
               '# example:\n'
               '#   find_package(SFML 2 COMPONENTS graphics audio REQUIRED)\n'
               '#   add_executable(myapp ...)\n'
               '#   target_link_libraries(myapp sfml-graphics sfml-audio)\n'
               '\n'
               'if (NOT SFML_FIND_COMPONENTS)\n'
               '    message(FATAL_ERROR "find_package(SFML) called with no '
               'component")\n'
               'endif()\n'
               '\n'
               'set(FIND_SFML_PATHS\n'
               '    "${CMAKE_CURRENT_LIST_DIR}/../.."\n'
               '    ${SFML_ROOT}\n'
               '    $ENV{SFML_ROOT}\n'
               '    ~/Library/Frameworks\n'
               '    /Library/Frameworks\n'
               '    /usr/local\n'
               '    /usr\n'
               '    /sw\n'
               '    /opt/local\n'
               '    /opt/csw\n'
               '    /opt)\n'
               '\n'
               'find_path(SFML_DOC_DIR SFML.tag\n'
               '          PATH_SUFFIXES SFML/doc share/SFML/doc\n'
               '          PATHS ${FIND_SFML_PATHS})\n'
               '\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=783,
          lineno=83,
          tokens=163,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Update requested components (eg. request window component if '
               'graphics component was requested)\n'
               'set(FIND_SFML_SYSTEM_DEPENDENCIES "")\n'
               'set(FIND_SFML_MAIN_DEPENDENCIES "")\n'
               'set(FIND_SFML_AUDIO_DEPENDENCIES system)\n'
               'set(FIND_SFML_NETWORK_DEPENDENCIES system)\n'
               'set(FIND_SFML_WINDOW_DEPENDENCIES system)\n'
               'set(FIND_SFML_GRAPHICS_DEPENDENCIES window system)\n'
               'set(FIND_SFML_ADDITIONAL_COMPONENTS "")\n'
               'foreach(component ${SFML_FIND_COMPONENTS})\n'
               '    string(TOUPPER "${component}" UPPER_COMPONENT)\n'
               '    list(APPEND FIND_SFML_ADDITIONAL_COMPONENTS '
               '${FIND_SFML_${UPPER_COMPONENT}_DEPENDENCIES})\n'
               'endforeach()\n'
               'list(APPEND SFML_FIND_COMPONENTS '
               '${FIND_SFML_ADDITIONAL_COMPONENTS})\n'
               'list(REMOVE_DUPLICATES SFML_FIND_COMPONENTS)\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=784,
          lineno=98,
          tokens=190,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Choose which target definitions must be imported\n'
               'if (SFML_STATIC_LIBRARIES)\n'
               '\tset(SFML_IS_FRAMEWORK_INSTALL "")\n'
               '    if (SFML_IS_FRAMEWORK_INSTALL)\n'
               '        message(WARNING "Static frameworks are not supported '
               'by SFML. Clear SFML_DIR cache entry, \\\n'
               'and either change SFML_STATIC_LIBRARIES or '
               'CMAKE_FIND_FRAMEWORK before calling find_package(SFML)")\n'
               '    endif()\n'
               '    set(config_name "Static")\n'
               'else()\n'
               '    set(config_name "Shared")\n'
               'endif()\n'
               'set(targets_config_file '
               '"${CMAKE_CURRENT_LIST_DIR}/SFML${config_name}Targets.cmake")\n'
               '\n'
               '# Generate imported targets for SFML and its dependencies\n'
               'if (EXISTS "${targets_config_file}")\n'
               '    # Set SFML_FOUND to TRUE by default, may be overwritten by '
               'one of the includes below\n'
               '    set(SFML_FOUND TRUE)\n'
               '    include("${targets_config_file}")\n'
               '    '
               'include("${CMAKE_CURRENT_LIST_DIR}/SFMLConfigDependencies.cmake")\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=785,
          lineno=118,
          tokens=244,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    if (SFML_FOUND)\n'
               '        foreach (component ${SFML_FIND_COMPONENTS})\n'
               '            string(TOUPPER "${component}" UPPER_COMPONENT)\n'
               '            if (TARGET sfml-${component})\n'
               '                set(SFML_${UPPER_COMPONENT}_FOUND TRUE)\n'
               '            else()\n'
               '                set(FIND_SFML_ERROR "Found SFML but requested '
               "component '${component}' is missing in the config defined in "
               '${SFML_DIR}.")\n'
               '                set(SFML_${UPPER_COMPONENT}_FOUND FALSE)\n'
               '                set(SFML_FOUND FALSE)\n'
               '            endif()\n'
               '        endforeach()\n'
               '    endif()\n'
               'else()\n'
               '    set(FIND_SFML_ERROR "Requested SFML configuration '
               '(${config_name}) was not found")\n'
               '    set(SFML_FOUND FALSE)\n'
               'endif()\n'
               '\n'
               'if (NOT SFML_FOUND)\n'
               '    if(SFML_FIND_REQUIRED)\n'
               '        # fatal error\n'
               '        message(FATAL_ERROR "${FIND_SFML_ERROR}")\n'
               '    elseif(NOT SFML_FIND_QUIETLY)\n'
               '        # error but continue\n'
               '        message(STATUS "${FIND_SFML_ERROR}")\n'
               '    endif()\n'
               'endif()\n'
               '\n'
               'if (SFML_FOUND AND NOT SFML_FIND_QUIETLY)\n'
               '    message(STATUS "Found SFML 2.5.1 in '
               '${CMAKE_CURRENT_LIST_DIR}")\n'
               'endif()\n'),
 Fragment(document_cs='3a9646af2d4a5b3c8711e93849feb8103ffb662b409fbb295f685e61a92840d3',
          id=786,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='3af516260954d022055d295dd7772083ac8fac792fa0f0d345a78212fc8ad9be',
          id=787,
          lineno=37,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Window',
          body='class Window'),
 Fragment(document_cs='3af516260954d022055d295dd7772083ac8fac792fa0f0d345a78212fc8ad9be',
          id=788,
          lineno=43,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='3af516260954d022055d295dd7772083ac8fac792fa0f0d345a78212fc8ad9be',
          id=789,
          lineno=68,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition(unsigned int finger)'),
 Fragment(document_cs='3af516260954d022055d295dd7772083ac8fac792fa0f0d345a78212fc8ad9be',
          id=790,
          lineno=82,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition(unsigned int finger, const Window& relativeTo)'),
 Fragment(document_cs='3af516260954d022055d295dd7772083ac8fac792fa0f0d345a78212fc8ad9be',
          id=791,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TOUCH_HPP',
          body='#define SFML_TOUCH_HPP'),
 Fragment(document_cs='3af516260954d022055d295dd7772083ac8fac792fa0f0d345a78212fc8ad9be',
          id=792,
          lineno=1,
          tokens=22,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API Window\n'
               '  Macros: SFML_TOUCH_HPP\n'
               '  Functions: getPosition\n'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=793,
          lineno=45,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Drawable',
          body='class Drawable'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=794,
          lineno=46,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='VertexBuffer',
          body='class VertexBuffer'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=795,
          lineno=52,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=796,
          lineno=461,
          tokens=4,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='enable',
          body='bool      enable;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=797,
          lineno=462,
          tokens=6,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='glStatesSet',
          body='bool      glStatesSet;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=798,
          lineno=463,
          tokens=5,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='viewChanged',
          body='bool      viewChanged;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=799,
          lineno=464,
          tokens=6,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='lastBlendMode',
          body='BlendMode lastBlendMode;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=800,
          lineno=465,
          tokens=7,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='lastTextureId',
          body='Uint64    lastTextureId;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=801,
          lineno=466,
          tokens=7,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='texCoordsArrayEnabled',
          body='bool      texCoordsArrayEnabled;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=802,
          lineno=467,
          tokens=6,
          depth=7,
          parent_id=None,
          category='field',
          summary=False,
          name='useVertexCache',
          body='bool      useVertexCache;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=803,
          lineno=71,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='clear',
          body='clear(const Color& color = Color(0, 0, 0, 255))'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=804,
          lineno=92,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setView',
          body='setView(const View& view)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=805,
          lineno=102,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getView',
          body='getView() const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=806,
          lineno=115,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getDefaultView',
          body='getDefaultView() const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=807,
          lineno=130,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getViewport',
          body='getViewport(const View& view) const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=808,
          lineno=150,
          tokens=12,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='mapPixelToCoords',
          body='mapPixelToCoords(const Vector2i& point) const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=809,
          lineno=181,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='mapPixelToCoords',
          body='mapPixelToCoords(const Vector2i& point, const View& view) '
               'const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=810,
          lineno=201,
          tokens=29,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='mapCoordsToPixel',
          body='mapCoordsToPixel(const Vector2f& point) '
               'constmapCoordsToPixel(const Vector2f& point, const View& view) '
               'const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=811,
          lineno=237,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='draw',
          body='draw(const Drawable& drawable, const RenderStates& states = '
               'RenderStates::Default)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=812,
          lineno=248,
          tokens=29,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='draw',
          body='draw(const Vertex* vertices, std::size_t vertexCount,\n'
               '              PrimitiveType type, const RenderStates& states = '
               'RenderStates::Default)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=813,
          lineno=258,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='draw',
          body='draw(const VertexBuffer& vertexBuffer, const RenderStates& '
               'states = RenderStates::Default)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=814,
          lineno=269,
          tokens=33,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='draw',
          body='draw(const VertexBuffer& vertexBuffer, std::size_t '
               'firstVertex, std::size_t vertexCount, const RenderStates& '
               'states = RenderStates::Default)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=815,
          lineno=277,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=816,
          lineno=299,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setActive',
          body='setActive(bool active = true)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=817,
          lineno=333,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='pushGLStates',
          body='pushGLStates()'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=818,
          lineno=344,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='popGLStates',
          body='popGLStates()'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=819,
          lineno=367,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='resetGLStates',
          body='resetGLStates()'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=820,
          lineno=384,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='initialize',
          body='initialize()'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=821,
          lineno=400,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='applyBlendMode',
          body='applyBlendMode(const BlendMode& mode)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=822,
          lineno=408,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='applyTransform',
          body='applyTransform(const Transform& transform)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=823,
          lineno=416,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='applyTexture',
          body='applyTexture(const Texture* texture)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=824,
          lineno=424,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='applyShader',
          body='applyShader(const Shader* shader)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=825,
          lineno=433,
          tokens=13,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setupDraw',
          body='setupDraw(bool useVertexCache, const RenderStates& states)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=826,
          lineno=443,
          tokens=22,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='drawPrimitives',
          body='drawPrimitives(PrimitiveType type, std::size_t firstVertex, '
               'std::size_t vertexCount)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=827,
          lineno=451,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='cleanupDraw',
          body='cleanupDraw(const RenderStates& states)'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=828,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_RENDERTARGET_HPP',
          body='#define SFML_RENDERTARGET_HPP'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=829,
          lineno=457,
          tokens=141,
          depth=5,
          parent_id=None,
          category='struct',
          summary=False,
          name='StatesCache',
          body='struct StatesCache\n'
               '    {\n'
               '        enum {VertexCacheSize = 4};\n'
               '\n'
               '        bool      enable;         ///< Is the cache enabled?\n'
               '        bool      glStatesSet;    ///< Are our internal GL '
               'states set yet?\n'
               '        bool      viewChanged;    ///< Has the current view '
               'changed since last draw?\n'
               '        BlendMode lastBlendMode;  ///< Cached blending mode\n'
               '        Uint64    lastTextureId;  ///< Cached texture\n'
               '        bool      texCoordsArrayEnabled; ///< Is '
               'GL_TEXTURE_COORD_ARRAY client state enabled?\n'
               '        bool      useVertexCache; ///< Did we previously use '
               'the vertex cache?\n'
               '        Vertex    vertexCache[VertexCacheSize]; ///< '
               'Pre-transformed vertices cache\n'
               '    }'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=830,
          lineno=474,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_defaultView',
          body='View        m_defaultView;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=831,
          lineno=475,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_view',
          body='View        m_view;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=832,
          lineno=476,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_cache',
          body='StatesCache m_cache;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=833,
          lineno=477,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_id',
          body='Uint64      m_id;'),
 Fragment(document_cs='3d84f827d475de7609fcd73264bc0a2cc6f4e8595a0b9a7765611c13e6d6828a',
          id=834,
          lineno=1,
          tokens=121,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Drawable SFML_GRAPHICS_API VertexBuffer\n'
               '  Structs: StatesCache\n'
               '  Macros: SFML_RENDERTARGET_HPP\n'
               '  Functions: applyBlendMode applyShader applyTexture '
               'applyTransform cleanupDraw clear draw drawPrimitives '
               'getDefaultView getSize getView getViewport initialize '
               'mapCoordsToPixel mapPixelToCoords popGLStates pushGLStates '
               'resetGLStates setActive setView setupDraw\n'
               '  Fields: enable glStatesSet lastBlendMode lastTextureId '
               'texCoordsArrayEnabled useVertexCache viewChanged\n'
               '  Variables: m_cache m_defaultView m_id m_view\n'
               '  Usages: Default\n'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=835,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GLSL_HPP',
          body='#define SFML_GLSL_HPP'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=836,
          lineno=39,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=837,
          lineno=57,
          tokens=8,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='Glsl',
          body="namespace b'Glsl' {...}"),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=838,
          lineno=43,
          tokens=2,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='Matrix',
          body='struct Matrix'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=839,
          lineno=46,
          tokens=3,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='Vector4',
          body='struct Vector4'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=840,
          lineno=64,
          tokens=8,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vec2',
          body='typedef Vector2<float> Vec2;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=841,
          lineno=70,
          tokens=9,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Ivec2',
          body='typedef Vector2<int> Ivec2;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=842,
          lineno=76,
          tokens=9,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Bvec2',
          body='typedef Vector2<bool> Bvec2;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=843,
          lineno=82,
          tokens=8,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vec3',
          body='typedef Vector3<float> Vec3;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=844,
          lineno=88,
          tokens=9,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Ivec3',
          body='typedef Vector3<int> Ivec3;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=845,
          lineno=94,
          tokens=9,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Bvec3',
          body='typedef Vector3<bool> Bvec3;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=846,
          lineno=110,
          tokens=13,
          depth=6,
          parent_id=None,
          category='typedef',
          summary=False,
          name='implementation',
          body='typedef implementation-defined Vec4;typedef '
               'implementation-defined Bvec4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=847,
          lineno=124,
          tokens=7,
          depth=6,
          parent_id=None,
          category='typedef',
          summary=False,
          name='implementation',
          body='typedef implementation-defined Ivec4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=848,
          lineno=155,
          tokens=6,
          depth=6,
          parent_id=None,
          category='typedef',
          summary=False,
          name='implementation',
          body='typedef implementation-defined Mat3;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=849,
          lineno=181,
          tokens=6,
          depth=6,
          parent_id=None,
          category='typedef',
          summary=False,
          name='implementation',
          body='typedef implementation-defined Mat4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=850,
          lineno=185,
          tokens=10,
          depth=7,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vec4',
          body='typedef priv::Vector4<float> Vec4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=851,
          lineno=186,
          tokens=11,
          depth=7,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Ivec4',
          body='typedef priv::Vector4<int> Ivec4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=852,
          lineno=187,
          tokens=11,
          depth=7,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Bvec4',
          body='typedef priv::Vector4<bool> Bvec4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=853,
          lineno=188,
          tokens=13,
          depth=7,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Mat3',
          body='typedef priv::Matrix<3, 3> Mat3;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=854,
          lineno=189,
          tokens=13,
          depth=7,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Mat4',
          body='typedef priv::Matrix<4, 4> Mat4;'),
 Fragment(document_cs='3dddd2bc640d7004b8a6ceb5b4571a136337043c6c9e7bcadc067a2906364558',
          id=855,
          lineno=1,
          tokens=61,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Structs: Matrix Vector4\n'
               '  Typedefs: Bvec2 Bvec3 Bvec4 Ivec2 Ivec3 Ivec4 Mat3 Mat4 Vec2 '
               'Vec3 Vec4 implementation\n'
               '  Macros: SFML_GLSL_HPP\n'
               '  Namespaces: Glsl priv\n'),
 Fragment(document_cs='3f5a5a20e5ff152799448640bf75ed69a8c82de3e590ce11ed4d9892669e0517',
          id=856,
          lineno=40,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='3f5a5a20e5ff152799448640bf75ed69a8c82de3e590ce11ed4d9892669e0517',
          id=857,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_ALRESOURCE_HPP',
          body='#define SFML_ALRESOURCE_HPP'),
 Fragment(document_cs='3f5a5a20e5ff152799448640bf75ed69a8c82de3e590ce11ed4d9892669e0517',
          id=858,
          lineno=1,
          tokens=17,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n  Macros: SFML_ALRESOURCE_HPP\n'),
 Fragment(document_cs='3fbf1d95ea68ae0a543b2faadae888882a3c47c633239d39bf1894e14a5eb82d',
          id=859,
          lineno=5,
          tokens=211,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='merging',
          body='merging(int arr1[], int arr2[], int arr3[])void merging(int '
               'arr1[], int arr2[], int arr3[])\n'
               '{\n'
               '\tint i = 0, j = 0, k = 0;\n'
               '\tfor (i = 0; i < 5 && j < 5;)\n'
               '\t{ // comparing first array elements with second\n'
               '\t\tif (arr1[i] < arr2[j])\n'
               '\t\t{\n'
               '\t\t\tarr3[k] = arr1[i];\n'
               '\t\t\tk++;\n'
               '\t\t\ti++;\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tarr3[k] = arr2[j];\n'
               '\t\t\tk++;\n'
               '\t\t\tj++;\n'
               '\t\t}\n'
               '\t}\n'
               '\twhile (i < 5)\n'
               '\t{ // comparing for other elements of first and third arrays\n'
               '\t\tarr3[k] = arr1[i];\n'
               '\t\tk++;\n'
               '\t\ti++;\n'
               '\t}\n'
               '\twhile (j < 5)\n'
               '\t{ // comparing for other elements of second and third '
               'arrays\n'
               '\t\tarr3[k] = arr2[j];\n'
               '\t\tk++;\n'
               '\t\tj++;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='3fbf1d95ea68ae0a543b2faadae888882a3c47c633239d39bf1894e14a5eb82d',
          id=860,
          lineno=37,
          tokens=161,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()int main()\n'
               '{\n'
               '\n'
               '\tint arr1[5], arr2[5];\n'
               '\tint arr3[10];\n'
               '\tint i;\n'
               '\tcout << "Input the elements for the first Array: ";\n'
               '\tfor (i = 0; i < 5; i++)\n'
               '\t{\n'
               '\t\tcin >> arr1[i];\n'
               '\t}\n'
               '\tcout << "Input the elements for the second Array: ";\n'
               '\tfor (i = 0; i < 5; i++)\n'
               '\t{\n'
               '\t\tcin >> arr2[i];\n'
               '\t}\n'
               '\tmerging(arr1, arr2, arr3); // calling function merging\n'
               '\tcout << "Sorted Elements: ";\n'
               '\tfor (i = 0; i < 10; i++)\n'
               '\t{\n'
               '\t\tcout << arr3[i] << " ";\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='3fbf1d95ea68ae0a543b2faadae888882a3c47c633239d39bf1894e14a5eb82d',
          id=861,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='3fbf1d95ea68ae0a543b2faadae888882a3c47c633239d39bf1894e14a5eb82d',
          id=862,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main merging\n  Using: std\n'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=863,
          lineno=45,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=864,
          lineno=77,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='play',
          body='play()'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=865,
          lineno=88,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='pause',
          body='pause()'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=866,
          lineno=100,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='stop',
          body='stop()'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=867,
          lineno=110,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getChannelCount',
          body='getChannelCount() const'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=868,
          lineno=121,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleRate',
          body='getSampleRate() const'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=869,
          lineno=129,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getStatus',
          body='getStatus() const'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=870,
          lineno=144,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setPlayingOffset',
          body='setPlayingOffset(Time timeOffset)'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=871,
          lineno=154,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getPlayingOffset',
          body='getPlayingOffset() const'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=872,
          lineno=169,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setLoop',
          body='setLoop(bool loop)'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=873,
          lineno=179,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getLoop',
          body='getLoop() const'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=874,
          lineno=210,
          tokens=11,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='initialize',
          body='initialize(unsigned int channelCount, unsigned int sampleRate)'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=875,
          lineno=229,
          tokens=7,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='onGetData',
          body='onGetData(Chunk& data)'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=876,
          lineno=240,
          tokens=6,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='onSeek',
          body='onSeek(Time timeOffset)'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=877,
          lineno=252,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='onLoop',
          body='onLoop()'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=878,
          lineno=279,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='fillAndPushBuffer',
          body='fillAndPushBuffer(unsigned int bufferNum, bool immediateLoop = '
               'false)'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=879,
          lineno=290,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='fillQueue',
          body='fillQueue()'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=880,
          lineno=298,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='clearQueue',
          body='clearQueue()'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=881,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDSTREAM_HPP',
          body='#define SFML_SOUNDSTREAM_HPP'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=882,
          lineno=56,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='sampleCount',
          body='std::size_t  sampleCount;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=883,
          lineno=309,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_thread',
          body='Thread        m_thread;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=884,
          lineno=310,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_threadMutex',
          body='mutable Mutex m_threadMutex;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=885,
          lineno=311,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_threadStartState',
          body='Status        m_threadStartState;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=886,
          lineno=312,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_isStreaming',
          body='bool          m_isStreaming;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=887,
          lineno=314,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_channelCount',
          body='unsigned int  m_channelCount;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=888,
          lineno=315,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sampleRate',
          body='unsigned int  m_sampleRate;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=889,
          lineno=316,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_format',
          body='Uint32        m_format;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=890,
          lineno=317,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_loop',
          body='bool          m_loop;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=891,
          lineno=318,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_samplesProcessed',
          body='Uint64        m_samplesProcessed;'),
 Fragment(document_cs='40b535f0db29bdf96d930764cfbd616e37e1348185adc603a2662ac644d6de3b',
          id=892,
          lineno=1,
          tokens=87,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n'
               '  Macros: SFML_SOUNDSTREAM_HPP\n'
               '  Functions: clearQueue fillAndPushBuffer fillQueue '
               'getChannelCount getLoop getPlayingOffset getSampleRate '
               'getStatus initialize onGetData onLoop onSeek pause play '
               'setLoop setPlayingOffset stop\n'
               '  Variables: m_channelCount m_format m_isStreaming m_loop '
               'm_sampleRate m_samplesProcessed m_thread m_threadMutex '
               'm_threadStartState sampleCount\n'),
 Fragment(document_cs='40d3ef96fdf263c0421bb4684789fa57137619980429b9c70ef75e54649a5d2a',
          id=893,
          lineno=8,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\tC++ program to Calculate Area of Right angle '
               'Triangle.\\n ";\n'
               '\tfloat a, b, Area;\n'
               '\tcout << "Please enter the value for the first cathet of '
               'Triangle: ";\n'
               '\tcin >> a;\n'
               '\tcout << "Please enter the value for the second cathet of '
               'Triangle: ";\n'
               '\tcin >> b;\n'
               '\tif (a > 0 && b > 0)\n'
               '\t{\n'
               '\t\tArea = b * a * 0.5;\n'
               '\t\tcout << "The Area of this Triangle is " << Area << ";" << '
               'endl;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "The sides of Triangle cannot be negative numbers '
               '! " << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='40d3ef96fdf263c0421bb4684789fa57137619980429b9c70ef75e54649a5d2a',
          id=894,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='40d3ef96fdf263c0421bb4684789fa57137619980429b9c70ef75e54649a5d2a',
          id=895,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='4147765d6d14916c3050d29e313b6370f8d965fa488a4df17c470c07f4106f17',
          id=896,
          lineno=38,
          tokens=4,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='SoundFileWriter',
          body='class SoundFileWriter'),
 Fragment(document_cs='4147765d6d14916c3050d29e313b6370f8d965fa488a4df17c470c07f4106f17',
          id=897,
          lineno=44,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='4147765d6d14916c3050d29e313b6370f8d965fa488a4df17c470c07f4106f17',
          id=898,
          lineno=74,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromFile',
          body='openFromFile(const std::string& filename, unsigned int '
               'sampleRate, unsigned int channelCount)'),
 Fragment(document_cs='4147765d6d14916c3050d29e313b6370f8d965fa488a4df17c470c07f4106f17',
          id=899,
          lineno=83,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='write',
          body='write(const Int16* samples, Uint64 count)'),
 Fragment(document_cs='4147765d6d14916c3050d29e313b6370f8d965fa488a4df17c470c07f4106f17',
          id=900,
          lineno=26,
          tokens=9,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_OUTPUTSOUNDFILE_HPP',
          body='#define SFML_OUTPUTSOUNDFILE_HPP'),
 Fragment(document_cs='4147765d6d14916c3050d29e313b6370f8d965fa488a4df17c470c07f4106f17',
          id=901,
          lineno=1,
          tokens=30,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API SoundFileWriter\n'
               '  Macros: SFML_OUTPUTSOUNDFILE_HPP\n'
               '  Functions: openFromFile write\n'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=902,
          lineno=46,
          tokens=10,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_APIclass SFML_NETWORK_API'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=903,
          lineno=82,
          tokens=22,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Request',
          body='Request(const std::string& uri = "/", Method method = Get, '
               'const std::string& body = "")'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=904,
          lineno=97,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setField',
          body='setField(const std::string& field, const std::string& value)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=905,
          lineno=109,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setMethod',
          body='setMethod(Method method)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=906,
          lineno=121,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setUri',
          body='setUri(const std::string& uri)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=907,
          lineno=132,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setHttpVersion',
          body='setHttpVersion(unsigned int major, unsigned int minor)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=908,
          lineno=144,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setBody',
          body='setBody(const std::string& body)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=909,
          lineno=159,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='prepare',
          body='prepare() const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=910,
          lineno=171,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='hasField',
          body='hasField(const std::string& field) const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=911,
          lineno=257,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getField',
          body='getField(const std::string& field) const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=912,
          lineno=270,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getStatus',
          body='getStatus() const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=913,
          lineno=280,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getMajorHttpVersion',
          body='getMajorHttpVersion() const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=914,
          lineno=290,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getMinorHttpVersion',
          body='getMinorHttpVersion() const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=915,
          lineno=304,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getBody',
          body='getBody() const'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=916,
          lineno=319,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='parse',
          body='parse(const std::string& data)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=917,
          lineno=331,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='parseFields',
          body='parseFields(std::istream &in)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=918,
          lineno=368,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Http',
          body='Http(const std::string& host, unsigned short port = 0)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=919,
          lineno=385,
          tokens=16,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setHost',
          body='setHost(const std::string& host, unsigned short port = 0)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=920,
          lineno=405,
          tokens=14,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='sendRequest',
          body='sendRequest(const Request& request, Time timeout = Time::Zero)'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=921,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_HTTP_HPP',
          body='#define SFML_HTTP_HPP'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=922,
          lineno=176,
          tokens=15,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='FieldTable',
          body='typedef std::map<std::string, std::string> FieldTable;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=923,
          lineno=336,
          tokens=15,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='FieldTable',
          body='typedef std::map<std::string, std::string> FieldTable;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=924,
          lineno=181,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_fields',
          body='FieldTable   m_fields;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=925,
          lineno=182,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_method',
          body='Method       m_method;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=926,
          lineno=183,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_uri',
          body='std::string  m_uri;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=927,
          lineno=184,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_majorVersion',
          body='unsigned int m_majorVersion;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=928,
          lineno=185,
          tokens=12,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_minorVersion',
          body='unsigned int m_minorVersion;unsigned int m_minorVersion;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=929,
          lineno=186,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_body',
          body='std::string  m_body;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=930,
          lineno=341,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_fields',
          body='FieldTable   m_fields;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=931,
          lineno=342,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_status',
          body='Status       m_status;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=932,
          lineno=343,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_majorVersion',
          body='unsigned int m_majorVersion;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=933,
          lineno=345,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_body',
          body='std::string  m_body;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=934,
          lineno=413,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_host',
          body='IpAddress      m_host;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=935,
          lineno=414,
          tokens=8,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_hostName',
          body='std::string    m_hostName;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=936,
          lineno=415,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_port',
          body='unsigned short m_port;'),
 Fragment(document_cs='4192d0bf3bc18c4937263707ce145f59d8fdd49b2c599bff142553f0663fc20f',
          id=937,
          lineno=1,
          tokens=96,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_NETWORK_API\n'
               '  Typedefs: FieldTable\n'
               '  Macros: SFML_HTTP_HPP\n'
               '  Functions: Http Request getBody getField getMajorHttpVersion '
               'getMinorHttpVersion getStatus hasField parse parseFields '
               'prepare sendRequest setBody setField setHost setHttpVersion '
               'setMethod setUri\n'
               '  Variables: m_body m_fields m_host m_hostName m_majorVersion '
               'm_method m_minorVersion m_port m_status m_uri\n'
               '  Usages: Zero\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=938,
          lineno=14,
          tokens=186,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='int main_menu_view()\n'
               '{\n'
               '\tsystem("color 3F");\n'
               '\tcout << "\\t\\t  '
               '*************************************************************************************" '
               '<< endl;\n'
               '\tcout << "\\t\\t  '
               '*****                                                                           '
               '*****" << endl;\n'
               '\tcout << "\\t\\t  *****           H E L L O !  W E L C O M E  '
               'T O  T H E  \'Q U I Z L E T\'         *****" << endl;\n'
               '\tcout << "\\t\\t  *****                = = = = = = = = = = = '
               '= = = = = = = = = = = = =            *****" << endl;\n'
               '\tcout << "\\t\\t  *****                          = = = = = = '
               '= = = = = =                          *****" << endl;\n'
               '\tcout << "\\t\\t  *****                                   B '
               'Y                                     *****" << endl;\n'
               '\tcout << "\\t\\t  *****                       R U S T A M    '
               'Z O K I R O V         '),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=939,
          lineno=14,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='main_menu_view()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=940,
          lineno=23,
          tokens=207,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='               *****" << endl;\n'
               '\tcout << "\\t\\t  '
               '*****                                                                           '
               '*****" << endl;\n'
               '\tcout << "\\t\\t  '
               '*************************************************************************************" '
               '<< endl;\n'
               '\tcout << endl;\n'
               '\n'
               '\tcout << "\\t\\t\\t\\t\\t\\tH O W  T O  P L A Y\\n\\n";\n'
               '\tcout << "\\t\\t1. IN THIS QUIZ GAME YOU WILL BE GIVEN 10 '
               '\'C++ PROGRAMMING LANGUAGE\' RELATED QUESTIONS.\\n\\n";\n'
               '\tcout << "\\t\\t2. IF YOU PRESS INCORRECT KEY, THE PROGRAM '
               'WILL AGAIN ASK YOU TO INPUT CORRECT VALUE.\\n\\n";\n'
               '\tcout << "\\t\\t3. ADDITIONALLY YOU WILL HAVE SOME HINTS '
               'WHICH YOU CAN USE FROM the 8TH QUESTION.\\n\\n";\n'
               '\tcout << "\\t\\t4. YOU WILL LOSE \'5\' POINTS FROM YOUR '
               'OVERALL SCORE IF YOU WILL USE HINTS.\\n\\n\\n\\n";\n'
               '\tcout << "\\t\\t\\t\\t\\tPRESS THE \'ENTER\' KEY TO START A '
               'QUIZ... ";\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=941,
          lineno=34,
          tokens=210,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body="\tif (cin.get() == '\\n') {\n"
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\t\\t\\t\\t\\tI N F O R M A T I O N   T A B L '
               'E\\n\\n";\n'
               '\t\tcout << "What is your name? ";\n'
               '\t\tgetline(cin, Name[0]);\n'
               '\t\tcout << "What is your level of C++?"<<endl;\n'
               '\t\tcout << "[1]. Junior" << endl;\n'
               '\t\tcout << "[2]. Middle" << endl;\n'
               '\t\tcout << "[3]. Senior" << endl;\n'
               '\t\tdo {\n'
               '\t\t\tcout << "Choose the level of difficulty: ";\n'
               '\t\t\tcin >> level;\n'
               '\t\t\tcin.clear();\n'
               '\t\t} while (level != "1"&&level!="2"&&level!="3");\n'
               '\t\tstring Respond;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Are you ready to take the Quiz " << Name[0] << " '
               '? Yes = \'Yes\'/No = \'Any key\'. " << endl;\n'
               '\t\tcout << "Your choice: ";\n'
               '\t\tcin >> Respond;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=942,
          lineno=53,
          tokens=104,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='\t\tif (Respond == "yes" || Respond == "Yes")\n'
               '\t\t{\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tcout << "OK, Good Like!!! " << endl;\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\treturn 1;\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "OK. Goodbye." << endl;\n'
               '\t\t\tsystem("exit");\n'
               '\t\t\treturn 0;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t\tcout << "I meant ONLY the ENTER key... Oh well.\\n";\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=943,
          lineno=72,
          tokens=101,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='hints',
          body='void hints()\n'
               '{\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '**   A: Audience help            **" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '**   B: 50:50                    **" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '**   C: Room for mistake         **" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '**   D: Change the question      **" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '}hints()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=944,
          lineno=82,
          tokens=225,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question1',
          body='question1()void question1() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "      *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl; \n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 1"<< endl;\n'
               '\t\tcout << "What is the correct value to return to the '
               'operating system upon the successful completion of a program?" '
               '<< endl;\n'
               '\t\tcout << "[1] -1"<<endl;\n'
               '\t\tcout << "[2]  1" << endl;\n'
               '\t\tcout << "[3]  0" << endl;\n'
               '\t\tcout << "[4] Programs do not return a value" << endl;\n'
               '\t\tstring answer;\n'
               '\t\tcout << endl;\n'
               '    \tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t\t//limiting the answers of the user\n'
               '\t\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=945,
          lineno=99,
          tokens=242,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question1',
          body='\t\t\tif (answer == "3")\n'
               '\t\t\t{\n'
               '\t\t\t\ttotal_score += 10;\n'
               '\t\t\t\tcorrect_answer += 1;\n'
               '\t\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t\t}\n'
               '\t\t\telse if (answer == "1" || answer == "2" || answer == '
               '"4")\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t\t}\n'
               '\t\telse \n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion1();\n'
               '\t\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=946,
          lineno=125,
          tokens=184,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question2',
          body='void question2() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 2" << endl;\n'
               '\tcout << "What is the only function all C++ programs must '
               'contain?" << endl;\n'
               '\tcout << "[1] start()" << endl;\n'
               '\tcout << "[2] system()" << endl;\n'
               '\tcout << "[3] program()" << endl;\n'
               '\tcout << "[4] main()" << endl;\n'
               '\tstring answer;\n'
               '\tcout<<endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=947,
          lineno=125,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question2',
          body='question2()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=948,
          lineno=141,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question2',
          body='\t\tif (answer == "4")\n'
               '\t\t{\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "2" || answer == "3")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion2();\n'
               '\t}\n'
               '\t\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=949,
          lineno=168,
          tokens=189,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question3',
          body='void question3() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 3" << endl;\n'
               '\tcout << "Which of the following is a correct comment?" << '
               'endl;\n'
               '\tcout << "[1] / Comment /" << endl;\n'
               '\tcout << "[2] ** Comment **" << endl;\n'
               '\tcout << "[3] { Comment }" << endl;\n'
               '\tcout << "[4]  //comment" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=950,
          lineno=168,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question3',
          body='question3()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=951,
          lineno=184,
          tokens=236,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question3',
          body='\t\tif (answer == "4") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "2" || answer == "3")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion3();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=952,
          lineno=209,
          tokens=184,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question4',
          body='void question4() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 4" << endl; \n'
               '\tcout << "Which of the following is the correct operator to '
               'compare two variables?" << endl;\n'
               '\tcout << "[1] = =" << endl;\n'
               '\tcout << "[2] :=" << endl;\n'
               '\tcout << "[3] =" << endl;\n'
               '\tcout << "[4] ==" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=953,
          lineno=209,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question4',
          body='question4()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=954,
          lineno=225,
          tokens=236,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question4',
          body='\t\tif (answer == "4") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "2" || answer == "3")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion4();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=955,
          lineno=250,
          tokens=212,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question5',
          body='void question5() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 5" << endl; \n'
               '\tcout << "Which of the following is a complete function?" << '
               'endl;\n'
               '\tcout << "[1] int funct();" << endl;\n'
               '\tcout << "[2] int funct(int x) {return x=x+1;}" << endl;\n'
               '\tcout << "[3] void funct(int) {cout<<\'Hello\'}" << endl;\n'
               '\tcout << "[4] void funct(x) {cout<<\'Hello\'}" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=956,
          lineno=250,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question5',
          body='question5()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=957,
          lineno=266,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question5',
          body='\t\tif (answer == "2") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "3" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion5();\n'
               '\t\t}\n'
               '\t\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=958,
          lineno=292,
          tokens=190,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question6',
          body='void question6() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 6" << endl;\n'
               '\tcout << "Which is not a proper prototype?" << endl;\n'
               '\tcout << "[1] int funct(char x, char y);" << endl;\n'
               '\tcout << "[2] double funct(char x)" << endl;\n'
               '\tcout << "[3] void funct();" << endl;\n'
               '\tcout << "[4] char x();" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=959,
          lineno=292,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question6',
          body='question6()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=960,
          lineno=308,
          tokens=245,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question6',
          body='\t\tif (answer == "2") \n'
               '\t\t{\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "3" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion6();\n'
               '\t\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=961,
          lineno=336,
          tokens=208,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question7',
          body='void question7() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 7" << '
               'endl;  \n'
               '\tcout << "Which of the following is a two-dimensional array?" '
               '<< endl;\n'
               '\tcout << "[1] array anarray[20][20];" << endl;\n'
               '\tcout << "[2] int anarray[20][20];" << endl;\n'
               '\tcout << "[3] int array[20, 20];" << endl;\n'
               '\tcout << "[4] char array[20];" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=962,
          lineno=336,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question7',
          body='question7()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=963,
          lineno=352,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question7',
          body='\t\tif (answer == "2") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "3" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion7();\n'
               '\t\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=964,
          lineno=378,
          tokens=183,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='void question8() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\thints();\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 8" << endl;\n'
               '\tcout << "Evaluate !(1 && !(0 || 1))." << endl;\n'
               '\tcout << "[1] True" << endl;\n'
               '\tcout << "[2] False" << endl;\n'
               '\tcout << "[3] Unevaluatable" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\t//limiting the answers of the user\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" )\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=965,
          lineno=378,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='question8()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=966,
          lineno=395,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\t\tif (answer == "1") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\telse if (answer == "2" || answer == "3")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t}\n'
               '\t//if cases for the hints\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=967,
          lineno=413,
          tokens=244,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\telse if (answer == "A" || answer == "a")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Audience prediction is...  " << endl;\n'
               '\t\tcout << "[1] 42%" << endl;\n'
               '\t\tcout << "[2] 38%" << endl;\n'
               '\t\tcout << "[3] 20%" << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t\tif (answer == "1") {\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 5." << endl;\n'
               '\n'
               '\t\t}\n'
               '\t\telse if (answer == "2" || answer == "3")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\n'
               '\t\t}\n'
               '\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=968,
          lineno=442,
          tokens=191,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\telse if (answer == "B" || answer == "b")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Now you have chance to choose two answers. If one '
               'of them will correct you will take 5 points." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tQ U E S T I O N  No. 8" << endl;\n'
               '\t\tcout << "Evaluate !(1 && !(0 || 1))." << endl;\n'
               '\t\tcout << "[1] True" << endl;\n'
               '\t\tcout << "[2] False" << endl;\n'
               '\t\tcout << "[3] Unevaluatable" << endl;\n'
               '\t\tstring answer1, answer2;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR FIRST CHOICE: ";\n'
               '\t\tcin >> answer1;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR SECOND CHOICE: ";\n'
               '\t\tcin >> answer2;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=969,
          lineno=458,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\t\tif (answer1 == "1" || answer2 == "1")\n'
               '\t\t{\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 5 points out of 5." << endl; \n'
               '\t\t}\n'
               '\t\telse \n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=970,
          lineno=474,
          tokens=236,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\telse if (answer == "C" || answer == "c")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Now you have chance to answer incorrectly. You '
               'will take 5 points for this question." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tQ U E S T I O N  No. 8" << endl;\n'
               '\t\tcout << "Evaluate !(1 && !(0 || 1))." << endl;\n'
               '\t\tcout << "[1] True" << endl;\n'
               '\t\tcout << "[2] False" << endl;\n'
               '\t\tcout << "[3] Unevaluatable" << endl;\n'
               '\t\tstring answer;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t    total_score += 5;\n'
               '\t    correct_answer += 1;\n'
               '\t\tif(answer=="1")\n'
               '\t    cout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t    cout << "You got 5 points out of 5." << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=971,
          lineno=497,
          tokens=176,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\telse if (answer == "D" || answer == "d") \n'
               '    {\n'
               '         hints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\t T H I S   I S  A  N E W   Q U E S T I O N. Y '
               'O U  W I L L  G E T  5  P O I N T S. " << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "When did INHA UNivercity in TAshkent '
               'established?." << endl;\n'
               '\t\tcout << "[1] 2014" << endl;\n'
               '\t\tcout << "[2] 1968" << endl;\n'
               '\t\tcout << "[3] 2015" << endl;\n'
               '\t\tstring answer;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=972,
          lineno=511,
          tokens=232,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question8',
          body='\t\t\tif (answer == "1") {\n'
               '\t\t\t\ttotal_score += 5;\n'
               '\t\t\t\tcorrect_answer += 1;\n'
               '\t\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\n'
               '\t\t\t}\n'
               '\t\t\telse if (answer == "2" || answer == "3")\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\n'
               '\t\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'
               '\n'
               '\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion8();\n'
               '\t\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=973,
          lineno=539,
          tokens=64,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='void question9() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\thints();\n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=974,
          lineno=539,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='question9()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=975,
          lineno=544,
          tokens=215,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body=' T I O N  No. 9" << endl;\n'
               '\tcout << "What is the result of the program below?" << endl;\n'
               '\tcout << " int x = 10; " << endl;\n'
               '\tcout << " int y = 70; " << endl;\n'
               '\tcout << " x = x + y; " << endl;\n'
               '\tcout << " y = x - y;  " << endl;\n'
               '\tcout << " x = x - y;  " << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "[1] x=70, y=10" << endl;\n'
               '\tcout << "[2] x=10, y=70" << endl;\n'
               '\tcout << "[3] x=60, y=20" << endl;\n'
               '\tcout << "[4] x=20, y=60" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=976,
          lineno=562,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='\t\tif (answer == "1") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\telse if (answer == "2" || answer == "3" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=977,
          lineno=579,
          tokens=180,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='\telse if (answer == "A" || answer == "a")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Audience prediction is...  " << endl;\n'
               '\t\tcout << "[1] 30%" << endl;\n'
               '\t\tcout << "[2] 25%" << endl;\n'
               '\t\tcout << "[3] 20%" << endl;\n'
               '\t\tcout << "[4] 25%" << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t\tif (answer == "1") {\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\n'
               '\t\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=978,
          lineno=598,
          tokens=220,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='\t\telse if (answer == "2" || answer == "3" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'
               '\telse if (answer == "B" || answer == "b")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Now you have chance to choose two answers. If one '
               'of them will correct you will take 5 points." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tQ U E S T I O N  No. 9" << endl;\n'
               '\t\tcout << "What is the result of the program below?" << '
               'endl;\n'
               '\t\tcout << " int x = 10; " << endl;\n'
               '\t\tcout << " int y = 70; " << endl;\n'
               '\t\tcout << " x = x + y; " << end'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=979,
          lineno=616,
          tokens=239,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='l;\n'
               '\t\tcout << " y = x - y;  " << endl;\n'
               '\t\tcout << " x = x - y;  " << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "[1] x=70, y=10" << endl;\n'
               '\t\tcout << "[2] x=10, y=70" << endl;\n'
               '\t\tcout << "[3] x=60, y=20" << endl;\n'
               '\t\tcout << "[4] x=20, y=60" << endl;\n'
               '\t\tstring answer1, answer2;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR FIRST CHOICE: ";\n'
               '\t\tcin >> answer1;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR SECOND CHOICE: ";\n'
               '\t\tcin >> answer2;\n'
               '\t\tif (answer1 == "1" || answer2 == "1")\n'
               '\t\t{\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\t\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=980,
          lineno=637,
          tokens=192,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t\t\n'
               '\t}\n'
               '\telse if (answer == "C" || answer == "c")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Now you have chance to answer incorrectly. You '
               'will take 5 points for this question." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tQ U E S T I O N  No. 9" << endl;\n'
               '\t\tcout << "What is the result of the program below?" << '
               'endl;\n'
               '\t\tcout << " int x = 10; " << endl;\n'
               '\t\tcout << " int y = 70; " << endl;\n'
               '\t\tcout << " x ='),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=981,
          lineno=656,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body=' x + y; " << endl;\n'
               '\t\tcout << " y = x - y;  " << endl;\n'
               '\t\tcout << " x = x - y;  " << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "[1] x=70, y=10" << endl;\n'
               '\t\tcout << "[2] x=10, y=70" << endl;\n'
               '\t\tcout << "[3] x=60, y=20" << endl;\n'
               '\t\tcout << "[4] x=20, y=60" << endl;\n'
               '\t\tstring answer;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t\ttotal_score += 5;\n'
               '\t\tcorrect_answer += 1;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=982,
          lineno=670,
          tokens=229,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='\t\tif (answer == "1")\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t\t\n'
               '\t}\n'
               '\telse if (answer == "D" || answer == "d") {\n'
               '\thints_used++;\n'
               '\tsystem("cls");\n'
               '\tcout << "\\t T H I S   I S  A  N E W   Q U E S T I O N. Y O '
               'U  W I L L  G E T  5  P O I N T S. " << endl;\n'
               '\tcout << endl;\n'
               '\tcout << "When did INHA UNivercity in TAshkent established?." '
               '<< endl;\n'
               '\tcout << "[1] 2014" << endl;\n'
               '\tcout << "[2] 1968" << endl;\n'
               '\tcout << "[3] 2015" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=983,
          lineno=691,
          tokens=227,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question9',
          body='\tif (answer == "1") {\n'
               '\t\ttotal_score += 5;\n'
               '\t\tcorrect_answer += 1;\n'
               '\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\n'
               '\t}\n'
               '\telse if (answer == "2" || answer == "3")\n'
               '\t{\n'
               '\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\n'
               '\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'
               '\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C '
               'O R R E C T  V A L U E !                ****" << endl;\n'
               '\t\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tquestion9();\n'
               '\t\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=984,
          lineno=718,
          tokens=231,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='void question10() {\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\tcout << '
               '"                                                                                     '
               '*****      TOTAL SCORE:" << total_score << "     *****" << '
               'endl;\n'
               '\tcout << '
               '"                                                                                     '
               '***********************************" << endl;\n'
               '\thints(); \n'
               '\tcout << "\\t\\t\\t\\t\\t  Q U E S T I O N  No. 10" << endl;\n'
               '\tcout << "What will i and j equal after the code below is '
               'executed?" << endl;\n'
               '\tcout << "int i = 5;" << endl;\n'
               '\tcout << "int j = i++;" << endl;\n'
               '\tcout << "[1] i=5, j=5 " << endl;\n'
               '\tcout << "[2] i=5, j=4" << endl;\n'
               '\tcout << "[3] i=5, j=6" << endl;\n'
               '\tcout << "[4] ERROR" << endl;\n'
               '\tstring answer;\n'
               '\tcout << endl;\n'
               '\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\tcin >> answer;\n'
               '\tif (answer == "1" || answer == "2" || answer == "3" || '
               'answer == "4")\n'
               '\t{\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=985,
          lineno=718,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='question10()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=986,
          lineno=737,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\t\tif (answer == "3") {\n'
               '\t\t\ttotal_score += 10;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 10 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\telse if (answer == "1" || answer == "2" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 10." << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=987,
          lineno=752,
          tokens=180,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\telse if (answer == "A" || answer == "a")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Audience prediction is...  " << endl;\n'
               '\t\tcout << "[1] 30%" << endl;\n'
               '\t\tcout << "[2] 25%" << endl;\n'
               '\t\tcout << "[3] 20%" << endl;\n'
               '\t\tcout << "[4] 25%" << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t\tif (answer == "3") {\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\t\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=988,
          lineno=770,
          tokens=82,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\t\telse if (answer == "1" || answer == "2" || answer == "4")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=989,
          lineno=780,
          tokens=246,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\telse if (answer == "B" || answer == "b")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Now you have chance to choose two answers. If one '
               'of them will correct you will take 5 points." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tQ U E S T I O N  No. 10" << endl;\n'
               '\t\tcout << "What will i and j equal after the code below is '
               'executed?" << endl;\n'
               '\t\tcout << "int i = 5;" << endl;\n'
               '\t\tcout << "int j = i++;" << endl;\n'
               '\t\tcout << "[1] i=5, j=5 " << endl;\n'
               '\t\tcout << "[2] i=5, j=4" << endl;\n'
               '\t\tcout << "[3] i=5, j=6" << endl;\n'
               '\t\tcout << "[4] ERROR" << endl;\n'
               '\t\tstring answer1, answer2;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR FIRST CHOICE: ";\n'
               '\t\tcin >> answer1;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR SECOND CHOICE: ";\n'
               '\t\tcin >> answer2;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=990,
          lineno=799,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\t\tif (answer1 == "3" || answer2 == "3")\n'
               '\t\t{\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=991,
          lineno=815,
          tokens=229,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\telse if (answer == "C" || answer == "c")\n'
               '\t{\n'
               '\t\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Now you have chance to answer incorrectly. You '
               'will take 5 points for this question." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tQ U E S T I O N  No. 10" << endl;\n'
               '\t\tcout << "What will i and j equal after the code below is '
               'executed?" << endl;\n'
               '\t\tcout << "int i = 5;" << endl;\n'
               '\t\tcout << "int j = i++;" << endl;\n'
               '\t\tcout << "[1] i=5, j=5 " << endl;\n'
               '\t\tcout << "[2] i=5, j=4" << endl;\n'
               '\t\tcout << "[3] i=5, j=6" << endl;\n'
               '\t\tcout << "[4] ERROR" << endl;\n'
               '\t\tstring answer;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'
               '\t\ttotal_score += 5;\n'
               '\t\tcorrect_answer += 1;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=992,
          lineno=834,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\t\tif (answer == "3")\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t}\n'
               '\telse if (answer == "D" || answer == "d") {\n'
               '\thints_used++;\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\t T H I S   I S  A  N E W   Q U E S T I O N. Y '
               'O U  W I L L  G E T  \'5\'  P O I N T S. " << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "When did INHA UNivercity in TAshkent '
               'established?." << endl;\n'
               '\t\tcout << "[1] 2014" << endl;\n'
               '\t\tcout << "[2] 1968" << endl;\n'
               '\t\tcout << "[3] 2015" << endl;\n'
               '\t\tstring answer;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\tENTER YOUR CHOICE: ";\n'
               '\t\tcin >> answer;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=993,
          lineno=855,
          tokens=230,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='question10',
          body='\t\tif (answer == "1") {\n'
               '\t\t\ttotal_score += 5;\n'
               '\t\t\tcorrect_answer += 1;\n'
               '\t\t\tcout << "C O R R E C T   A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 5 points out of 5." << endl;\n'
               '\n'
               '\t\t}\n'
               '\t\telse if (answer == "2" || answer == "3")\n'
               '\t\t{\n'
               '\t\t\tcout << "W R O N G  A N S W E R !!!" << endl;\n'
               '\t\t\tcout << "You got 0 points out of 5." << endl;\n'
               '\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tsystem("pause");\n'
               '\t\tsystem("cls");\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\tcout << "\\t\\t****           P L E A S E  I N P U T  C O '
               'R R E C T  V A L U E !                ****" << endl;\n'
               '\t\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\t\tcout << endl;\n'
               '\t\tquestion10();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=994,
          lineno=883,
          tokens=249,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='after_game',
          body='void after_game() {\n'
               '\tsystem("cls");\n'
               '\tsystem("color 0A");\n'
               '\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\tcout << '
               '"\\t\\t*****                                                                           '
               '*****" << endl;\n'
               '\tcout << "\\t\\t*****                       C O N G R A T U L '
               'A T I O N S ! ! !                 *****" << endl;\n'
               '\tcout << "\\t\\t*****                = = = = = = = = = = = = '
               '= = = = = = = = = = = =            *****" << endl;\n'
               '\tcout << "\\t\\t*****                            = = = = = = '
               '= = = = =                          *****" << endl;\n'
               '\tcout << '
               '"\\t\\t*****                                                                           '
               '*****" << endl;\n'
               '\tcout << '
               '"\\t\\t*****                                                                           '
               '*****" << endl;\n'
               '\tcout << '
               '"\\t\\t*****                                                                           '
               '*****" << endl;\n'
               '\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\tcout << endl;\n'
               '\tcout << "\\tTOTAL SCORE: " << total_score << endl;\n'
               '\tcout << "\\tYOU HAVE ANSWERED FOR \'" << correct_answer << '
               '"\' QUESTIONS OUT OF 10." << endl;\n'
               '\tcout << "\\tYOU HAVE USED "<<hints_used<<" HINTS DURING THE '
               'GAME."<<endl;\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=995,
          lineno=883,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='after_game',
          body='after_game()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=996,
          lineno=902,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='scores_table',
          body='scores_table()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=997,
          lineno=904,
          tokens=104,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\tint user_choice;\n'
               '\tuser_choice = main_menu_view();\n'
               '\tif (user_choice) {\n'
               '\t\tquestion1();\n'
               '\t\tquestion2();\n'
               '\t\tquestion3();\n'
               '\t\tquestion4();\n'
               '\t\tquestion5();\n'
               '\t\tquestion6();\n'
               '\t\tquestion7();\n'
               '\t\tquestion8();\n'
               '\t\tquestion9();\n'
               '\t\tquestion10();\n'
               '\t\tafter_game();\n'
               '\t\tscores_table();\n'
               '\t\treturn 0;\n'
               '\t}\n'
               '\telse {\n'
               '\t\treturn 0;\n'
               '\t}\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=998,
          lineno=928,
          tokens=242,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='scores_table',
          body='void scores_table()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\tcout << "\\t\\tH I G H E S T   S C O R E S" << endl;\n'
               '\tcout << '
               '"*********************************************************************" '
               '<< endl;\n'
               '\tcout << "***** 1 Rustam Zokirov  ***" << "              ***  '
               '" << "100" <<"  *****"<< endl;\n'
               '\tcout << "***** 2 Alimov 8        ***" << "              ***  '
               '" << "80" << "   *****" << endl;\n'
               '\tcout << "***** 3 " << Name[0] << "     ***" << '
               '"              ***  " << total_score << "    *****" << endl;\n'
               '\tcout << "***** 4 " << Name[1] << "                ***" << '
               '"              ***  " << total_score << "   *****" << endl;\n'
               '\tcout << "***** 5 " << Name[2] << "                ***" << '
               '"              ***  " << total_score << "   *****" << endl;\n'
               '\t \n'
               '\tcout << endl; \n'
               '\tcout << "Do you want to start a QUIZ again? (Yes/No)" << '
               'endl;\n'
               '\tstring play_again;\n'
               '\tcin >> play_again;\n'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=999,
          lineno=928,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='scores_table',
          body='scores_table()'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1000,
          lineno=943,
          tokens=42,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='scores_table',
          body='\tif (play_again == "Yes" || play_again == "yes")\n'
               '\t{\n'
               '\t\ttotal_score = 0;\n'
               '\t\tmain();\n'
               '\t}\n'
               '\telse\n'
               '\t\tcout << "OK, Goodbye! ";\n'
               '}'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1001,
          lineno=5,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1002,
          lineno=11,
          tokens=3,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='level',
          body='string level;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1003,
          lineno=48,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='Respond',
          body='string Respond;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1004,
          lineno=92,
          tokens=15,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;string answer;string answer;string answer;string '
               'answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1005,
          lineno=135,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1006,
          lineno=178,
          tokens=12,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;string answer;string answer;string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1007,
          lineno=260,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1008,
          lineno=388,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1009,
          lineno=452,
          tokens=7,
          depth=6,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer1',
          body='string answer1, answer2;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1010,
          lineno=484,
          tokens=3,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1011,
          lineno=507,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1012,
          lineno=624,
          tokens=7,
          depth=6,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer1',
          body='string answer1, answer2;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1013,
          lineno=664,
          tokens=3,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer',
          body='string answer;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1014,
          lineno=793,
          tokens=7,
          depth=6,
          parent_id=None,
          category='variable',
          summary=False,
          name='answer1',
          body='string answer1, answer2;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1015,
          lineno=905,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='user_choice',
          body='int user_choice;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1016,
          lineno=941,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='play_again',
          body='string play_again;'),
 Fragment(document_cs='41b92106248d121c0a548fb983da28843aba27ea1d393b44a3f066b22a0edc05',
          id=1017,
          lineno=1,
          tokens=51,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: after_game hints main main_menu_view question1 '
               'question10 question2 question3 question4 question5 question6 '
               'question7 question8 question9 scores_table\n'
               '  Variables: Respond answer answer1 level play_again '
               'user_choice\n'
               '  Using: std\n'),
 Fragment(document_cs='432f9d360d1ba19521ffceea09a6799777864534c715e7cb5482179f61ac9df3',
          id=1018,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_NATIVEACTIVITY_HPP',
          body='#define SFML_NATIVEACTIVITY_HPP'),
 Fragment(document_cs='432f9d360d1ba19521ffceea09a6799777864534c715e7cb5482179f61ac9df3',
          id=1019,
          lineno=40,
          tokens=4,
          depth=1,
          parent_id=None,
          category='struct',
          summary=False,
          name='ANativeActivity',
          body='struct ANativeActivity'),
 Fragment(document_cs='432f9d360d1ba19521ffceea09a6799777864534c715e7cb5482179f61ac9df3',
          id=1020,
          lineno=57,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='ANativeActivity',
          body='SFML_SYSTEM_API ANativeActivity'),
 Fragment(document_cs='432f9d360d1ba19521ffceea09a6799777864534c715e7cb5482179f61ac9df3',
          id=1021,
          lineno=1,
          tokens=25,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Structs: ANativeActivity\n'
               '  Macros: SFML_NATIVEACTIVITY_HPP\n'
               '  Variables: ANativeActivity\n'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1022,
          lineno=39,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='SoundBuffer',
          body='class SoundBuffer'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1023,
          lineno=45,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1024,
          lineno=61,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Sound',
          body='Sound(const SoundBuffer& buffer)'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1025,
          lineno=69,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Sound',
          body='Sound(const Sound& copy)'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1026,
          lineno=89,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='play',
          body='play()'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1027,
          lineno=100,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='pause',
          body='pause()'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1028,
          lineno=112,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='stop',
          body='stop()'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1029,
          lineno=126,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setBuffer',
          body='setBuffer(const SoundBuffer& buffer)'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1030,
          lineno=141,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setLoop',
          body='setLoop(bool loop)'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1031,
          lineno=156,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPlayingOffset',
          body='setPlayingOffset(Time timeOffset)'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1032,
          lineno=164,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getBuffer',
          body='getBuffer() const'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1033,
          lineno=174,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLoop',
          body='getLoop() const'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1034,
          lineno=184,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPlayingOffset',
          body='getPlayingOffset() const'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1035,
          lineno=192,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getStatus',
          body='getStatus() const'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1036,
          lineno=213,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='resetBuffer',
          body='resetBuffer()'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1037,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUND_HPP',
          body='#define SFML_SOUND_HPP'),
 Fragment(document_cs='444853f352b5f4bbfa35c8c458dc13df0774b1e73aea6ab9ed7a4e6091451bdc',
          id=1038,
          lineno=1,
          tokens=43,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API SoundBuffer\n'
               '  Macros: SFML_SOUND_HPP\n'
               '  Functions: Sound getBuffer getLoop getPlayingOffset '
               'getStatus pause play resetBuffer setBuffer setLoop '
               'setPlayingOffset stop\n'),
 Fragment(document_cs='44677d2386d6a22349d9a8b7220510c248d0b3bb7a57ab5aaf26ea60f4f87a1d',
          id=1039,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GRAPHICS_HPP',
          body='#define SFML_GRAPHICS_HPP'),
 Fragment(document_cs='44677d2386d6a22349d9a8b7220510c248d0b3bb7a57ab5aaf26ea60f4f87a1d',
          id=1040,
          lineno=1,
          tokens=9,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_GRAPHICS_HPP\n'),
 Fragment(document_cs='449ef2123899bba63cc8d2f12d454fc6b01b1976996a00737e5003ece41935d2',
          id=1041,
          lineno=4,
          tokens=124,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\t\\tPalcal\'s Triangle\\n";\n'
               '\tint a[7][7] = {};\n'
               '\tint row = 0, col = 0;\n'
               '\tfor (int row = 0; row < 7; row++)\n'
               '\t{\n'
               '\t\tfor (int col = 0; col < row; col++)\n'
               '\t\t{\n'
               '\t\t\ta[0][0] = 1;\n'
               '\t\t\ta[row + 1][1] = 1;\n'
               '\n'
               '\t\t\tcout << a[row][col];\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='449ef2123899bba63cc8d2f12d454fc6b01b1976996a00737e5003ece41935d2',
          id=1042,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='449ef2123899bba63cc8d2f12d454fc6b01b1976996a00737e5003ece41935d2',
          id=1043,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1044,
          lineno=1,
          tokens=206,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'if (CMAKE_VERSION VERSION_LESS 3.5.2)\n'
               '    include(CMakeParseArguments)\n'
               'endif()\n'
               '\n'
               '# in case of static linking, we must also define the list of '
               'all the dependencies of SFML libraries\n'
               'if(SFML_STATIC_LIBRARIES)\n'
               '    # detect the OS\n'
               '    if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")\n'
               '        set(FIND_SFML_OS_WINDOWS 1)\n'
               '    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")\n'
               '        set(FIND_SFML_OS_LINUX 1)\n'
               '    elseif(${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")\n'
               '        set(FIND_SFML_OS_FREEBSD 1)\n'
               '    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")\n'
               '        if (DEFINED IOS)\n'
               '            set(FIND_SFML_OS_IOS 1)\n'
               '        else()\n'
               '            set(FIND_SFML_OS_MACOSX 1)\n'
               '        endif()\n'
               '    endif()\n'
               '\n'
               '    # start with an empty list\n'
               '    set(FIND_SFML_DEPENDENCIES_NOTFOUND)\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1045,
          lineno=25,
          tokens=225,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    # macro that searches for a 3rd-party library\n'
               '    function(sfml_bind_dependency)\n'
               '        cmake_parse_arguments(THIS "" "TARGET;FRIENDLY_NAME" '
               '"SEARCH_NAMES" ${ARGN})\n'
               '        if (THIS_UNPARSED_ARGUMENTS)\n'
               '            message(FATAL_ERROR "Unknown arguments when '
               'calling sfml_bind_dependency: ${THIS_UNPARSED_ARGUMENTS}")\n'
               '        endif()\n'
               '\n'
               '        # No lookup in environment variables (PATH on '
               'Windows), as they may contain wrong library versions\n'
               '        find_library(${THIS_FRIENDLY_NAME}_LIB NAMES '
               '${THIS_SEARCH_NAMES}\n'
               '                     PATHS ${FIND_SFML_PATHS} PATH_SUFFIXES '
               'lib NO_SYSTEM_ENVIRONMENT_PATH)\n'
               '        mark_as_advanced(${THIS_FRIENDLY_NAME}_LIB)\n'
               '        if(${THIS_FRIENDLY_NAME}_LIB)\n'
               '            set_property(TARGET ${THIS_TARGET} APPEND PROPERTY '
               'INTERFACE_LINK_LIBRARIES "${${THIS_FRIENDLY_NAME}_LIB}")\n'
               '        else()\n'
               '            set(FIND_SFML_DEPENDENCIES_NOTFOUND '
               '"${FIND_SFML_DEPENDENCIES_NOTFOUND} ${THIS_FRIENDLY_NAME}" '
               'PARENT_SCOPE)\n'
               '        endif()\n'
               '    endfunction()\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1046,
          lineno=43,
          tokens=208,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    # sfml-window\n'
               '    list(FIND SFML_FIND_COMPONENTS "window" '
               'FIND_SFML_WINDOW_COMPONENT_INDEX)\n'
               '    if(FIND_SFML_WINDOW_COMPONENT_INDEX GREATER -1)\n'
               '        if(FIND_SFML_OS_LINUX OR FIND_SFML_OS_FREEBSD)\n'
               '            sfml_bind_dependency(TARGET X11 FRIENDLY_NAME '
               '"X11" SEARCH_NAMES "X11")\n'
               '            sfml_bind_dependency(TARGET X11 FRIENDLY_NAME '
               '"Xrandr" SEARCH_NAMES "Xrandr")\n'
               '        endif()\n'
               '\n'
               '        if(FIND_SFML_OS_LINUX)\n'
               '            sfml_bind_dependency(TARGET UDev FRIENDLY_NAME '
               '"UDev" SEARCH_NAMES "udev" "libudev")\n'
               '        endif()\n'
               '\n'
               '        if (FIND_SFML_OS_WINDOWS)\n'
               '            set_property(TARGET OpenGL APPEND PROPERTY '
               'INTERFACE_LINK_LIBRARIES "OpenGL32")\n'
               '        elseif(NOT FIND_SFML_OS_IOS)\n'
               '            sfml_bind_dependency(TARGET OpenGL FRIENDLY_NAME '
               '"OpenGL" SEARCH_NAMES "OpenGL" "GL")\n'
               '        endif()\n'
               '    endif()\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1047,
          lineno=62,
          tokens=70,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    # sfml-graphics\n'
               '    list(FIND SFML_FIND_COMPONENTS "graphics" '
               'FIND_SFML_GRAPHICS_COMPONENT_INDEX)\n'
               '    if(FIND_SFML_GRAPHICS_COMPONENT_INDEX GREATER -1)\n'
               '        sfml_bind_dependency(TARGET Freetype FRIENDLY_NAME '
               '"FreeType" SEARCH_NAMES "freetype")\n'
               '    endif()\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1048,
          lineno=68,
          tokens=210,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    # sfml-audio\n'
               '    list(FIND SFML_FIND_COMPONENTS "audio" '
               'FIND_SFML_AUDIO_COMPONENT_INDEX)\n'
               '    if(FIND_SFML_AUDIO_COMPONENT_INDEX GREATER -1)\n'
               '        sfml_bind_dependency(TARGET OpenAL FRIENDLY_NAME '
               '"OpenAL" SEARCH_NAMES "OpenAL" "openal" "openal32")\n'
               '        if (NOT FIND_SFML_OS_IOS)\n'
               '            sfml_bind_dependency(TARGET Vorbis FRIENDLY_NAME '
               '"VorbisFile" SEARCH_NAMES "vorbisfile")\n'
               '            sfml_bind_dependency(TARGET Vorbis FRIENDLY_NAME '
               '"VorbisEnc" SEARCH_NAMES "vorbisenc")\n'
               '        endif()\n'
               '        sfml_bind_dependency(TARGET Vorbis FRIENDLY_NAME '
               '"Vorbis" SEARCH_NAMES "vorbis")\n'
               '        sfml_bind_dependency(TARGET Vorbis FRIENDLY_NAME "Ogg" '
               'SEARCH_NAMES "ogg")\n'
               '        sfml_bind_dependency(TARGET FLAC FRIENDLY_NAME "FLAC" '
               'SEARCH_NAMES "FLAC")\n'
               '    endif()\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1049,
          lineno=81,
          tokens=53,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '    if (FIND_SFML_DEPENDENCIES_NOTFOUND)\n'
               '        set(FIND_SFML_ERROR "SFML found but some of its '
               'dependencies are missing '
               '(${FIND_SFML_DEPENDENCIES_NOTFOUND})")\n'
               '        set(SFML_FOUND FALSE)\n'
               '    endif()\n'
               'endif()\n'),
 Fragment(document_cs='4d3d240b1bf69183a691252b9e2881ffc192fd60330ae25b2448d906b3d94c36',
          id=1050,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='4e3610f11d3ef016237373c9a8246b279985b8565369afeb9aaca731d53fb9d3',
          id=1051,
          lineno=5,
          tokens=62,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='fibonacci',
          body='int fibonacci(int num)\n'
               "{ // new function 'fibonacci' for calculating fibonacci "
               'series\n'
               '\tif (num <= 1)\n'
               '\t{\n'
               '\t\treturn num;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\treturn (fibonacci(num - 1) + fibonacci(num - 2));\n'
               '\t}\n'
               '}fibonacci(int num)'),
 Fragment(document_cs='4e3610f11d3ef016237373c9a8246b279985b8565369afeb9aaca731d53fb9d3',
          id=1052,
          lineno=16,
          tokens=116,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\t\\t***Program to calculate the sum of natural '
               'numbers using recursion***" << endl;\n'
               '\tcout << "Enter how many numbers would you like to output : '
               '";\n'
               '\tint num;\n'
               '\tcin >> num;\n'
               '\tcout << "Fibonnaci Series: ";\t // inputing the quantity of '
               'numbers\n'
               '\tfor (int i = 0; i < num; i++)\t // for loop for displaying '
               'series\n'
               '\t\tcout << " " << fibonacci(i); // calling function\n'
               '\tcout << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='4e3610f11d3ef016237373c9a8246b279985b8565369afeb9aaca731d53fb9d3',
          id=1053,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='4e3610f11d3ef016237373c9a8246b279985b8565369afeb9aaca731d53fb9d3',
          id=1054,
          lineno=20,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='num',
          body='int num;'),
 Fragment(document_cs='4e3610f11d3ef016237373c9a8246b279985b8565369afeb9aaca731d53fb9d3',
          id=1055,
          lineno=1,
          tokens=16,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: fibonacci main\n  Variables: num\n  Using: std\n'),
 Fragment(document_cs='4faea2c459d1f9e74a2f4ca6d4f31ab7bd948d875c46642bc9c0a22e487c7ce0',
          id=1056,
          lineno=1,
          tokens=120,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment\n'
               '\n'
               '```\n'
               '1. Write a program to calculate area of following figures '
               'using function overloading:\n'
               'Circle\n'
               'Rectangle\n'
               'Triangle\n'
               'Square\n'
               '(Hint: 1. create 4 functions with same name area. 2. Each '
               'function to calculate area of one figure.)\n'
               '\n'
               '2. Write a program to calculate circumference of the following '
               'figures using function overloading:\n'
               'Circle\n'
               'Rectangle\n'
               'Triangle\n'
               'Square\n'
               '\n'
               '3. Write a program using function overloading:\n'
               'To find largest among three integers.\n'
               'To find largest among three floating point numbers.\n'
               '\n'
               '4. Convert function template for problem 3.\n'
               '```'),
 Fragment(document_cs='4faea2c459d1f9e74a2f4ca6d4f31ab7bd948d875c46642bc9c0a22e487c7ce0',
          id=1057,
          lineno=1,
          tokens=5,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment\n'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1058,
          lineno=42,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1059,
          lineno=68,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getGlobalVolume',
          body='getGlobalVolume()'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1060,
          lineno=82,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(float x, float y, float z)'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1061,
          lineno=94,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(const Vector3f& position)'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1062,
          lineno=104,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition()'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1063,
          lineno=123,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setDirection',
          body='setDirection(float x, float y, float z)'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1064,
          lineno=140,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setDirection',
          body='setDirection(const Vector3f& direction)'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1065,
          lineno=150,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDirection',
          body='getDirection()'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1066,
          lineno=169,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setUpVector',
          body='setUpVector(float x, float y, float z)'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1067,
          lineno=186,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setUpVector',
          body='setUpVector(const Vector3f& upVector)'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1068,
          lineno=196,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getUpVector',
          body='getUpVector()'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1069,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_LISTENER_HPP',
          body='#define SFML_LISTENER_HPP'),
 Fragment(document_cs='4fb2e80989ed910c22d7a431b990f17300f59cadac39c2939dd15a3923569651',
          id=1070,
          lineno=1,
          tokens=35,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n'
               '  Macros: SFML_LISTENER_HPP\n'
               '  Functions: getDirection getGlobalVolume getPosition '
               'getUpVector setDirection setPosition setUpVector\n'),
 Fragment(document_cs='5017ba503e334bc6cabf2698b2824698baa007f981d6e1bdc768e2ee0b374876',
          id=1071,
          lineno=9,
          tokens=133,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\tC++ program to Calculate Area of Rectangle. " '
               '<< endl;\n'
               '\tfloat a, b, Area;\n'
               '\tcout << "Please enter the length of Rectangle: ";\n'
               '\tcin >> a;\n'
               '\tcout << "Please enter the width of Rectangle: ";\n'
               '\tcin >> b;\n'
               '\tif (a > 0 && b > 0)\n'
               '\t{\n'
               '\t\tArea = a * b;\n'
               '\t\tcout << "The area of Rectangle is " << Area << ";" << '
               'endl;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "The sides of Rectangle cannot be negative numbers '
               '!" << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='5017ba503e334bc6cabf2698b2824698baa007f981d6e1bdc768e2ee0b374876',
          id=1072,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='5017ba503e334bc6cabf2698b2824698baa007f981d6e1bdc768e2ee0b374876',
          id=1073,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='515dc46cd564d538f8bfc3bafa146bccd31a8579a1b680c9196863f20b227215',
          id=1074,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='515dc46cd564d538f8bfc3bafa146bccd31a8579a1b680c9196863f20b227215',
          id=1075,
          lineno=72,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setString',
          body='setString(const String& text)'),
 Fragment(document_cs='515dc46cd564d538f8bfc3bafa146bccd31a8579a1b680c9196863f20b227215',
          id=1076,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CLIPBOARD_HPP',
          body='#define SFML_CLIPBOARD_HPP'),
 Fragment(document_cs='515dc46cd564d538f8bfc3bafa146bccd31a8579a1b680c9196863f20b227215',
          id=1077,
          lineno=1,
          tokens=23,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API\n'
               '  Macros: SFML_CLIPBOARD_HPP\n'
               '  Functions: setString\n'),
 Fragment(document_cs='522d1d3092bf0347ae63b5fdb73955dfb094302a29cfc3f2528de1f3ca97ebd6',
          id=1078,
          lineno=9,
          tokens=126,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\tC++ program to Calculate Area of Equilateral '
               'Triangle.\\n ";\n'
               '\tfloat a, Area;\n'
               '\tcout << "Please enter the value for the side of Triangle: '
               '";\n'
               '\tcin >> a;\n'
               '\tif (a > 0)\n'
               '\t{\n'
               '\t\tArea = sqrt(2) * a * a * 0.25;\n'
               '\t\tcout << "The Area of this triangle is " << Area << ";" << '
               'endl;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "The sides of Triangle cannot be negative numbers '
               '! " << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='522d1d3092bf0347ae63b5fdb73955dfb094302a29cfc3f2528de1f3ca97ebd6',
          id=1079,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='522d1d3092bf0347ae63b5fdb73955dfb094302a29cfc3f2528de1f3ca97ebd6',
          id=1080,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='5329454d33e556b656630fcbf669ae1fb5751d9e6c594c0c6f28b53580332789',
          id=1081,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GPUPREFERENCE_HPP',
          body='#define SFML_GPUPREFERENCE_HPP'),
 Fragment(document_cs='5329454d33e556b656630fcbf669ae1fb5751d9e6c594c0c6f28b53580332789',
          id=1082,
          lineno=63,
          tokens=56,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEFINE_DISCRETE_GPU_PREFERENCE',
          body='#define SFML_DEFINE_DISCRETE_GPU_PREFERENCE \\\n'
               '                extern "C" __declspec(dllexport) unsigned long '
               'NvOptimusEnablement = 1; \\\n'
               '                extern "C" __declspec(dllexport) unsigned long '
               'AmdPowerXpressRequestHighPerformance = 1;'),
 Fragment(document_cs='5329454d33e556b656630fcbf669ae1fb5751d9e6c594c0c6f28b53580332789',
          id=1083,
          lineno=69,
          tokens=10,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_DEFINE_DISCRETE_GPU_PREFERENCE',
          body='#define SFML_DEFINE_DISCRETE_GPU_PREFERENCE'),
 Fragment(document_cs='5329454d33e556b656630fcbf669ae1fb5751d9e6c594c0c6f28b53580332789',
          id=1084,
          lineno=1,
          tokens=19,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_DEFINE_DISCRETE_GPU_PREFERENCE '
               'SFML_GPUPREFERENCE_HPP\n'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1085,
          lineno=43,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1086,
          lineno=60,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='open',
          body='open(const void* data, std::size_t sizeInBytes)'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1087,
          lineno=74,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='read',
          body='read(void* data, Int64 size)'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1088,
          lineno=84,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='seek',
          body='seek(Int64 position)'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1089,
          lineno=92,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='tell',
          body='tell()'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1090,
          lineno=100,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize()'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1091,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_MEMORYINPUTSTREAM_HPP',
          body='#define SFML_MEMORYINPUTSTREAM_HPP'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1092,
          lineno=108,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_size',
          body='Int64       m_size;'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1093,
          lineno=109,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_offset',
          body='Int64       m_offset;'),
 Fragment(document_cs='53315704e53f44e681de5ddee3c5861bc8d9d278a098c817b1c568684fd5b957',
          id=1094,
          lineno=1,
          tokens=35,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n'
               '  Macros: SFML_MEMORYINPUTSTREAM_HPP\n'
               '  Functions: getSize open read seek tell\n'
               '  Variables: m_offset m_size\n'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1095,
          lineno=39,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='RenderTarget',
          body='class RenderTarget'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1096,
          lineno=40,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Vertex',
          body='class Vertex'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1097,
          lineno=46,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1098,
          lineno=60,
          tokens=34,
          depth=3,
          parent_id=None,
          category='enum',
          summary=False,
          name='Usage',
          body='enum Usage\n'
               '    {\n'
               '        Stream,  ///< Constantly changing data\n'
               '        Dynamic, ///< Occasionally changing data\n'
               '        Static   ///< Rarely changing data\n'
               '    }'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1099,
          lineno=83,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='VertexBuffer',
          body='VertexBuffer(PrimitiveType type)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1100,
          lineno=93,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='VertexBuffer',
          body='VertexBuffer(Usage usage)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1101,
          lineno=105,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='VertexBuffer',
          body='VertexBuffer(PrimitiveType type, Usage usage)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1102,
          lineno=113,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='VertexBuffer',
          body='VertexBuffer(const VertexBuffer& copy)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1103,
          lineno=137,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(std::size_t vertexCount)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1104,
          lineno=145,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getVertexCount',
          body='getVertexCount() const'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1105,
          lineno=165,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Vertex* vertices)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1106,
          lineno=198,
          tokens=17,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Vertex* vertices, std::size_t vertexCount, '
               'unsigned int offset)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1107,
          lineno=208,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const VertexBuffer& vertexBuffer)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1108,
          lineno=226,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='swap',
          body='swap(VertexBuffer& right)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1109,
          lineno=238,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getNativeHandle',
          body='getNativeHandle() const'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1110,
          lineno=251,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setPrimitiveType',
          body='setPrimitiveType(PrimitiveType type)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1111,
          lineno=259,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getPrimitiveType',
          body='getPrimitiveType() const'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1112,
          lineno=276,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUsage',
          body='setUsage(Usage usage)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1113,
          lineno=284,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getUsage',
          body='getUsage() const'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1114,
          lineno=307,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='bind',
          body='bind(const VertexBuffer* vertexBuffer)'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1115,
          lineno=319,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='isAvailable',
          body='isAvailable()'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1116,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VERTEXBUFFER_HPP',
          body='#define SFML_VERTEXBUFFER_HPP'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1117,
          lineno=338,
          tokens=8,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_size',
          body='std::size_t   m_size;'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1118,
          lineno=339,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_primitiveType',
          body='PrimitiveType m_primitiveType;'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1119,
          lineno=340,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_usage',
          body='Usage         m_usage;'),
 Fragment(document_cs='5359698a27aef55018f645888925a66131611868413738bf431afb04a59cc54b',
          id=1120,
          lineno=1,
          tokens=65,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: RenderTarget SFML_GRAPHICS_API Vertex\n'
               '  Enums: Usage\n'
               '  Macros: SFML_VERTEXBUFFER_HPP\n'
               '  Functions: VertexBuffer bind create getNativeHandle '
               'getPrimitiveType getUsage getVertexCount isAvailable '
               'setPrimitiveType setUsage swap update\n'
               '  Variables: m_primitiveType m_size m_usage\n'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1121,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1122,
          lineno=60,
          tokens=93,
          depth=5,
          parent_id=None,
          category='enum',
          summary=False,
          name='Axis',
          body='enum Axis\n'
               '    {\n'
               '        X,    ///< The X axis\n'
               '        Y,    ///< The Y axis\n'
               '        Z,    ///< The Z axis\n'
               '        R,    ///< The R axis\n'
               '        U,    ///< The U axis\n'
               '        V,    ///< The V axis\n'
               '        PovX, ///< The X axis of the point-of-view hat\n'
               '        PovY  ///< The Y axis of the point-of-view hat\n'
               '    }'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1123,
          lineno=93,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isConnected',
          body='isConnected(unsigned int joystick)'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1124,
          lineno=105,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getButtonCount',
          body='getButtonCount(unsigned int joystick)'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1125,
          lineno=118,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='hasAxis',
          body='hasAxis(unsigned int joystick, Axis axis)'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1126,
          lineno=131,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isButtonPressed',
          body='isButtonPressed(unsigned int joystick, unsigned int button)'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1127,
          lineno=144,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getAxisPosition',
          body='getAxisPosition(unsigned int joystick, Axis axis)'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1128,
          lineno=154,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getIdentification',
          body='getIdentification(unsigned int joystick)'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1129,
          lineno=165,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update()'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1130,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_JOYSTICK_HPP',
          body='#define SFML_JOYSTICK_HPP'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1131,
          lineno=76,
          tokens=5,
          depth=6,
          parent_id=None,
          category='struct',
          summary=False,
          name='SFML_WINDOW_API',
          body='struct SFML_WINDOW_API'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1132,
          lineno=80,
          tokens=4,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='name',
          body='String       name;'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1133,
          lineno=81,
          tokens=5,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='vendorId',
          body='unsigned int vendorId;'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1134,
          lineno=82,
          tokens=4,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='productId',
          body='unsigned int productId;'),
 Fragment(document_cs='544b7fc88a007e5138dc8093e79561b995090eba31888ea30aa1def21f62e82e',
          id=1135,
          lineno=1,
          tokens=59,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API\n'
               '  Structs: SFML_WINDOW_API\n'
               '  Enums: Axis\n'
               '  Macros: SFML_JOYSTICK_HPP\n'
               '  Functions: getAxisPosition getButtonCount getIdentification '
               'hasAxis isButtonPressed isConnected update\n'
               '  Variables: name productId vendorId\n'),
 Fragment(document_cs='5476dba1f4bd59f1444ca1fd0770c1db808311b772f7685b3ff60ad7956418a8',
          id=1136,
          lineno=1,
          tokens=2,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='385\n'),
 Fragment(document_cs='5476dba1f4bd59f1444ca1fd0770c1db808311b772f7685b3ff60ad7956418a8',
          id=1137,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1138,
          lineno=37,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Socket',
          body='class Socket'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1139,
          lineno=43,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1140,
          lineno=59,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='SocketSelector',
          body='SocketSelector(const SocketSelector& copy)'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1141,
          lineno=80,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='add',
          body='add(Socket& socket)'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1142,
          lineno=93,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='remove',
          body='remove(Socket& socket)'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1143,
          lineno=105,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='clear',
          body='clear()'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1144,
          lineno=123,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='wait',
          body='wait(Time timeout = Time::Zero)'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1145,
          lineno=142,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isReady',
          body='isReady(Socket& socket) const'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1146,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOCKETSELECTOR_HPP',
          body='#define SFML_SOCKETSELECTOR_HPP'),
 Fragment(document_cs='54ed7f964bc2db155fc27f3a03f2387eda69008d430e514cce4d6a2f5061109d',
          id=1147,
          lineno=1,
          tokens=37,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_NETWORK_API Socket\n'
               '  Macros: SFML_SOCKETSELECTOR_HPP\n'
               '  Functions: SocketSelector add clear isReady remove wait\n'
               '  Usages: Zero\n'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1148,
          lineno=40,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Texture',
          body='class Texture'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1149,
          lineno=47,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1150,
          lineno=67,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Sprite',
          body='Sprite(const Texture& texture)'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1151,
          lineno=78,
          tokens=12,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Sprite',
          body='Sprite(const Texture& texture, const IntRect& rectangle)'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1152,
          lineno=99,
          tokens=13,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setTexture',
          body='setTexture(const Texture& texture, bool resetRect = false)'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1153,
          lineno=113,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setTextureRect',
          body='setTextureRect(const IntRect& rectangle)'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1154,
          lineno=128,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setColor',
          body='setColor(const Color& color)'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1155,
          lineno=142,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getTexture',
          body='getTexture() const'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1156,
          lineno=152,
          tokens=5,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getTextureRect',
          body='getTextureRect() const'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1157,
          lineno=162,
          tokens=3,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getColor',
          body='getColor() const'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1158,
          lineno=176,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalBounds',
          body='getLocalBounds() const'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1159,
          lineno=190,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getGlobalBounds',
          body='getGlobalBounds() const'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1160,
          lineno=207,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='updatePositions',
          body='updatePositions()'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1161,
          lineno=213,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='updateTexCoords',
          body='updateTexCoords()'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1162,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SPRITE_HPP',
          body='#define SFML_SPRITE_HPP'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1163,
          lineno=47,
          tokens=51,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='Drawable',
          body='class SFML_GRAPHICS_API Sprite : public Drawable, public '
               'Transformable\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// Creates an empty sprite with no source texture.\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Sprite();'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1164,
          lineno=220,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_textureRect',
          body='IntRect        m_textureRect;'),
 Fragment(document_cs='56d49cb378de0f2f3748ce8afd47d8c4411571efd712f0ce09098fa4280b0b97',
          id=1165,
          lineno=1,
          tokens=55,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API Texture\n'
               '  Macros: SFML_SPRITE_HPP\n'
               '  Functions: Sprite getColor getGlobalBounds getLocalBounds '
               'getTexture getTextureRect setColor setTexture setTextureRect '
               'updatePositions updateTexCoords\n'
               '  Variables: Drawable m_textureRect\n'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1166,
          lineno=8,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='numbers_view()'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1167,
          lineno=10,
          tokens=17,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main1',
          body='main1()int main1()\n{\n\tnumbers_view();\n\n\treturn 0;\n}'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1168,
          lineno=17,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='void numbers_view()\n'
               '{\n'
               '\tint time = 10;\n'
               '\tSleep(1000);\n'
               '\twhile (time >= 0)\n'
               '\t{\n'
               '\t\tcout << "\\rTimer: " << setw(5) << time << flush;\n'
               '\t\tSleep(1000);\n'
               '\t\ttime--;\n'
               '\t\tconst char* num9[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t"      999999999      ",\n'
               '\t\t\t"    99:::::::::99    ",\n'
               '\t\t\t"  99:::::::::::::99  ",\n'
               '\t\t\t" 9::::::99999::::::9 ",\n'
               '\t\t\t" 9:::::9     9:::::9 ",\n'
               '\t\t\t" 9:::::9     9:::::9 ",\n'
               '\t\t\t"  9:::::9'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1169,
          lineno=17,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='numbers_view()'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1170,
          lineno=35,
          tokens=120,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='9999::::::9 ",\n'
               '\t\t\t"   99::::::::::::::9 ",\n'
               '\t\t\t"     99999::::::::9  ",\n'
               '\t\t\t"          9::::::9   ",\n'
               '\t\t\t"         9::::::9    ",\n'
               '\t\t\t"        9::::::9     ",\n'
               '\t\t\t"       9:::::9       ",\n'
               '\t\t\t"      9:::::9        ",\n'
               '\t\t\t"     9999999         ", NULL\n'
               '\t\t};\n'
               '\t\tconst char* num8[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t"      888888888      ",\n'
               '\t\t'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1171,
          lineno=49,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='\t"    88:::::::::88    ",\n'
               '\t\t\t"  88:::::::::::::88  ",\n'
               '\t\t\t" 8::::::88888::::::8 ",\n'
               '\t\t\t" 8:::::8     8:::::8 ",\n'
               '\t\t\t" 8:::::8     8:::::8 ",\n'
               '\t\t\t"  8:::::88888:::::8  ",\n'
               '\t\t\t"   8:::::::::::::8   ",\n'
               '\t\t\t"  8:::::88888:::::8  ",\n'
               '\t\t\t" 8:::::8     8:::::8 ",\n'
               '\t\t\t" 8:::::8     8:::::8 ",\n'
               '\t\t\t" 8::::::88888::::::8 ",\n'
               '\t\t\t"  88:::::::::::::88  ",\n'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1172,
          lineno=61,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='\t\t\t"    88:::::::::88    ",\n'
               '\t\t\t"      888888888      ", NULL\n'
               '\t\t};\n'
               '\t\tconst char* num7[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t" 77777777777777777777",\n'
               '\t\t\t" 7::::::::::::::::::7",\n'
               '\t\t\t" 7::::::::::::::::::7",\n'
               '\t\t\t" 777777777777:::::::7",\n'
               '\t\t\t"            7::::::7 ",\n'
               '\t\t\t"           7::::::7  ",\n'
               '\t\t\t"          7::::::7   ",\n'
               '\t\t\t"         7::::::7    ",\n'
               '\t\t\t"        7::::::7     ",\n'
               '\t\t\t"       7::::::7      ",\n'
               '\t\t\t"      7::::::7       ",\n'
               '\t\t\t"     7::::::7        ",\n'
               '\t\t\t"    7::::::7         ",\n'
               '\t\t\t"   7::::::7          ",\n'
               '\t\t\t"  77777777           ",NULL\n'
               '\t\t};\n'
               '\t\tconst char* num6[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t"         66666666    ",\n'
               '\t\t\t"        6::::::6     ",\n'
               '\t\t\t"    '),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1173,
          lineno=88,
          tokens=140,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='   6::::::6      ",\n'
               '\t\t\t"      6::::::6       ",\n'
               '\t\t\t"     6::::::6        ",\n'
               '\t\t\t"    6::::::6         ",\n'
               '\t\t\t"   6::::::::66666    ",\n'
               '\t\t\t"  6::::::::::::::6   ",\n'
               '\t\t\t" 6::::::66666:::::6  ",\n'
               '\t\t\t" 6:::::6     6:::::6 ",\n'
               '\t\t\t" 6:::::6     6:::::6 ",\n'
               '\t\t\t" 6::::::66666::::::6 ",\n'
               '\t\t\t"  66:::::::::::::66  ",\n'
               '\t\t\t"    66:::::::::66    ",\n'
               '\t\t\t"   '),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1174,
          lineno=100,
          tokens=130,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='   666666666      ",NULL\n'
               '\t\t};\n'
               '\t\tconst char* num5[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t" 555555555555555555  ",\n'
               '\t\t\t" 5::::::::::::::::5  ",\n'
               '\t\t\t" 5:::::555555555555  ",\n'
               '\t\t\t" 5:::::5             ",\n'
               '\t\t\t" 5:::::5             ",\n'
               '\t\t\t" 5:::::5555555555    ",\n'
               '\t\t\t" 5:::::::::::::::5   ",\n'
               '\t\t\t" 555555555555:::::5  ",\n'
               '\t\t\t"             5:::::5 '),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1175,
          lineno=113,
          tokens=129,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='",\n'
               '\t\t\t"             5:::::5 ",\n'
               '\t\t\t" 5555555     5:::::5 ",\n'
               '\t\t\t" 5::::::55555::::::5 ",\n'
               '\t\t\t"  55:::::::::::::55  ",\n'
               '\t\t\t"    55:::::::::55    ",\n'
               '\t\t\t"      555555555      ",NULL\n'
               '\t\t};\n'
               '\t\tconst char* num4[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t"        444444444    ",\n'
               '\t\t\t"       4::::::::4    ",\n'
               '\t\t\t"      4:::::::::4    ",\n'
               '\t\t\t"     4::::44'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1176,
          lineno=127,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='::::4    ",\n'
               '\t\t\t"    4::::4 4::::4    ",\n'
               '\t\t\t"   4::::4  4::::4    ",\n'
               '\t\t\t"  4::::4   4::::4    ",\n'
               '\t\t\t" 4::::444444::::444  ",\n'
               '\t\t\t" 4::::::::::::::::4  ",\n'
               '\t\t\t" 4444444444:::::444  ",\n'
               '\t\t\t"           4::::4    ",\n'
               '\t\t\t"           4::::4    ",\n'
               '\t\t\t"         44::::::44  ",\n'
               '\t\t\t"         4::::::::4  ",\n'
               '\t\t\t"         4444444444  ",NULL\n'
               '\t\t};\n'
               '\t\tcon'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1177,
          lineno=140,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='st char* num3[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t" 3333333333333333    ",\n'
               '\t\t\t" 3:::::::::::::::33  ",\n'
               '\t\t\t" 3::::::33333::::::3 ",\n'
               '\t\t\t" 3333333     3:::::3 ",\n'
               '\t\t\t"             3:::::3 ",\n'
               '\t\t\t"             3:::::3 ",\n'
               '\t\t\t"     33333333:::::3  ",\n'
               '\t\t\t"     3:::::::::::3   ",\n'
               '\t\t\t"     33333333:::::3  ",\n'
               '\t\t\t"             3:::::3 ",\n'
               '\t\t\t" '),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1178,
          lineno=153,
          tokens=132,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='            3:::::3 ",\n'
               '\t\t\t" 3333333     3:::::3 ",\n'
               '\t\t\t" 3::::::33333::::::3 ",\n'
               '\t\t\t" 3:::::::::::::::33  ",\n'
               '\t\t\t"  333333333333333    ",NULL\n'
               '\t\t};\n'
               '\t\tconst char* num2[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t" 222222222222222     ",\n'
               '\t\t\t" 2:::::::::::::::22  ",\n'
               '\t\t\t" 2::::::222222:::::2 ",\n'
               '\t\t\t" 2222222     2:::::2 ",\n'
               '\t\t\t"             2:::::'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1179,
          lineno=166,
          tokens=134,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='2 ",\n'
               '\t\t\t"             2:::::2 ",\n'
               '\t\t\t"          2222::::2  ",\n'
               '\t\t\t"     22222::::::22   ",\n'
               '\t\t\t"   22::::::::222     ",\n'
               '\t\t\t"  2:::::22222        ",\n'
               '\t\t\t" 2:::::2             ",\n'
               '\t\t\t" 2:::::2       222222",\n'
               '\t\t\t" 2::::::2222222:::::2",\n'
               '\t\t\t" 2::::::::::::::::::2",\n'
               '\t\t\t" 22222222222222222222",NULL\n'
               '\t\t};\n'
               '\t\tconst char* num1[] =\n'
               '\t\t{\n'
               '\t\t\t"          '),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1180,
          lineno=180,
          tokens=120,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='           ",\n'
               '\t\t\t"       1111111       ",\n'
               '\t\t\t"      1::::::1       ",\n'
               '\t\t\t"     1:::::::1       ",\n'
               '\t\t\t"     111:::::1       ",\n'
               '\t\t\t"        1::::1       ",\n'
               '\t\t\t"        1::::1       ",\n'
               '\t\t\t"        1::::1       ",\n'
               '\t\t\t"        1::::l       ",\n'
               '\t\t\t"        1::::l       ",\n'
               '\t\t\t"        1::::l       ",\n'
               '\t\t\t"        1::::l       ",\n'
               '\t\t\t"     111'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1181,
          lineno=192,
          tokens=132,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='::::::111    ",\n'
               '\t\t\t"     1::::::::::1    ",\n'
               '\t\t\t"     1::::::::::1    ",\n'
               '\t\t\t"     111111111111    ",NULL\n'
               '\t\t};\n'
               '\t\tconst char* num0[] =\n'
               '\t\t{\n'
               '\t\t\t"                     ",\n'
               '\t\t\t"      000000000      ",\n'
               '\t\t\t"    00:::::::::00    ",\n'
               '\t\t\t"  00:::::::::::::00  ",\n'
               '\t\t\t" 0:::::::000:::::::0 ",\n'
               '\t\t\t" 0::::::0   0::::::0 ",\n'
               '\t\t\t" 0:::::0     0:::::0 ",\n'
               '\t\t\t'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1182,
          lineno=206,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body='" 0:::::0     0:::::0 ",\n'
               '\t\t\t" 0:::::0 000 0:::::0 ",\n'
               '\t\t\t" 0:::::0     0:::::0 ",\n'
               '\t\t\t" 0:::::0     0:::::0 ",\n'
               '\t\t\t" 0::::::0   0::::::0 ",\n'
               '\t\t\t" 0:::::::000:::::::0 ",\n'
               '\t\t\t"  00:::::::::::::00  ",\n'
               '\t\t\t"    00:::::::::00    ",\n'
               '\t\t\t"      000000000      ",NULL\n'
               '\t\t};\n'
               '\n'
               '\t\tswitch (time) {\n'
               '\t\tcase 0:\n'
               '\t\t\tcout << num9;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 1:\n'
               '\t\t\tcout <<'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1183,
          lineno=222,
          tokens=131,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers_view',
          body=' num8;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 2:\n'
               '\t\t\tcout<<num7;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 3:\n'
               '\t\t  cout<<num6;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 4:\n'
               '\t\t\tcout<<num5;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 5:\n'
               '\t\t\tcout<<num4;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 6:\n'
               '\t\t\tcout<<num3;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 7:\n'
               '\t\t\tcout<<num2;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 8:\n'
               '\t\t\tcout<<num1;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 9:\n'
               '\t\t\tcout<<num0;\n'
               '\t\t\tbreak;\n'
               '\t\tdefault:\n'
               '\t\t\t\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '\n'
               '\n'
               '\n'
               '}'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1184,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='578e28967b05d49842f3324021a8e9e8bcc4d4dda5d7b5e67f2c9189b9dc89e2',
          id=1185,
          lineno=1,
          tokens=19,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main1 numbers_view\n'
               '  Using: std\n'
               '  Usages: setw\n'),
 Fragment(document_cs='5906dbc090de4f2e5fd996954edf932a57aaee7b0125598a5b22c4a3cb391d4a',
          id=1186,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='5906dbc090de4f2e5fd996954edf932a57aaee7b0125598a5b22c4a3cb391d4a',
          id=1187,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_NONCOPYABLE_HPP',
          body='#define SFML_NONCOPYABLE_HPP'),
 Fragment(document_cs='5906dbc090de4f2e5fd996954edf932a57aaee7b0125598a5b22c4a3cb391d4a',
          id=1188,
          lineno=1,
          tokens=18,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n  Macros: SFML_NONCOPYABLE_HPP\n'),
 Fragment(document_cs='5988de90081381e4b539c730f4624af6c2aa3c8b7d31bc123113b96f6a4af5ef',
          id=1189,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_AUDIO_EXPORT_HPP',
          body='#define SFML_AUDIO_EXPORT_HPP'),
 Fragment(document_cs='5988de90081381e4b539c730f4624af6c2aa3c8b7d31bc123113b96f6a4af5ef',
          id=1190,
          lineno=39,
          tokens=9,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_AUDIO_API',
          body='#define SFML_AUDIO_API SFML_API_EXPORT'),
 Fragment(document_cs='5988de90081381e4b539c730f4624af6c2aa3c8b7d31bc123113b96f6a4af5ef',
          id=1191,
          lineno=43,
          tokens=9,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_AUDIO_API',
          body='#define SFML_AUDIO_API SFML_API_IMPORT'),
 Fragment(document_cs='5988de90081381e4b539c730f4624af6c2aa3c8b7d31bc123113b96f6a4af5ef',
          id=1192,
          lineno=1,
          tokens=13,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_AUDIO_API SFML_AUDIO_EXPORT_HPP\n'),
 Fragment(document_cs='59c86a7e5857fd1bbf47253bfc921eba1cb955bf931924cd973dc897dc7bffef',
          id=1193,
          lineno=1,
          tokens=20,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n'),
 Fragment(document_cs='59c86a7e5857fd1bbf47253bfc921eba1cb955bf931924cd973dc897dc7bffef',
          id=1194,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='5a8d46bcb9dde7c22a1397e181ee25ba8c622c06ba6b79980505e5874dcaccc0',
          id=1195,
          lineno=1,
          tokens=245,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Control Structures - Loop/Switch\n'
               '\n'
               '1. Program to calculate sum of numbers from m to n.\n'
               '    - Hint: Input two numbers m and n. Find sum of all numbers '
               'from m to n. For example m=3 and n=8 then sum will be 3 + 4 + '
               '5 + 6 + 7 + 8 = 33.\n'
               '2. Program to print Fibonacci series up to 100. \n'
               '    - Hint: Fibonacci Series is 1, 1, 2, 3, 5, 8, 13, 21, '
               '....\n'
               '3. Program to input a number and then calculate sum of its '
               'digits.\n'
               '    - Hint: let number = 562. Then you should print 5 + 6 + 2 '
               '= 13.\n'
               '4. Program to find whether given number is a prime number or '
               'not.\n'
               '5. Program to display sum of series 1 + 1/2 + 1/3 + ... + '
               '1/n.\n'
               '6. Program to display series and find sum of 1 + 3 + 5 + ... + '
               'n.\n'
               '7. Program to use switch statement. Display Monday to '
               'Sunday.\n'),
 Fragment(document_cs='5a8d46bcb9dde7c22a1397e181ee25ba8c622c06ba6b79980505e5874dcaccc0',
          id=1196,
          lineno=13,
          tokens=10,
          depth=10,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='8. Program to display arithmetic operator using switch case'),
 Fragment(document_cs='5a8d46bcb9dde7c22a1397e181ee25ba8c622c06ba6b79980505e5874dcaccc0',
          id=1197,
          lineno=1,
          tokens=12,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Control Structures - '
               'Loop/Switch\n'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1198,
          lineno=10,
          tokens=64,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Question',
          body='class Question {\n'
               'private :\n'
               '\tstring Question_Text;\n'
               '\tstring  Answer_1;\n'
               '\tstring Answer_2;\n'
               '\tstring Answer_3;\n'
               '\tstring Answer_4;\n'
               '\tint Correct_Answer;\n'
               '\tint Question_Score;\n'
               '\n'
               'public:\n'
               '\tvoid setValues(string, string, string, string, string, int, '
               'int);\n'
               '\tvoid askQuestion();\n'
               '\n'
               '}'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1199,
          lineno=12,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Question_Text',
          body='string Question_Text;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1200,
          lineno=13,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Answer_1',
          body='string  Answer_1;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1201,
          lineno=14,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Answer_2',
          body='string Answer_2;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1202,
          lineno=15,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Answer_3',
          body='string Answer_3;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1203,
          lineno=16,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Answer_4',
          body='string Answer_4;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1204,
          lineno=17,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Correct_Answer',
          body='int Correct_Answer;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1205,
          lineno=18,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Question_Score',
          body='int Question_Score;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1206,
          lineno=26,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='int main_menu_view() {\n'
               '\tsystem("color 3F");\n'
               '\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\tcout << '
               '"\\t\\t*****                                                                           '
               '*****" << endl;\n'
               '\tcout << "\\t\\t*****               H E L L O !  W E L C O M '
               'E  T O  T H E \'Q U I Z L E T\'      *****" << endl;\n'
               '\tcout << "\\t\\t*****                  = = = = = = = = = = = '
               '= = = = = = = = = = = = =          *****" << endl;\n'
               '\tcout << "\\t\\t*****                            = = = = = = '
               '= = = = = =                        *****" << endl;\n'
               '\tcout << "\\t\\t*****                                     B '
               'Y                                   *****" << endl;\n'
               '\tcout << "\\t\\t****'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1207,
          lineno=26,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='main_menu_view()'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1208,
          lineno=34,
          tokens=217,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='*                         R U S T A M    Z O K I R O '
               'V                      *****" << endl;\n'
               '\tcout << '
               '"\\t\\t*****                                                                           '
               '*****" << endl;\n'
               '\tcout << '
               '"\\t\\t*************************************************************************************" '
               '<< endl;\n'
               '\tcout << endl;\n'
               '\tcout << "Please press enter to start a game..." << endl;\n'
               '\tcin.get();\n'
               '\tsystem("cls");\n'
               '\tcout << "Please enter your information" << endl;\n'
               '\tstring Name;\n'
               '\tstring Age;\n'
               '\tcout << "What is your name? ";\n'
               '\tgetline(cin, Name);\n'
               '\tcout << "How old are you? ";\n'
               '\tcin >> Age;\n'
               '\tstring Respond;\n'
               '\tcout << "Are you ready to take the Quiz " << Name << " ? '
               'Yes/No. " << endl;\n'
               '\tcout << "Your choice: ";\n'
               '\tcin >> Respond;\n'
               '\tif (Respond == "yes" || Respond == "Yes") \n'
               '\t{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "OK, Good Like!!! " << endl;\n'
               '\t\tsystem("cls");\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "OK. Goodbye." << endl;\n'
               '\t\treturn 0;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1209,
          lineno=65,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1210,
          lineno=65,
          tokens=124,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\tmain_menu_view();\n'
               '\n'
               '\tQuestion q1;\n'
               '\tQuestion q2;\n'
               '\tQuestion q3;\n'
               '\tQuestion q4;\n'
               '\tQuestion q5;\n'
               '\tQuestion q6;\n'
               '\tQuestion q7;\n'
               '\tQuestion q8;\n'
               '\tQuestion q9;\n'
               '\tQuestion q10;\n'
               '\n'
               '\tq1.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\t\n'
               '\tq2.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello Wo'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1211,
          lineno=81,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='rld", 1, 10);\n'
               '\n'
               '\tq3.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\t\n'
               '\tq4.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\t\n'
               '\tq5.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\n'
               '\tq6.setValues("What is my name?", "Rustam", "Sardor", "B'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1212,
          lineno=89,
          tokens=237,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='ekhzod", "Hello World", 1, 10);\n'
               '\t\n'
               '\tq7.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\n'
               '\tq8.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\t\n'
               '\tq9.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\t\n'
               '\tq10.setValues("What is my name?", "Rustam", "Sardor", '
               '"Bekhzod", "Hello World", 1, 10);\n'
               '\n'
               '\n'
               '\tq1.askQuestion();\n'
               '\t\n'
               '\tq2.askQuestion();\n'
               '\tq3.askQuestion();\n'
               '\tq4.askQuestion();\n'
               '\tq5.askQuestion();\n'
               '\tq6.askQuestion();\n'
               '\tq7.askQuestion();\n'
               '\tq8.askQuestion();\n'
               '\tq9.askQuestion();\n'
               '\tq10.askQuestion();\n'
               '\n'
               '\tsystem("cls");\n'
               '\n'
               '\tcout << "Your Total Score is " << Total << " points out of '
               '100." << endl;\n'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1213,
          lineno=115,
          tokens=176,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\n'
               '\tif (Total >= 70)\n'
               '\t{\n'
               '\t\tcout << "Great you passed the Quiz!!!" << endl;\n'
               '\t\tcout << "C O N G R A T U L A T I O N S !!!" << endl;\n'
               '\n'
               '\t}        //end of the game\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "Sorry, you failed the Quiz!" << endl;\n'
               '\t\tcout << "Do you want to try again ? Yes/No " << endl;\n'
               '\t\tstring play_again;\n'
               '\t\tcout << "Your choice: ";\n'
               '\t\tcin >> play_again;\n'
               '\t\tif (play_again == "yes" || play_again == "Yes")\n'
               '\t\t{\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "OK. Goodbye." << endl;\n'
               '\t\t\treturn 0;\n'
               '\t\t}\n'
               '\n'
               '\t}                 \n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1214,
          lineno=145,
          tokens=85,
          depth=0,
          parent_id=None,
          category='method',
          summary=False,
          name='Question::setValues',
          body='void Question::setValues(string q, string a1, string a2, '
               'string a3, string a4, int ca, int pa) \n'
               '{\n'
               '\tQuestion_Text = q;\n'
               '\tAnswer_1 = a1;\n'
               '\tAnswer_2 = a2;\n'
               '\tAnswer_3 = a3;\n'
               '\tAnswer_4 = a4;\n'
               '\tCorrect_Answer = ca;\n'
               '\tQuestion_Score = pa;\n'
               '\n'
               '}'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1215,
          lineno=157,
          tokens=219,
          depth=0,
          parent_id=None,
          category='method',
          summary=False,
          name='Question::askQuestion',
          body='void Question::askQuestion() {\n'
               '\tcout << endl;\n'
               '\tcout << Question_Text << endl;\n'
               '\tcout << "1. " << Answer_1 << endl;\n'
               '\tcout << "2. " << Answer_2 << endl;\n'
               '\tcout << "3. " << Answer_3 << endl;\n'
               '\tcout << "4. " << Answer_4 << endl;\n'
               '\tcout << endl;\n'
               '\n'
               '\n'
               '\tcout << "Answer: ";\n'
               '\tcin >> Guess;\n'
               '\n'
               '\tif (Guess == Correct_Answer) \n'
               '\t{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Great! You are Correct." << endl;\n'
               '\t\tTotal += Question_Score;\n'
               '\t\tcout << "Score: " << Question_Score << " Out of " << '
               'Question_Score << " !" << endl;\n'
               '\t\t\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Oh, NO. You are Wrong." << endl;\n'
               '\t\tcout<<"Score: 0"<<" Out of "<<Question_Score<< " !" << '
               'endl;\n'
               '\t\tcout << "The correct answer is " << Correct_Answer << '
               'endl;\n'
               '\t\tcout<<endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1216,
          lineno=5,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1217,
          lineno=7,
          tokens=3,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Guess',
          body='int Guess;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1218,
          lineno=8,
          tokens=3,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Total',
          body='int Total;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1219,
          lineno=42,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Name',
          body='string Name;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1220,
          lineno=43,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Age',
          body='string Age;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1221,
          lineno=48,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Respond',
          body='string Respond;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1222,
          lineno=77,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='q10',
          body='Question q10;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1223,
          lineno=126,
          tokens=4,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='play_again',
          body='string play_again;'),
 Fragment(document_cs='5c35800f2307686a94ea1faa5e234f4b857524c0b1b1c64b1c3c29ffb6e7ff72',
          id=1224,
          lineno=1,
          tokens=76,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Question\n'
               '  Functions: main main_menu_view\n'
               '  Methods: Question::askQuestion Question::setValues\n'
               '  Fields: Answer_1 Answer_2 Answer_3 Answer_4 Correct_Answer '
               'Question_Score Question_Text\n'
               '  Variables: Age Guess Name Respond Total play_again q10\n'
               '  Using: std\n'
               '  Usages: askQuestion setValues\n'),
 Fragment(document_cs='5d0e6f922e9b47bb70f04ec41abd2bac996e3a334b75cab9e30cf2e64599dc87',
          id=1225,
          lineno=8,
          tokens=59,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='converting1',
          body='converting1(double hours, double minutes, double '
               'seconds)double converting1(double hours, double minutes, '
               'double seconds)\n'
               '{\t\t\t\t\t\t\t\t\t\t\t\t\t  // initializing the variables\n'
               '\treturn (hours * 60) + (minutes) + (seconds / 60); // '
               'returning the function "converting"\n'
               '}'),
 Fragment(document_cs='5d0e6f922e9b47bb70f04ec41abd2bac996e3a334b75cab9e30cf2e64599dc87',
          id=1226,
          lineno=13,
          tokens=149,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main3',
          body='main3()int main3()\n'
               '{\n'
               '\tdouble hours, minutes, seconds;\n'
               '\tcout << "Hours: ";\n'
               '\tcin >> hours;\t\t // Prompting user for data and\n'
               '\tcout << "Minutes: "; // reading 3 numbers for user\n'
               '\tcin >> minutes;\t\t //!\n'
               '\tcout << "Seconds: ";\n'
               '\tcin >> seconds;\n'
               '\tif (hours >= 0 && minutes >= 0 && seconds >= 0) // the '
               'program will be executed when all numbers are positive\n'
               '\t\tcout << "The time in minutes is " << converting1(hours, '
               'minutes, seconds) << endl;\n'
               '\telse // calling function to calculate the main function\n'
               '\t\tcout << "Invalid inputs!" << endl;\n'
               '\treturn 0; // indicates that the program will ended '
               'successfully\n'
               '}'),
 Fragment(document_cs='5d0e6f922e9b47bb70f04ec41abd2bac996e3a334b75cab9e30cf2e64599dc87',
          id=1227,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='5d0e6f922e9b47bb70f04ec41abd2bac996e3a334b75cab9e30cf2e64599dc87',
          id=1228,
          lineno=15,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='hours',
          body='double hours, minutes, seconds;'),
 Fragment(document_cs='5d0e6f922e9b47bb70f04ec41abd2bac996e3a334b75cab9e30cf2e64599dc87',
          id=1229,
          lineno=1,
          tokens=18,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: converting1 main3\n'
               '  Variables: hours\n'
               '  Using: std\n'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1230,
          lineno=13,
          tokens=53,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Person',
          body='class Person {\n'
               'protected:\n'
               '\tstring name;\n'
               '\tstring tell;\n'
               'public:\n'
               '\t// Constructor for Person class \n'
               '\tPerson(string name, string tell) {\n'
               '\t\tthis->name = name; this->tell = tell;\n'
               '\t}\n'
               '\n'
               '\tvirtual void Display() = 0;\n'
               '}'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1231,
          lineno=28,
          tokens=68,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='class Security : public Person { // Sub class of Person\n'
               'protected:\n'
               '\tstring login;\n'
               '\tstring password;\n'
               'public:\n'
               '\n'
               '\t// Constructor for Securoty class \n'
               '\tSecurity(string name, string tell, string login, string '
               'password) :Person(name, tell) {\n'
               '\t\tthis->login = login; this->password = password;\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1232,
          lineno=43,
          tokens=145,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='User',
          body='class User : public Security { // 1st Sub class of Securit\n'
               'public:\n'
               '\t// Storage\n'
               '\tint Potatoes_User = 0, Onion_User = 0, Carrot_User = 0;\n'
               '\tint Water_User = 0, Pepsi_User = 0, Nectar_User = 0;\n'
               '\tint Pizza_User = 0, Burger_User = 0, Fries_User = 0;\n'
               '\n'
               "\t// Constructor for User's sign up\n"
               '\tUser(string name, string tell, string login, string '
               'password) : Security(name, tell, login, password) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell = tell;\n'
               '\t\tthis->login = login;\n'
               '\t\tthis->password = passwor'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1233,
          lineno=55,
          tokens=145,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='User',
          body='d;\n'
               '\t}\n'
               '\t// get Name of User\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\t// get Tell of User\n'
               '\tstring getTell() {\n'
               '\t\treturn tell;\n'
               '\t}\n'
               '\t// get Login of User\n'
               '\tstring getLogin() {\n'
               '\t\treturn login;\n'
               '\t}\n'
               '\t// get Password of User\n'
               '\tstring getPassword() {\n'
               '\t\treturn password;\n'
               '\t}\n'
               '\t// Display Info\n'
               '\tvoid Display() {\n'
               '\t\tcout << "\\t\\tName    : " << name << endl;\n'
               '\t\tcout << "\\t\\tTell    : " << tell << endl;\n'
               '\t\tcout << "\\t\\tLogin   : " << login << endl;\n'
               '\t\tcout << "\\t\\tPassword: " << password << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1234,
          lineno=84,
          tokens=185,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Owner',
          body='class Owner : public Security { // 2nd Sub class of Security\n'
               'public:\n'
               "\t// Constructor for User's sign up\n"
               '\tOwner(string name, string tell, string login, string '
               'password) : Security(name, tell, login, password) { }\n'
               '\t// get Name of User\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\t// get Tell of User\n'
               '\tstring getTell() {\n'
               '\t\treturn tell;\n'
               '\t}\n'
               '\t// get Login of User\n'
               '\tstring getLogin() {\n'
               '\t\treturn login;\n'
               '\t}\n'
               '\t// get Password of User\n'
               '\tstring getPassword() {\n'
               '\t\treturn password;\n'
               '\t}\n'
               '\t// Display Info\n'
               '\tvoid Display() {\n'
               '\t\tcout << "Name:     " << name << endl;\n'
               '\t\tcout << "Tell:     " << tell << endl;\n'
               '\t\tcout << "Login:    " << login << endl;\n'
               '\t\tcout << "Password: " << password << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1235,
          lineno=15,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1236,
          lineno=16,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='tell',
          body='string tell;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1237,
          lineno=30,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='login',
          body='string login;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1238,
          lineno=31,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='password',
          body='string password;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1239,
          lineno=46,
          tokens=21,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Potatoes_User',
          body='int Potatoes_User = 0, Onion_User = 0, Carrot_User = 0;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1240,
          lineno=47,
          tokens=20,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Water_User',
          body='int Water_User = 0, Pepsi_User = 0, Nectar_User = 0;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1241,
          lineno=48,
          tokens=20,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Pizza_User',
          body='int Pizza_User = 0, Burger_User = 0, Fries_User = 0;'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1242,
          lineno=19,
          tokens=30,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Person',
          body='Person(string name, string tell) {\n'
               '\t\tthis->name = name; this->tell = tell;\n'
               '\t}Person(string name, string tell)'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1243,
          lineno=35,
          tokens=48,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Security',
          body='Security(string name, string tell, string login, string '
               'password)Security(string name, string tell, string login, '
               'string password) :Person(name, tell) {\n'
               '\t\tthis->login = login; this->password = password;\n'
               '\t}'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1244,
          lineno=51,
          tokens=67,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='User',
          body='User(string name, string tell, string login, string password) '
               ': Security(name, tell, login, password) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell = tell;\n'
               '\t\tthis->login = login;\n'
               '\t\tthis->password = password;\n'
               '\t}User(string name, string tell, string login, string '
               'password)'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1245,
          lineno=87,
          tokens=38,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Owner',
          body='Owner(string name, string tell, string login, string password) '
               ': Security(name, tell, login, password) { }Owner(string name, '
               'string tell, string login, string password)'),
 Fragment(document_cs='5f6fcea96a1e1e9ac9d7ef92ad7350516ef6d13cc4a01ea2de282dbeddfcc93d',
          id=1246,
          lineno=1,
          tokens=31,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Owner Person Security User\n'
               '  Functions: Owner Person Security User\n'
               '  Fields: Pizza_User Potatoes_User Water_User login name '
               'password tell\n'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1247,
          lineno=11,
          tokens=125,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='class Product_WaterBeverages\n'
               '{\n'
               'private:\n'
               '\n'
               '\t// "Owner" Only\n'
               '\t// this 3 integers for the quantity in the storage (ñêëàä)\n'
               '\t// the quantity in storage could be changed by "Owner"\n'
               '\tint storage_quantity_water_hydrolife_750ml;\n'
               '\tint storage_quantity_drink_aloe_500ml;\n'
               '\tint storage_quantity_nectar_zet_125ml;\n'
               '\n'
               '\t// prices of products\n'
               '\t// the prices only could be changed by "Owner"\n'
               '\tint price_water_hydrolife_750ml;\n'
               '\tint price_drink_aloe_500ml;\n'
               '\tint p'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1248,
          lineno=26,
          tokens=129,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='rice_nectar_zet_125ml;\n'
               '\n'
               '\t// "User" - Visible only for Users\n'
               '\t// it could be decremented when "User" buying this droduct\n'
               '\tint quantity_water_hydrolife_750ml;\n'
               '\tint quantity_drink_aloe_500ml;\n'
               '\tint quantity_nectar_zet_125ml;\n'
               '\n'
               'public:\n'
               '\n'
               '\t// default constructor\n'
               '\tProduct_WaterBeverages();\n'
               '\n'
               '\t// Parametirized constructor\n'
               '\t//Product_VegetablesFruits(int sp, int sc, int so, int pp, '
               'int pc, int po);\n'
               '\n'
               '\t// for only "Owner" setting the parameters for th'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1249,
          lineno=42,
          tokens=246,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='e storage\n'
               '\tvoid set_storage_quantity_water_hydrolife_750ml(int '
               'storage_quantity_water_hydrolife_750ml) {\n'
               '\t\tthis->storage_quantity_water_hydrolife_750ml = '
               'storage_quantity_water_hydrolife_750ml;\n'
               '\t}\n'
               '\tint get_storage_quantity_water_hydrolife_750ml() {\n'
               '\t\treturn storage_quantity_water_hydrolife_750ml;\n'
               '\t}\n'
               '\n'
               '\tvoid set_storage_quantity_drink_aloe_500ml(int '
               'storage_quantity_drink_aloe_500ml) {\n'
               '\t\tthis->storage_quantity_drink_aloe_500ml = '
               'storage_quantity_drink_aloe_500ml;\n'
               '\t}\n'
               '\tint get_storage_quantity_drink_aloe_500ml() {\n'
               '\t\treturn storage_quantity_drink_aloe_500ml;\n'
               '\t}\n'
               '\n'
               '\tvoid set_storage_quantity_nectar_zet_125ml(int '
               'storage_quantity_nectar_zet_125ml) {\n'
               '\t\tthis->storage_quantity_nectar_zet_125ml = '
               'storage_quantity_nectar_zet_125ml;\n'
               '\t}\n'
               '\tint get_storage_quantity_nectar_zet_125ml() {\n'
               '\t\treturn storage_quantity_nectar_zet_125ml;\n'
               '\t}\n'
               '\n'
               '\t// setting the prices of products\n'
               '\tvoid set_price_water'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1250,
          lineno=65,
          tokens=152,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='_hydrolife_750ml(int price_water_hydrolife_750ml) {\n'
               '\t\tthis->price_water_hydrolife_750ml = '
               'price_water_hydrolife_750ml;\n'
               '\t}\n'
               '\tint get_price_water_hydrolife_750ml() {\n'
               '\t\treturn price_water_hydrolife_750ml;\n'
               '\t}\n'
               '\tvoid set_price_drink_aloe_500ml(int price_drink_aloe_500ml) '
               '{\n'
               '\t\tthis->price_drink_aloe_500ml = price_drink_aloe_500ml;\n'
               '\t}\n'
               '\tint get_price_drink_aloe_500ml() {\n'
               '\t\treturn price_drink_aloe_500ml;\n'
               '\t}\n'
               '\tvoid set_price_nectar_zet_125ml(int price'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1251,
          lineno=77,
          tokens=146,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='_nectar_zet_125ml) {\n'
               '\t\tthis->price_nectar_zet_125ml = price_nectar_zet_125ml;\n'
               '\t}\n'
               '\tint get_price_nectar_zet_125ml() {\n'
               '\t\treturn price_nectar_zet_125ml;\n'
               '\t}\n'
               '\n'
               '\t// for "User"\n'
               "\t// if '1'  incrementing ... should be +1, if '2' "
               'decrementing ... should be -1\n'
               '\tvoid set_quantity_water_hydrolife_750ml_incrementing() {\n'
               '\t\tquantity_water_hydrolife_750ml++;\n'
               '\t\tstorage_quantity_water_hydrolife_750ml--;\n'
               '\t}\n'
               '\tvoid set_quantity_water_hydrolife_750ml_decrementi'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1252,
          lineno=90,
          tokens=141,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='ng() {\n'
               '\t\tquantity_water_hydrolife_750ml--;\n'
               '\t\tstorage_quantity_water_hydrolife_750ml++;\n'
               '\t}\n'
               '\tint get_quantity_water_hydrolife_750ml() {\n'
               '\t\treturn quantity_water_hydrolife_750ml;\n'
               '\t}\n'
               '\n'
               '\t//drink_aloe_500ml\n'
               '\tvoid set_quantity_drink_aloe_500ml_incrementing() {\n'
               '\t\tquantity_drink_aloe_500ml++;\n'
               '\t\tstorage_quantity_drink_aloe_500ml--;\n'
               '\t}\n'
               '\tvoid set_quantity_drink_aloe_500ml_decrementing() {\n'
               '\t\tquantity_drink_aloe_500ml--;\n'
               '\t\tstorage_quantity_drink_aloe_50'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1253,
          lineno=105,
          tokens=146,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_WaterBeverages',
          body='0ml++;\n'
               '\t}\n'
               '\tint get_quantity_drink_aloe_500ml() {\n'
               '\t\treturn quantity_drink_aloe_500ml;\n'
               '\t}\n'
               '\t//nectar_zet_125ml\n'
               '\tvoid set_quantity_nectar_zet_125ml_incrementing() {\n'
               '\t\tquantity_nectar_zet_125ml++;\n'
               '\t\tstorage_quantity_nectar_zet_125ml--;\n'
               '\t}\n'
               '\tvoid set_quantity_nectar_zet_125ml_decrementing() {\n'
               '\t\tquantity_nectar_zet_125ml--;\n'
               '\t\tstorage_quantity_nectar_zet_125ml ++ ;\n'
               '\t}\n'
               '\tint get_quantity_nectar_zet_125ml() {\n'
               '\t\treturn quantity_nectar_zet_125ml;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1254,
          lineno=18,
          tokens=12,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_water_hydrolife_750ml',
          body='int storage_quantity_water_hydrolife_750ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1255,
          lineno=19,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_drink_aloe_500ml',
          body='int storage_quantity_drink_aloe_500ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1256,
          lineno=20,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_nectar_zet_125ml',
          body='int storage_quantity_nectar_zet_125ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1257,
          lineno=24,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_water_hydrolife_750ml',
          body='int price_water_hydrolife_750ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1258,
          lineno=25,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_drink_aloe_500ml',
          body='int price_drink_aloe_500ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1259,
          lineno=26,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_nectar_zet_125ml',
          body='int price_nectar_zet_125ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1260,
          lineno=30,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_water_hydrolife_750ml',
          body='int quantity_water_hydrolife_750ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1261,
          lineno=31,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_drink_aloe_500ml',
          body='int quantity_drink_aloe_500ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1262,
          lineno=32,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_nectar_zet_125ml',
          body='int quantity_nectar_zet_125ml;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1263,
          lineno=37,
          tokens=7,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Product_WaterBeverages',
          body='Product_WaterBeverages()'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1264,
          lineno=126,
          tokens=162,
          depth=0,
          parent_id=None,
          category='method',
          summary=False,
          name='Product_WaterBeverages::Product_WaterBeverages',
          body='Product_WaterBeverages::Product_WaterBeverages() {\n'
               '\t// on storage we have ...\n'
               '\tstorage_quantity_water_hydrolife_750ml = 10;\n'
               '\tstorage_quantity_drink_aloe_500ml = 10;\n'
               '\tstorage_quantity_nectar_zet_125ml = 10;\n'
               '\n'
               '\t// pries by default\n'
               '\tprice_water_hydrolife_750ml = 2390;\n'
               '\tprice_drink_aloe_500ml = 8990;\n'
               '\tprice_nectar_zet_125ml = 8890;\n'
               '\n'
               '\t//quantity bought by user by default\n'
               '\tquantity_water_hydrolife_750ml = 0;\n'
               '\tquantity_drink_aloe_500ml = 0;\n'
               '\tquantity_nectar_zet_125ml = 0;\n'
               '}'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1265,
          lineno=9,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='5fdf76ae539020e55fb7399ea3cca1164fa3959c7ebfcbceda4a083390e44248',
          id=1266,
          lineno=1,
          tokens=135,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Product_WaterBeverages\n'
               '  Functions: Product_WaterBeverages\n'
               '  Methods: Product_WaterBeverages::Product_WaterBeverages\n'
               '  Fields: price_drink_aloe_500ml price_nectar_zet_125ml '
               'price_water_hydrolife_750ml quantity_drink_aloe_500ml '
               'quantity_nectar_zet_125ml quantity_water_hydrolife_750ml '
               'storage_quantity_drink_aloe_500ml '
               'storage_quantity_nectar_zet_125ml '
               'storage_quantity_water_hydrolife_750ml\n'
               '  Using: std\n'
               '  Usages: Product_WaterBeverages\n'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1267,
          lineno=38,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='TcpSocket',
          body='class TcpSocket'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1268,
          lineno=44,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1269,
          lineno=65,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalPort',
          body='getLocalPort() const'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1270,
          lineno=85,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='listen',
          body='listen(unsigned short port, const IpAddress& address = '
               'IpAddress::Any)'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1271,
          lineno=96,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='close',
          body='close()'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1272,
          lineno=111,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='accept',
          body='accept(TcpSocket& socket)'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1273,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TCPLISTENER_HPP',
          body='#define SFML_TCPLISTENER_HPP'),
 Fragment(document_cs='605b080a18f5a4bb1a9346a5c5ed7a92dd42fda58d1c83923f65f1fbfee7f70a',
          id=1274,
          lineno=1,
          tokens=37,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_NETWORK_API TcpSocket\n'
               '  Macros: SFML_TCPLISTENER_HPP\n'
               '  Functions: accept close getLocalPort listen\n'
               '  Usages: Any\n'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1275,
          lineno=44,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1276,
          lineno=65,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='IpAddress',
          body='IpAddress(const std::string& address)'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1277,
          lineno=79,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='IpAddress',
          body='IpAddress(const char* address)'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1278,
          lineno=94,
          tokens=22,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='IpAddress',
          body='IpAddress(Uint8 byte0, Uint8 byte1, Uint8 byte2, Uint8 byte3)'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1279,
          lineno=109,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='IpAddress',
          body='IpAddress(Uint32 address)'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1280,
          lineno=123,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toString',
          body='toString() const'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1281,
          lineno=139,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toInteger',
          body='toInteger() const'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1282,
          lineno=155,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalAddress',
          body='getLocalAddress()'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1283,
          lineno=179,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPublicAddress',
          body='getPublicAddress(Time timeout = Time::Zero)'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1284,
          lineno=199,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='resolve',
          body='resolve(const std::string& address)'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1285,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_IPADDRESS_HPP',
          body='#define SFML_IPADDRESS_HPP'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1286,
          lineno=184,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='None',
          body='static const IpAddress None;'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1287,
          lineno=185,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Any',
          body='static const IpAddress Any;'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1288,
          lineno=186,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='LocalHost',
          body='static const IpAddress LocalHost;'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1289,
          lineno=187,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Broadcast',
          body='static const IpAddress Broadcast;'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1290,
          lineno=204,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_address',
          body='Uint32 m_address;'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1291,
          lineno=205,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_valid',
          body='bool   m_valid;'),
 Fragment(document_cs='60b8a1bc712e1e1adc33209092980435dbcaa80691da7b85d6e81ccfc1908c29',
          id=1292,
          lineno=1,
          tokens=55,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_NETWORK_API\n'
               '  Macros: SFML_IPADDRESS_HPP\n'
               '  Functions: IpAddress getLocalAddress getPublicAddress '
               'resolve toInteger toString\n'
               '  Variables: Any Broadcast LocalHost None m_address m_valid\n'
               '  Usages: Zero istream ostream\n'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1293,
          lineno=41,
          tokens=2,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Utf',
          body='class Utf'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1294,
          lineno=67,
          tokens=19,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='decode',
          body='decode(In begin, In end, Uint32& output, Uint32 replacement = '
               '0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1295,
          lineno=83,
          tokens=16,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='encode',
          body='encode(Uint32 input, Out output, Uint8 replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1296,
          lineno=98,
          tokens=7,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='next',
          body='next(In begin, In end)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1297,
          lineno=114,
          tokens=7,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='count',
          body='count(In begin, In end)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1298,
          lineno=131,
          tokens=23,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromAnsi',
          body='fromAnsi(In begin, In end, Out output, const std::locale& '
               'locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1299,
          lineno=144,
          tokens=11,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromWide',
          body='fromWide(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1300,
          lineno=157,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromLatin1',
          body='fromLatin1(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1301,
          lineno=175,
          tokens=29,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toAnsi',
          body='toAnsi(In begin, In end, Out output, char replacement = 0, '
               'const std::locale& locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1302,
          lineno=189,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toWide',
          body='toWide(In begin, In end, Out output, wchar_t replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1303,
          lineno=203,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toLatin1',
          body='toLatin1(In begin, In end, Out output, char replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1304,
          lineno=221,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf8',
          body='toUtf8(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1305,
          lineno=234,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf16',
          body='toUtf16(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1306,
          lineno=247,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf32',
          body='toUtf32(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1307,
          lineno=274,
          tokens=19,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='decode',
          body='decode(In begin, In end, Uint32& output, Uint32 replacement = '
               '0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1308,
          lineno=290,
          tokens=16,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='encode',
          body='encode(Uint32 input, Out output, Uint16 replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1309,
          lineno=305,
          tokens=7,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='next',
          body='next(In begin, In end)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1310,
          lineno=321,
          tokens=7,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='count',
          body='count(In begin, In end)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1311,
          lineno=338,
          tokens=23,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromAnsi',
          body='fromAnsi(In begin, In end, Out output, const std::locale& '
               'locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1312,
          lineno=351,
          tokens=11,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromWide',
          body='fromWide(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1313,
          lineno=364,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromLatin1',
          body='fromLatin1(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1314,
          lineno=382,
          tokens=29,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toAnsi',
          body='toAnsi(In begin, In end, Out output, char replacement = 0, '
               'const std::locale& locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1315,
          lineno=396,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toWide',
          body='toWide(In begin, In end, Out output, wchar_t replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1316,
          lineno=410,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toLatin1',
          body='toLatin1(In begin, In end, Out output, char replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1317,
          lineno=423,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf8',
          body='toUtf8(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1318,
          lineno=441,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf16',
          body='toUtf16(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1319,
          lineno=454,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf32',
          body='toUtf32(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1320,
          lineno=482,
          tokens=19,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='decode',
          body='decode(In begin, In end, Uint32& output, Uint32 replacement = '
               '0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1321,
          lineno=499,
          tokens=16,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='encode',
          body='encode(Uint32 input, Out output, Uint32 replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1322,
          lineno=514,
          tokens=7,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='next',
          body='next(In begin, In end)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1323,
          lineno=529,
          tokens=7,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='count',
          body='count(In begin, In end)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1324,
          lineno=546,
          tokens=23,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromAnsi',
          body='fromAnsi(In begin, In end, Out output, const std::locale& '
               'locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1325,
          lineno=559,
          tokens=11,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromWide',
          body='fromWide(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1326,
          lineno=572,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='fromLatin1',
          body='fromLatin1(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1327,
          lineno=590,
          tokens=29,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toAnsi',
          body='toAnsi(In begin, In end, Out output, char replacement = 0, '
               'const std::locale& locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1328,
          lineno=604,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toWide',
          body='toWide(In begin, In end, Out output, wchar_t replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1329,
          lineno=618,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toLatin1',
          body='toLatin1(In begin, In end, Out output, char replacement = 0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1330,
          lineno=631,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf8',
          body='toUtf8(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1331,
          lineno=644,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf16',
          body='toUtf16(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1332,
          lineno=662,
          tokens=12,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='toUtf32',
          body='toUtf32(In begin, In end, Out output)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1333,
          lineno=678,
          tokens=17,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='decodeAnsi',
          body='decodeAnsi(In input, const std::locale& locale = '
               'std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1334,
          lineno=693,
          tokens=5,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='decodeWide',
          body='decodeWide(In input)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1335,
          lineno=711,
          tokens=29,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='encodeAnsi',
          body='encodeAnsi(Uint32 codepoint, Out output, char replacement = 0, '
               'const std::locale& locale = std::locale())'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1336,
          lineno=728,
          tokens=18,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='encodeWide',
          body='encodeWide(Uint32 codepoint, Out output, wchar_t replacement = '
               '0)'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1337,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_UTF_HPP',
          body='#define SFML_UTF_HPP'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1338,
          lineno=734,
          tokens=9,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Utf8',
          body='typedef Utf<8>  Utf8;'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1339,
          lineno=735,
          tokens=8,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Utf16',
          body='typedef Utf<16> Utf16;'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1340,
          lineno=736,
          tokens=8,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Utf32',
          body='typedef Utf<32> Utf32;'),
 Fragment(document_cs='61bee3705f6a4285146df13c6300328b202d0a46047f8bbb814c5b9e35e1110a',
          id=1341,
          lineno=1,
          tokens=74,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Utf\n'
               '  Typedefs: Utf16 Utf32 Utf8\n'
               '  Macros: SFML_UTF_HPP\n'
               '  Functions: count decode decodeAnsi decodeWide encode '
               'encodeAnsi encodeWide fromAnsi fromLatin1 fromWide next toAnsi '
               'toLatin1 toUtf16 toUtf32 toUtf8 toWide\n'
               '  Usages: locale\n'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1342,
          lineno=40,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1343,
          lineno=62,
          tokens=21,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Color',
          body='Color(Uint8 red, Uint8 green, Uint8 blue, Uint8 alpha = 255)'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1344,
          lineno=70,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Color',
          body='Color(Uint32 color)'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1345,
          lineno=78,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='toInteger',
          body='toInteger() const'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1346,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_COLOR_HPP',
          body='#define SFML_COLOR_HPP'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1347,
          lineno=83,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Black',
          body='static const Color Black;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1348,
          lineno=84,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='White',
          body='static const Color White;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1349,
          lineno=85,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Red',
          body='static const Color Red;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1350,
          lineno=86,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Green',
          body='static const Color Green;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1351,
          lineno=87,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Blue',
          body='static const Color Blue;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1352,
          lineno=88,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Yellow',
          body='static const Color Yellow;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1353,
          lineno=89,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Magenta',
          body='static const Color Magenta;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1354,
          lineno=90,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Cyan',
          body='static const Color Cyan;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1355,
          lineno=91,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Transparent',
          body='static const Color Transparent;'),
 Fragment(document_cs='61e26a68cf133c65172ca988bf7646c9a436dfdd6447de1c6f3d82729af4a5bd',
          id=1356,
          lineno=1,
          tokens=38,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_COLOR_HPP\n'
               '  Functions: Color toInteger\n'
               '  Variables: Black Blue Cyan Green Magenta Red Transparent '
               'White Yellow\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1357,
          lineno=32,
          tokens=21,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='User_1',
          body='User_1(Name_Memory, TellNum_Memory, Login_Memory, '
               'Parol_Memory)'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1358,
          lineno=52,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='F_General_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1359,
          lineno=53,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='F_Sign_in()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1360,
          lineno=54,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='F_Developers()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1361,
          lineno=55,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='F_Logo()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1362,
          lineno=56,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo_Owner',
          body='F_Logo_Owner()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1363,
          lineno=59,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='F_User_Main_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1364,
          lineno=60,
          tokens=122,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Table_For_Increasing_And_Decreasing',
          body='F_Table_For_Increasing_And_Decreasing()void '
               'F_Table_For_Increasing_And_Decreasing() {\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\tcout << "     (+)   \'Press 1\'                        '
               '\\n";\n'
               '\tcout << "     (-)   \'Press 2\'                        '
               '\\n";\n'
               '\tcout << "     (0)   \'Back\'                           '
               '\\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\tcout << "     Add to Cart:  \\n";\n'
               '\t//cin >> VariableForIncreasingAndDecreasing;\n'
               '}F_Table_For_Increasing_And_Decreasing()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1365,
          lineno=61,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='F_Class_Of_Products1_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1366,
          lineno=62,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='F_Class_Of_Products2_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1367,
          lineno=63,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='F_Class_Of_Products3_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1368,
          lineno=64,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='F_Cart_Check()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1369,
          lineno=67,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='F_Owner_Main_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1370,
          lineno=68,
          tokens=11,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='F_Modify_Info_Products(int take_product_location)'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1371,
          lineno=69,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='F_Owner_Products_Stotage()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1372,
          lineno=70,
          tokens=180,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Customers_List',
          body='F_Owner_Customers_List()void F_Owner_Customers_List() {\n'
               '\tcout << endl;\n'
               '\n'
               '\tifstream in;\n'
               '\tint Num = 1;\n'
               '\tstring Info;\n'
               '\n'
               '\tin.open("User_Info.txt");\n'
               '\twhile (in) {\n'
               '\t\tcout << "\\t " << Num << "." << endl;\n'
               '\t\tcout << "\\t-------------------------" << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t User Name: " << Info << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t Phone    : " << Info << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t Login    : " << Info << endl;\n'
               '\t\tgetline(in, Info);\n'
               '\t\tcout << "\\t Password : " << Info << endl;\n'
               '\t\tNum++;\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tcout << "\\t-------------------------" << endl;\n'
               '\tin.close();\n'
               '}F_Owner_Customers_List()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1373,
          lineno=74,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1374,
          lineno=74,
          tokens=27,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\n'
               '\t//Loading\n'
               '\tF_Loading();\n'
               '\tF_General_Menu();\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1375,
          lineno=85,
          tokens=12,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='void F_General_Menu() {\n\t// Main Menu \n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1376,
          lineno=85,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='F_General_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1377,
          lineno=87,
          tokens=239,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << "        A L I B A Z A '
               'R                                             A U T H E N T I '
               'C A T I O N     \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Authentication \\n" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   1. Sign in" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   2. Sign up" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   3. About" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   0. Exit" << endl << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Your Choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Sign in\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 50: {  // Register\n'
               '\t\t\t\t\t// Set details with validation \n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1378,
          lineno=109,
          tokens=242,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\tfor (int i = 0; i != 1;) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << "        A L I B A Z A '
               'R                                             R E G I S T R A '
               'T I O N         \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       Example of Registration: " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       ________________________" '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        User Name : Abdullokh " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Telephone : 974006102 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Login     : Alimov_8 " << '
               'endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Password  : Alimov808 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       ________________________" '
               '<< endl << endl;\n'
               '\t\t\t\tUser_Validtaion.SetUser();\n'
               '\n'
               '\t\t\t\t////////////\n'
               '\n'
               '\t\t\t\tValidationParol(User_Validtaion);\n'
               '\t\t\t\tValidationName(User_Validtaion);\n'
               '\t\t\t\tValidationTellNum(User_Validtaion);\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1379,
          lineno=128,
          tokens=176,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\n'
               '\t\t\t\tif (Validation == 3) {\n'
               '\t\t\t\t\t////// File Handling For User Info\n'
               '\t\t\t\t\tofstream User_Info;\n'
               '\t\t\t\t\tUser_Info.open("User_Info.txt", ios::app);  // '
               'Opening File\n'
               '\n'
               '\t\t\t\t\t// Setting User Info in Memory\n'
               '\t\t\t\t\tUser_Info << Name_Memory << endl;\n'
               '\t\t\t\t\tUser_Info << TellNum_Memory << endl;\n'
               '\t\t\t\t\tUser_Info << Login_Memory << endl;\n'
               '\t\t\t\t\tUser_Info << Parol_Memory << endl;\n'
               '\t\t\t\t\tUser_Info.close();\n'
               '\t\t\t\t\t///////// End of the File Handling\n'
               '\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t '
               '__________________________________" << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t      Correct Validation" << '
               'endl;\n'
               '\t\t\t\t\ti++;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\tPlease press any key to '
               'continue..." << endl << endl;\n'
               '\t\t\t\t\tsystem("Pause");\n'
               '\t\t\t\t\tValidation = 0;\n'
               '\t\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1380,
          lineno=149,
          tokens=130,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\t\telse {\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t '
               '__________________________________" << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t\\t\\t       Invalid Validation" << '
               'endl;\n'
               '\t\t\t\t\tcout << "\\t\\t   Please press \'1\' to rewrite || '
               'Press any key to go back to menu" << endl << endl;\n'
               '\t\t\t\t\tValidation = 0;\n'
               '\t\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\t\tcase 49: {\n'
               '\t\t\t\t\t\t// Rewriting i=0; \n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\t\t   break;\n'
               '\n'
               '\t\t\t\t\tdefault: F_General_Menu(); \n'
               '\t\t\t\t\t\t// Go back \n'
               '\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t} // else\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\t'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1381,
          lineno=169,
          tokens=145,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='case 51: {  // Developers\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Developers();\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 48: {  // Developers\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\n\\n\\n\\n\\t\\t\\t\\tThank you for your '
               'attention!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\t\\t\\t\\t";\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: {  cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1382,
          lineno=194,
          tokens=193,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='void F_Developers() {\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                           A '
               'B O U T        \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\tcout << "\\n\\t\\t\\t\\t\'AliBazar\' Online Shopping '
               'Aplication " << endl << endl;\n'
               '\tcout << "\\t\\t\\t\\t   Team Name: EightSoft " << endl;\n'
               '\tcout << "\\t\\t\\t\\tTeam Section: OOP2 - '
               '004                         " << endl;\n'
               '\tcout << "\\t\\t\\t\\tTeam Members: ";\n'
               '\tcout << "Alimov Abdullokh [U1910060]\\n\\t\\t\\t\\t\\t      '
               'Zokirov Rustam   [U1910049] " << endl;\n'
               '\n'
               '\tcout << "\\n\\n\\t\\t\\t\\tPress any key to go back to Menu '
               '\\n\\n" << endl;\n'
               '\tsystem("pause");\n'
               '}F_Developers()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1383,
          lineno=209,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='void F_Sign_in() {\n'
               '\t// Sign in Function\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << "        A L I B A Z A '
               'R                                                       S I G '
               'N  I N          \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   Sign in\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t1. Sign in as Owner" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t2. Sign in as User" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t0. Back" << endl << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Your Choice: ";\n'
               '\n'
               '\t\tswitch '),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1384,
          lineno=209,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='F_Sign_in()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1385,
          lineno=222,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='(_getch()) {\n'
               '\t\tcase 49: { // Sign in as Owner\n'
               '\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                          O W '
               'N E R          \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t        Owner '
               'Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tLogin    : "; cin >> '
               'Login_Sign;\n'
               '\t\t\t//cout << "\\t\\t\\t\\t\\tPassword : "; cin >> '
               'Parol_Sign;\n'
               '\t\t\tF_Password_Val();\n'
               '\t\t\tParol_Sign = Password_Val;\n'
               '\n'
               '\t\t\tif (Login_Sign == Owner_Login_Sign && Parol_Sign == '
               'Owner_Parol_Sign) {\n'
               "\t\t\t\t/////// Owner's Menu\n"
               '\t\t\t\tF_Owner_Main_Menu();\n'
               '\t\t\t\t//////\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1386,
          lineno=241,
          tokens=218,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body="\t\t\telse {  // If Login hasn't Registered\n"
               '\t\t\t\tcout << "\\n\\n\\t\\t\\t        Your Login and '
               'Password are Invalid." << endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t   Please press any key to go back '
               'to \'Sign in\' Menu.\\n\\n" << endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t\tF_Sign_in();\n'
               '\t\t\t}\n'
               '\t\t}   \n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 50: {  // Sign in as User\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                     C U S T '
               'O M E R         \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Customer '
               'Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\tLogin    : "; cin >> '
               'Login_Sign;\n'
               '\t\t\tF_Password_Val();\n'
               '\t\t\tParol_Sign = Password_Val;\n'
               '\t\t\t//////   File Handling For User Info\n'
               '\t\t\tifstream Search;\n'
               '\t\t\tSearch.open("User_Info.txt");\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1387,
          lineno=262,
          tokens=41,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='\n'
               '\t\t\twhile (Search) {\n'
               '\t\t\t\tSearch >> Name_Memory;\n'
               '\t\t\t\tSearch >> TellNum_Memory;\n'
               '\t\t\t\tSearch >> Login_Memory;\n'
               '\t\t\t\tSearch >> Parol_Memory;\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1388,
          lineno=268,
          tokens=231,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='\t\t\t\tif (Login_Sign == Login_Memory && Parol_Sign == '
               'Parol_Memory) {\n'
               '\t\t\t\t\tUser User_1(Name_Memory, TellNum_Memory, '
               'Login_Memory, Parol_Memory);\n'
               '\t\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tSearch.close();\n'
               '\t\t\t///////// End of the File Handling\n'
               '\n'
               '\t\t\tcout << "\\n\\n\\t\\t\\t        Your Login and Password '
               'are Invalid." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t   Please press any key to go back to '
               '\'Sign in\' Menu.\\n\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tF_Sign_in();\n'
               '\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tcase 48: {  // Back\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_General_Menu();\n'
               '\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t}\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1389,
          lineno=269,
          tokens=21,
          depth=13,
          parent_id=None,
          category='function',
          summary=False,
          name='User_1',
          body='User_1(Name_Memory, TellNum_Memory, Login_Memory, '
               'Parol_Memory)'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1390,
          lineno=303,
          tokens=52,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='void F_Logo() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                    8. '
               'Account Info         \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1391,
          lineno=303,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='F_Logo()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1392,
          lineno=311,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='void F_User_Main_Menu() {\n'
               '\t// Entering as a Guest\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\n'
               '\t\tF_Logo();\n'
               '\n'
               '\t\tcout << "       Categories\\n\\n";\n'
               '\t\tcout << "       1. Vegetables & Fruits\\n\\n";\n'
               '\t\tcout << "       2. Water & Beverages\\n\\n";\n'
               '\t\tcout << "       3. Fast Food Products\\n\\n";\n'
               '\t\tcout << "       4. Cart and Overall Sums\\n\\n";\n'
               '\t\tcout << "       0. Go Back\\n\\n";\n'
               '\t\tcout << "       Your choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\tF_Class_Of_Products1_Menu();\n'
               '\t\t} brea'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1393,
          lineno=311,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='F_User_Main_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1394,
          lineno=328,
          tokens=119,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='k;\n'
               '\n'
               '\t\tcase 50: {\n'
               '\t\t\tF_Class_Of_Products2_Menu();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 51: {\n'
               '\t\t\tF_Class_Of_Products3_Menu();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 52:{\n'
               '\t\t\tF_Cart_Check();\n'
               '\t\t}break;\n'
               '\n'
               '\t\tcase 48: {  // Back to Menu\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1395,
          lineno=351,
          tokens=218,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Information :" << endl '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login     : " << Login_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password  : " << Parol_Memory '
               '<< endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t} // switch \n'
               '\t} // for loop \n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1396,
          lineno=383,
          tokens=210,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='void F_Class_Of_Products1_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '    \tF_Logo();\n'
               '\n'
               '\t\tcout << "    Products List  \\t\\t    Category\\t\\t       '
               'Price\\t\\t In Stock\\n";\n'
               '\t\tProduct1_1.Display();\n'
               '\t\tProduct1_2.Display();\n'
               '\t\tProduct1_3.Display();\n'
               '\t\tposition1 = 1;\n'
               '\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\t\t// for Product1_1\n'
               '\t\tcase 49: {\n'
               '\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct1_1.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1397,
          lineno=383,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='F_Class_Of_Products1_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1398,
          lineno=408,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\t\t\tif (Product1_1.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tUser_1.Product1_1_User++;\n'
               '\t\t\t\t\t\tProduct1_1.quantity--;\n'
               '\t\t\t\t\t\tcout << " Quantity of "<< Product1_1.getName() << '
               '" - " << User_1.Product1_1_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1399,
          lineno=421,
          tokens=186,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\t\t\tif (User_1.Product1_1_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tUser_1.Product1_1_User--;\n'
               '\t\t\t\t\t\tProduct1_1.quantity++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product1_1.getName() << '
               '" - "  << User_1.Product1_1_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t   // for Product1_2\n'
               '\t\tcase 50: {\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1400,
          lineno=439,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct1_2.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Product1_2.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tUser_1.Product1_2_User++;\n'
               '\t\t\t\t\t\tProduct1_2.quantity--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product1_2.getName() << '
               '" - " << User_1.Product1_2_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1401,
          lineno=461,
          tokens=185,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\t\t\tif (User_1.Product1_2_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tUser_1.Product1_2_User--;\n'
               '\t\t\t\t\t\tProduct1_2.quantity++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product1_2.getName() << '
               '" - " << User_1.Product1_2_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t   // for Product1_3\n'
               '\t\tcase 51: {\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1402,
          lineno=479,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct1_3.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Product1_3.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tUser_1.Product1_3_User++;\n'
               '\t\t\t\t\t\tProduct1_3.quantity--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product1_3.getName() << '
               '" - " << User_1.Product1_3_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1403,
          lineno=501,
          tokens=98,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\t\t\tif (User_1.Product1_3_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tUser_1.Product1_3_User--;\n'
               '\t\t\t\t\t\tProduct1_3.quantity++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product1_3.getName() << '
               '" - " << User_1.Product1_3_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1404,
          lineno=508,
          tokens=168,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t  // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\t//F_User_Main_Menu(); \n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"__________________________________________________'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1405,
          lineno=526,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products1_Menu',
          body='__________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Information :" << endl '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\t} // loop ends\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1406,
          lineno=544,
          tokens=207,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='void F_Class_Of_Products2_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\n'
               '\t\tcout << "    Products List  \\t\\t    Category\\t\\t       '
               'Price\\t\\t In Stock\\n";\n'
               '\t\tProduct2_1.Display();\n'
               '\t\tProduct2_2.Display();\n'
               '\t\tProduct2_3.Display();\n'
               '\t\tposition1 = 1;\n'
               '\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Product2_1\n'
               '\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct2_1.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1407,
          lineno=544,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='F_Class_Of_Products2_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1408,
          lineno=566,
          tokens=136,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\t\t\tif (Product2_1.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tProduct2_1.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Product2_1_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product2_1.getName() << '
               '" - " << User_1.Product2_1_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1409,
          lineno=579,
          tokens=190,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\t\t\tif (User_1.Product2_1_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tProduct2_1.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Product2_1_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product2_1.getName() << '
               '" - "  << User_1.Product2_1_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for Product2_1\n"
               "\t\t\t}// 'for' loop for Product2_1\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 50: { // Product2_2\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1410,
          lineno=596,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct2_2.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Product2_2.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tProduct2_2.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Product2_2_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product2_2.getName() << '
               '" - " << User_1.Product2_2_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1411,
          lineno=617,
          tokens=189,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\t\t\tif (User_1.Product2_2_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tProduct2_2.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Product2_2_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product2_2.getName() << '
               '" - " << User_1.Product2_2_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for Product2_1\n"
               "\t\t\t}// 'for' loop for Product2_1\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 51: { // Product2_3\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1412,
          lineno=634,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct2_3.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Product2_3.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tProduct2_3.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Product2_3_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product2_3.getName() << '
               '" - " << User_1.Product2_3_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1413,
          lineno=655,
          tokens=98,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\t\t\tif (User_1.Product2_3_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tProduct2_3.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Product2_3_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product2_3.getName() << '
               '" - " << User_1.Product2_3_User << endl;\n'
               '\t\t\t\t\t\tcout << "    Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1414,
          lineno=662,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for Product2_1\n"
               "\t\t\t}// 'for' loop for Product2_1\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"_________________________________________________'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1415,
          lineno=679,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products2_Menu',
          body='___________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Information :" << endl '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\n'
               '\t} // loop ends\n'
               '\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1416,
          lineno=699,
          tokens=208,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='void F_Class_Of_Products3_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();      \n'
               '\t\tcout << "    Products List  \\t\\t    Category\\t\\t       '
               'Price\\t\\t In Stock\\n";\n'
               '\t\tProduct3_1.Display();\n'
               '\t\tProduct3_2.Display();\n'
               '\t\tProduct3_3.Display();\n'
               '\t\tposition1 = 1;\n'
               '\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: { // Product3_1\n'
               '\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct3_1.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1417,
          lineno=699,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='F_Class_Of_Products3_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1418,
          lineno=721,
          tokens=136,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\t\t\tif (Product3_1.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tProduct3_1.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Product3_1_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product3_1.getName() << '
               '" - " << User_1.Product3_1_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1419,
          lineno=734,
          tokens=185,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\t\t\tif (User_1.Product3_1_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tProduct3_1.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Product3_1_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product3_1.getName() << '
               '" - " << User_1.Product3_1_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 50: { // Product3_2\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1420,
          lineno=751,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct3_2.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Product3_2.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tProduct3_2.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Product3_2_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product3_2.getName() << '
               '" - " << User_1.Product3_2_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1421,
          lineno=772,
          tokens=185,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\t\t\tif (User_1.Product3_2_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tProduct3_2.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Product3_2_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product3_2.getName() << '
               '" - " << User_1.Product3_2_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 51: { // Product3_3\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1422,
          lineno=789,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "    Products List  \\t\\t    '
               'Category\\t\\t       Price\\t\\t In Stock\\n";\n'
               '\t\t\t\tProduct3_3.Display(); position1 = 1;\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tif (Product3_3.getQuantity() > 0) { // checking for '
               'storage and user needs\n'
               '\t\t\t\t\t\tProduct3_3.quantity--;\n'
               '\t\t\t\t\t\tUser_1.Product3_3_User++;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product3_3.getName() << '
               '" - " << User_1.Product3_3_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1423,
          lineno=810,
          tokens=98,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\t\t\tif (User_1.Product3_3_User > 0) { // Check for (-1 '
               'kg/pc)\n'
               '\t\t\t\t\t\tProduct3_3.quantity++;\n'
               '\t\t\t\t\t\tUser_1.Product3_3_User--;\n'
               '\t\t\t\t\t\tcout << " Quantity of " << Product3_3.getName() << '
               '" - " << User_1.Product3_3_User << endl;\n'
               '\t\t\t\t\t\tcout << "     Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1424,
          lineno=817,
          tokens=165,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='\t\t\t\t\telse { cout << " 0 (kg/pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"__________________________________________________'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1425,
          lineno=834,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Class_Of_Products3_Menu',
          body='__________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Information :" << endl '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\n'
               '\t} // loop ends\n'
               '\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1426,
          lineno=854,
          tokens=161,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='void F_Cart_Check() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "                                              C A R '
               'T \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t// Check\n'
               '\tfor (int i = 1; i <= 1; i++) {\n'
               '\t\tif (User_1.Product1_1_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product1_1.getName() << " --- " << User_1.Product1_1_User << " '
               '--- Price: " << User_1.Product1_1_User * '
               'Product1_1.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product1_1_User * '
               'Product1_1.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1427,
          lineno=854,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='F_Cart_Check()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1428,
          lineno=866,
          tokens=199,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\n'
               '\t\tif (User_1.Product1_2_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product1_2.getName() <<" --- " << User_1.Product1_2_User << " '
               '--- Price: " << User_1.Product1_2_User * '
               'Product1_2.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product1_2_User * '
               'Product1_2.getPrice();\n'
               '\t\t}\n'
               '\n'
               '\t\tif (User_1.Product1_3_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product1_3.getName() <<" --- " << User_1.Product1_3_User << " '
               '--- Price: " << User_1.Product1_3_User * '
               'Product1_3.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product1_3_User * '
               'Product1_3.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1429,
          lineno=878,
          tokens=199,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\n'
               '\t\tif (User_1.Product2_1_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product2_1.getName() <<" --- " << User_1.Product2_1_User << " '
               '--- Price: " << User_1.Product2_1_User * '
               'Product2_1.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product2_1_User * '
               'Product2_1.getPrice();\n'
               '\t\t}\n'
               '\t\tif (User_1.Product2_2_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product2_2.getName() <<" --- " << User_1.Product2_2_User << " '
               '--- Price: " << User_1.Product2_2_User * '
               'Product2_2.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product2_2_User * '
               'Product2_2.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1430,
          lineno=889,
          tokens=200,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (User_1.Product2_3_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product2_3.getName() << " --- " << User_1.Product2_3_User << " '
               '--- Price: " << User_1.Product2_3_User * '
               'Product2_3.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product2_3_User * '
               'Product2_3.getPrice();\n'
               '\t\t}\n'
               '\t\tif (User_1.Product3_1_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product3_1.getName() << " --- " << User_1.Product3_1_User << " '
               '--- Price: " << User_1.Product3_1_User * '
               'Product3_1.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product3_1_User * '
               'Product3_1.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1431,
          lineno=899,
          tokens=199,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (User_1.Product3_2_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product3_2.getName() << " --- " << User_1.Product3_2_User << " '
               '--- Price: " << User_1.Product3_2_User * '
               'Product3_2.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product3_2_User * '
               'Product3_2.getPrice();\n'
               '\t\t}\n'
               '\t\tif (User_1.Product3_3_User > 0) {\n'
               '\t\t\tcout << "\\n\\t\\t\\t  " << i << ". " << '
               'Product3_3.getName()<< " --- " << User_1.Product3_3_User << " '
               '--- Price: " << User_1.Product3_3_User * '
               'Product3_3.getPrice();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += User_1.Product3_3_User * '
               'Product3_3.getPrice();\n'
               '\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1432,
          lineno=909,
          tokens=81,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\n'
               '\t\tif (i == 1) { // if nothing go to Menu\n'
               '\t\t\tcout << "\\n\\t You do not have any product in '
               '\'CART\'.\\n";\n'
               '\t\t\tcout << "\\tPress any key to go to \'Products '
               'Menu\'\\n\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tOverall_Sum = 0;\n'
               '\t\t\tF_User_Main_Menu();\n'
               '\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1433,
          lineno=917,
          tokens=184,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (i > 1) { // Menu for buying or back \n'
               '\t\t\tcout << "\\n\\n\\t\\t\\t  Overall Price: " << '
               'Overall_Sum << " Sums" << endl;\n'
               '\t\t\tcout << "\\n\\t   1. Buy now" << endl;\n'
               '\t\t\tcout << "\\t   0. Products Menu" << endl;\n'
               '\n'
               '\t\t\tswitch (_getch()) {\n'
               '\t\t\tcase 49: { //buy\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t////\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << "                                              '
               'C A R T \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\n'
               '\t\t\t\t////\n'
               '\t\t\t\tcout << " Money will be taken from your \'Telephone '
               'Number\': " << endl;\n'
               '\t\t\t\tcout << " 1. OK" << endl;\n'
               '\t\t\t\tcout << " Press any key to go back..." << endl;\n'
               '\t\t\t\tswitch (_getch()) {\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1434,
          lineno=935,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\t\t\tcase 49: {\n'
               '\t\t\t\t\tcout << "\\n  Transaction Successful!\\n  '
               'Congratulations ! :)" << endl;\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\tOverall_Sum = 0;\n'
               '\t\t\t\t\t// Storage\n'
               '\t\t\t\t\tUser_1.Product1_1_User = 0; User_1.Product1_3_User = '
               '0; User_1.Product1_2_User = 0;\n'
               '\t\t\t\t\tUser_1.Product2_1_User = 0; User_1.Product2_2_User = '
               '0; User_1.Product2_3_User = 0;\n'
               '\t\t\t\t\tUser_1.Product3_1_User = 0; User_1.Product3_2_User = '
               '0'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1435,
          lineno=942,
          tokens=127,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='; User_1.Product3_3_User = 0;\n'
               '\t\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t\t}\n'
               '\t\t\t\t\t   break;\n'
               '\n'
               '\t\t\t\tdefault:  F_Cart_Check();\n'
               '\n'
               '\t\t\t\t} // switch of case 49\n'
               '\n'
               '\t\t\t\t////\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'
               '\t\t\t\t   break;\n'
               '\t\t\tcase 48: { // Back\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tOverall_Sum = 0;\n'
               '\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t}\n'
               '\t\t\t\t   break;\n'
               '\t\t\tdefault: F_Cart_Check();\n'
               '\t\t\t} // switch ends\n'
               '\n'
               '\t\t} //if ends\n'
               '\n'
               '\t}// loop end\n'
               '\t//system("pause");\n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1436,
          lineno=974,
          tokens=65,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo_Owner',
          body='void F_Logo_Owner() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                  O W N E R  '
               'M E N U         \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '}F_Logo_Owner()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1437,
          lineno=982,
          tokens=188,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='void F_Owner_Main_Menu() {\n'
               '\tsystem("cls");\n'
               '\tcout << endl << endl;\n'
               '\n'
               '\t// Entering as a Owner of shop\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo_Owner();\n'
               '\t\tcout << "       Main Menu\\n\\n";\n'
               '\t\tcout << "       1. Products in stock \\n\\n";\n'
               '\t\tcout << "       2. Customers list \\n\\n";\n'
               '\t\tcout << "       0. Back\\n\\n";\n'
               '\t\tcout << "       Your choice: ";\n'
               '\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\tF_Owner_Products_Stotage();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 50: {\n'
               '\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                           C U S T O M E R S  '
               'L I'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1438,
          lineno=982,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='F_Owner_Main_Menu()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1439,
          lineno=1005,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body=' S T        \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\n\\t\\t\\t   Customers list :" << endl << '
               'endl;\n'
               '\n'
               '\t\t\tF_Owner_Customers_List();\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\n'
               '\t\tcase 48: {  // Back to Menu\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tk = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t} // switch \n'
               '\t} // for loop \n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1440,
          lineno=1032,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='void F_Owner_Products_Stotage() {\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tF_Logo_Owner();\n'
               '\n'
               '\t\tcout << "    Products List  \\t\\t    Category\\t\\t       '
               'Price\\t\\t In Stock\\n";\n'
               '\t\tProduct1_1.Display();\n'
               '\t\tProduct1_2.Display();\n'
               '\t\tProduct1_3.Display();\n'
               '\t\tProduct2_1.Display();\n'
               '\t\tProduct2_2.Display();\n'
               '\t\tProduct2_3.Display();\n'
               '\t\tProduct3_1.Display();\n'
               '\t\tProduct3_2.Display();\n'
               '\t\tProduct3_3.Display();\n'
               '\n'
               '\t\tposition1 = 1; // numbering of products return to 1\n'
               '\t\t\n'
               '\t\tcout << " \\n   0. Back\\n";\n'
               '\t\tcout <<'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1441,
          lineno=1032,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='F_Owner_Products_Stotage()'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1442,
          lineno=1050,
          tokens=154,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body=' "   Make changes in: ";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1':\n"
               '\t\t\tF_Modify_Info_Products(1);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '2':\n"
               '\t\t\tF_Modify_Info_Products(2);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '3':\n"
               '\t\t\tF_Modify_Info_Products(3);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '4':\n"
               '\t\t\tF_Modify_Info_Products(4);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '5':\n"
               '\t\t\tF_Modify_Info_Products(5);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '6':\n"
               '\t\t\tF_Modify_Info_Products(6);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '7':\n"
               '\t\t\tF_Modify_Info_Products(7);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '8':\n"
               '\t\t\tF_Modify_Info_Prod'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1443,
          lineno=1075,
          tokens=139,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='ucts(8);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '9':\n"
               '\t\t\tF_Modify_Info_Products(9);\n'
               '\t\t\tbreak;\n'
               "\t\tcase '0':   // Back to Menu\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_Owner_Main_Menu();\n'
               '\t\t    break;\n'
               '\n'
               "\t\tcase 'i' || 'I':  // User info   \n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\n\\t\\t\\t   User Information:" << endl;;\n'
               '\t\t\tcout << "\\t\\t    _______________________________" << '
               'endl << endl;;\n'
               '\t\t\tcout << "\\t\\t      User Name  : " << Name_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Telephone  : " <'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1444,
          lineno=1091,
          tokens=123,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='< TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t      Login      : " << Login_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Password   : " << Parol_Memory << '
               'endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t    break;\n'
               '\t\t\n'
               '\t\tdefault:  cout << "\\n\\t\\t      Your choice is not '
               'available in Menu" << endl;\n'
               '\t\t\tcout << "\\t\\tPlease press any keyboard to continue '
               'program\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t     break;\n'
               '\n'
               '\t\t} // switch\n'
               '\n'
               '\t} // for loop for products in stock  \n'
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1445,
          lineno=1108,
          tokens=206,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='void F_Modify_Info_Products(int take_product_location) {\n'
               '\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t\t// It is for Displaying the products in order\n'
               '\t\tcout << "    Products List  \\t\\t    Category\\t\\t       '
               'Price\\t\\t In Stock\\n";\n'
               '\t\tif (take_product_location == 1) Product1_1.Display();\n'
               '\t\telse if (take_product_location == 2) '
               'Product1_2.Display();\n'
               '\t\telse if (take_product_location == 3) '
               'Product1_3.Display();\n'
               '\t\telse if (take_product_location == 4) '
               'Product2_1.Display();\n'
               '\t\telse if (take_product_location == 5) '
               'Product2_2.Display();\n'
               '\t\telse if (take_product_location == 6) '
               'Product2_3.Display();\n'
               '\t\telse if (take_product_location == 7) '
               'Product3_1.Display();\n'
               '\t\telse if (take_product_location == 8) '
               'Product3_2.Display();\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1446,
          lineno=1108,
          tokens=11,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='F_Modify_Info_Products(int take_product_location)'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1447,
          lineno=1122,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\t\telse if (take_product_location == 39) '
               'Product3_3.Display();\n'
               '\t\tposition1 = 1;\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\n'
               '\t\tcout << " 1. Change the price \\n";\n'
               '\t\tcout << " 2. Change the quantity in storage\\n";\n'
               '\t\tcout << " 3. Change the name of product\\n";\n'
               '\t\tcout << " 4. Change the class of product\\n";\n'
               '\t\tcout << " 0. Go back \\n";\n'
               '\t\tcout << " Your choice:\\n\\n";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\t\t// FOR CHANGING A PRICE\n'
               '\t\tcase 49:\n'
               '\t\t\tcout << " Enter a new price: ";\n'
               '\t\t\tcin >> Ch_Price;\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1448,
          lineno=1138,
          tokens=214,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\n'
               '\t\t\tif (Ch_Price >= 0) {\n'
               '\t\t\t\tif (take_product_location == 1) Product1_1.price = '
               'Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 2) Product1_2.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 3) Product1_3.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 4) Product2_1.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 5) Product2_2.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 6) Product2_3.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 7) Product3_1.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 8) Product3_2.price '
               '= Ch_Price;\n'
               '\t\t\t\telse if (take_product_location == 39) Product3_3.price '
               '= Ch_Price;\n'
               '\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1449,
          lineno=1152,
          tokens=75,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\t\t\telse {\n'
               '\t\t\t\tcout << " Price cannot be negative! Please check one '
               'more time.\\n";\n'
               '\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t}\n'
               '\t\t\tbreak;\n'
               '\t\t\t// FOR CHANGING THE QUANTITY IN STORAGE\n'
               '\t\tcase 50:\n'
               '\t\t\tcout << " Enter a new quantity in storage: ";\n'
               '\t\t\tcin >> Ch_Quantity;\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1450,
          lineno=1161,
          tokens=224,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\n'
               '\t\t\tif (Ch_Quantity > 0) {\n'
               '\t\t\t\tif (take_product_location == 1) Product1_1.quantity = '
               'Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 2) '
               'Product1_2.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 3) '
               'Product1_3.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 4) '
               'Product2_1.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 5) '
               'Product2_2.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 6) '
               'Product2_3.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 7) '
               'Product3_1.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 8) '
               'Product3_2.quantity = Ch_Quantity;\n'
               '\t\t\t\telse if (take_product_location == 39) '
               'Product3_3.quantity = Ch_Quantity;\n'
               '\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t}\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1451,
          lineno=1175,
          tokens=63,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\t\t\telse {\n'
               '\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t}\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t\t// FOR CHANGING THE NAME\n'
               '\t\tcase 51:\n'
               '\t\t\tcout << " Enter a new name: ";\n'
               '\t\t\tgetline(cin, Product_Name);\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1452,
          lineno=1185,
          tokens=218,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\n'
               '\t\t\tif (take_product_location == 1) Product1_1.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 2) Product1_2.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 3) Product1_3.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 4) Product2_1.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 5) Product2_2.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 6) Product2_3.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 7) Product3_1.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 8) Product3_2.name = '
               'Product_Name;\n'
               '\t\t\telse if (take_product_location == 39) Product3_3.name = '
               'Product_Name;\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t\t// FOR CHANGING THE CLASS OF PRODUCT\n'
               '\t\tcase 52:\n'
               '\t\t\tcout << " Enter a new Class Name: ";\n'
               '\t\t\tgetline(cin, Product_Class);\n'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1453,
          lineno=1201,
          tokens=231,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Modify_Info_Products',
          body='\n'
               '\t\t\tif (take_product_location == 1) '
               'Product1_1.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 2) '
               'Product1_2.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 3) '
               'Product1_3.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 4) '
               'Product2_1.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 5) '
               'Product2_2.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 6) '
               'Product2_3.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 7) '
               'Product3_1.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 8) '
               'Product3_2.class_of_products = Product_Class;\n'
               '\t\t\telse if (take_product_location == 39) '
               'Product3_3.class_of_products = Product_Class;\n'
               '\t\t\tbreak;\n'
               '\t\tcase 48:\n'
               '\t\t\tj = 1000;\n'
               '\t\t\tbreak;\n'
               "\t\t}// 'switch' \n"
               "\t}// 'for' loop \n"
               '}'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1454,
          lineno=28,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1455,
          lineno=31,
          tokens=7,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_Validtaion',
          body='Validation_C User_Validtaion;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1456,
          lineno=41,
          tokens=6,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Overall_Sum',
          body='long double Overall_Sum;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1457,
          lineno=42,
          tokens=8,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Ch_Price',
          body='float Ch_Price, Ch_Quantity;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1458,
          lineno=131,
          tokens=4,
          depth=12,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_Info',
          body='ofstream User_Info;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1459,
          lineno=260,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='Search',
          body='ifstream Search;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1460,
          lineno=1225,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Info',
          body='string Info;'),
 Fragment(document_cs='6536535351995ca50cd4b383bac6e77ae70b17174cb29568a6027623cadd50b1',
          id=1461,
          lineno=1,
          tokens=119,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Cart_Check F_Class_Of_Products1_Menu '
               'F_Class_Of_Products2_Menu F_Class_Of_Products3_Menu '
               'F_Developers F_General_Menu F_Logo F_Logo_Owner '
               'F_Modify_Info_Products F_Owner_Customers_List '
               'F_Owner_Main_Menu F_Owner_Products_Stotage F_Sign_in '
               'F_Table_For_Increasing_And_Decreasing F_User_Main_Menu User_1 '
               'main\n'
               '  Variables: Ch_Price Info Overall_Sum Search User_Info '
               'User_Validtaion\n'
               '  Using: std\n'
               '  Usages: app\n'),
 Fragment(document_cs='6ada646ee5461f2ca12473a17c4afb9d623fe8ac4b43e398aa1e744169d4c4d5',
          id=1462,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_NETWORK_EXPORT_HPP',
          body='#define SFML_NETWORK_EXPORT_HPP'),
 Fragment(document_cs='6ada646ee5461f2ca12473a17c4afb9d623fe8ac4b43e398aa1e744169d4c4d5',
          id=1463,
          lineno=39,
          tokens=9,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_NETWORK_API',
          body='#define SFML_NETWORK_API SFML_API_EXPORT'),
 Fragment(document_cs='6ada646ee5461f2ca12473a17c4afb9d623fe8ac4b43e398aa1e744169d4c4d5',
          id=1464,
          lineno=43,
          tokens=9,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_NETWORK_API',
          body='#define SFML_NETWORK_API SFML_API_IMPORT'),
 Fragment(document_cs='6ada646ee5461f2ca12473a17c4afb9d623fe8ac4b43e398aa1e744169d4c4d5',
          id=1465,
          lineno=1,
          tokens=13,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_NETWORK_API SFML_NETWORK_EXPORT_HPP\n'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1466,
          lineno=37,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Window',
          body='class Window'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1467,
          lineno=43,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1468,
          lineno=66,
          tokens=27,
          depth=5,
          parent_id=None,
          category='enum',
          summary=False,
          name='Wheel',
          body='enum Wheel\n'
               '    {\n'
               '        VerticalWheel,  ///< The vertical mouse wheel\n'
               '        HorizontalWheel ///< The horizontal mouse wheel\n'
               '    }'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1469,
          lineno=80,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isButtonPressed',
          body='isButtonPressed(Button button)'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1470,
          lineno=91,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition()'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1471,
          lineno=104,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition(const Window& relativeTo)'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1472,
          lineno=115,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(const Vector2i& position)'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1473,
          lineno=127,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(const Vector2i& position, const Window& '
               'relativeTo)'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1474,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_MOUSE_HPP',
          body='#define SFML_MOUSE_HPP'),
 Fragment(document_cs='6b002d4e0f5b864527105f01ee6548796231c4e9d22ea5b87c2557d40baa585f',
          id=1475,
          lineno=1,
          tokens=31,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API Window\n'
               '  Enums: Wheel\n'
               '  Macros: SFML_MOUSE_HPP\n'
               '  Functions: getPosition isButtonPressed setPosition\n'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1476,
          lineno=10,
          tokens=74,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Products',
          body='class Products\n'
               '{\n'
               'public:\n'
               '\tstring name;\n'
               '\tstring class_of_products;\n'
               '\tdouble price;\n'
               '\n'
               'public:\n'
               '\tProducts(string name, string class_of_products, double '
               'price) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->class_of_products = class_of_products;\n'
               '\t\tthis->price = price;\n'
               '\t}\n'
               '\n'
               '\tvirtual void Display() = 0; // pure virtual function\n'
               '}'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1477,
          lineno=29,
          tokens=158,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Class_Of_Products1',
          body='class Class_Of_Products1 : public Products\n'
               '{\n'
               'public:\n'
               '\tint quantity;\n'
               '\n'
               'public:\n'
               '\tClass_Of_Products1(string name, string class_of_products, '
               'double price, int quantity) : Products(name, '
               'class_of_products, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tstring getClassOfProducts() {\n'
               '\t\treturn class_of_products;\n'
               '\t}\n'
               '\n'
               '\tdouble getPrice() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint getQuantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid Display() {\n'
               '\t\tcout << " " << position1 << ". " << left << setw(32) << '
               'name << left << setw(27) << class_of_products << left << '
               'setw(18) << price << quantity << endl;\n'
               '\t\tposition1++;\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1478,
          lineno=64,
          tokens=160,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Class_Of_Products2',
          body='class Class_Of_Products2 : public Products\n'
               '{\n'
               'public:\n'
               '\tint quantity;\n'
               '\n'
               'public:\n'
               '\tClass_Of_Products2(string name, string class_of_products, '
               'double price, int quantity) : Products(name, '
               'class_of_products, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tstring getClassOfProducts() {\n'
               '\t\treturn class_of_products;\n'
               '\t}\n'
               '\n'
               '\tdouble getPrice() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint getQuantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid Display() {\n'
               '\t\tcout << " " << position1 << ". " << left << setw(32) << '
               'name << left << setw(27) << class_of_products << left << '
               'setw(18) << price << quantity << endl;\n'
               '\t\t'
               'position1++;                                                                 \n'
               '\t}\n'
               '}'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1479,
          lineno=98,
          tokens=160,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Class_Of_Products3',
          body='class Class_Of_Products3 : public Products\n'
               '{\n'
               'public:\n'
               '\tint quantity;\n'
               '\n'
               'public:\n'
               '\tClass_Of_Products3(string name, string class_of_products, '
               'double price, int quantity) : Products(name, '
               'class_of_products, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tstring getClassOfProducts() {\n'
               '\t\treturn class_of_products;\n'
               '\t}\n'
               '\n'
               '\tdouble getPrice() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint getQuantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid Display() {\n'
               '\t\tcout << " " << position1 << ". " << left << setw(32) << '
               'name << left << setw(27) << class_of_products << left << '
               'setw(18) << price << quantity << endl;\n'
               '\t\t'
               'position1++;                                                                 \n'
               '\t}\n'
               '}'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1480,
          lineno=13,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1481,
          lineno=14,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='class_of_products',
          body='string class_of_products;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1482,
          lineno=15,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price',
          body='double price;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1483,
          lineno=32,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1484,
          lineno=67,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1485,
          lineno=101,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1486,
          lineno=18,
          tokens=52,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Products',
          body='Products(string name, string class_of_products, double '
               'price)Products(string name, string class_of_products, double '
               'price) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->class_of_products = class_of_products;\n'
               '\t\tthis->price = price;\n'
               '\t}'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1487,
          lineno=35,
          tokens=58,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Class_Of_Products1',
          body='Class_Of_Products1(string name, string class_of_products, '
               'double price, int quantity) : Products(name, '
               'class_of_products, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}Class_Of_Products1(string name, string class_of_products, '
               'double price, int quantity)'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1488,
          lineno=70,
          tokens=39,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Class_Of_Products2',
          body='Class_Of_Products2(string name, string class_of_products, '
               'double price, int quantity) : Products(name, '
               'class_of_products, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1489,
          lineno=70,
          tokens=19,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Class_Of_Products2',
          body='Class_Of_Products2(string name, string class_of_products, '
               'double price, int quantity)'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1490,
          lineno=104,
          tokens=58,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Class_Of_Products3',
          body='Class_Of_Products3(string name, string class_of_products, '
               'double price, int quantity) : Products(name, '
               'class_of_products, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}Class_Of_Products3(string name, string class_of_products, '
               'double price, int quantity)'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1491,
          lineno=5,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='6b70e2814fa3674d4430a2b7ca8dac75acbea81e79258616b60e9d25bd485dcd',
          id=1492,
          lineno=1,
          tokens=55,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Class_Of_Products1 Class_Of_Products2 '
               'Class_Of_Products3 Products\n'
               '  Functions: Class_Of_Products1 Class_Of_Products2 '
               'Class_Of_Products3 Products\n'
               '  Fields: class_of_products name price quantity\n'
               '  Using: std\n'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1493,
          lineno=37,
          tokens=248,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Vector3',
          body='class Vector3\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// Creates a Vector3(0, 0, 0).\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Vector3();\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the vector from its coordinates\n'
               '    ///\n'
               '    /// \\param X X coordinate\n'
               '    /// \\param Y Y coordinate\n'
               '    /// \\param Z Z coordinate\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Vector3(T X, T Y, T Z);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the vector from another type of '
               'vector\n'
               '    ///\n'
               "    /// This constructor doesn't replace the copy "
               'constructor,\n'
               "    /// it's called only when U != T.\n"
               '    /// A call to this constructor will fail to compile if U\n'
               '    /// is not convertible to T.\n'
               '    ///\n'
               '    /// \\param vector Vector to convert\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    template <typename U>\n'
               '    explicit Vector3(const Vector3<U>& vector);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    // Member data\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    T x; ///< X coordinate of the vector\n'
               '    T y; ///< Y coordinate of the vector\n'
               '    T z; ///< Z coordinate of the vector\n'
               '}'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1494,
          lineno=47,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Vector3',
          body='Vector3()'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1495,
          lineno=57,
          tokens=20,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Vector3',
          body='Vector3(T X, T Y, T Z)Vector3(const Vector3<U>& vector)'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1496,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VECTOR3_HPP',
          body='#define SFML_VECTOR3_HPP'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1497,
          lineno=255,
          tokens=10,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vector3i',
          body='typedef Vector3<int>   Vector3i;'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1498,
          lineno=256,
          tokens=9,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vector3f',
          body='typedef Vector3<float> Vector3f;'),
 Fragment(document_cs='6c4c82c33df997c9066224b6246d4fb1d97596b9fb4eaff07e8586db8296a192',
          id=1499,
          lineno=1,
          tokens=33,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Vector3\n'
               '  Typedefs: Vector3f Vector3i\n'
               '  Macros: SFML_VECTOR3_HPP\n'
               '  Functions: Vector3\n'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1500,
          lineno=43,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Color',
          body='class Color'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1501,
          lineno=44,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1502,
          lineno=45,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Texture',
          body='class Texture'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1503,
          lineno=46,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Transform',
          body='class Transform'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1504,
          lineno=52,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1505,
          lineno=60,
          tokens=33,
          depth=3,
          parent_id=None,
          category='enum',
          summary=False,
          name='Type',
          body='enum Type\n'
               '    {\n'
               '        Vertex,   ///< %Vertex shader\n'
               '        Geometry, ///< Geometry shader\n'
               '        Fragment  ///< Fragment (pixel) shader\n'
               '    }'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1506,
          lineno=119,
          tokens=12,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& filename, Type type)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1507,
          lineno=140,
          tokens=20,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& vertexShaderFilename, const '
               'std::string& fragmentShaderFilename)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1508,
          lineno=162,
          tokens=29,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& vertexShaderFilename, const '
               'std::string& geometryShaderFilename, const std::string& '
               'fragmentShaderFilename)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1509,
          lineno=182,
          tokens=13,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const std::string& shader, Type type)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1510,
          lineno=203,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const std::string& vertexShader, const '
               'std::string& fragmentShader)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1511,
          lineno=225,
          tokens=27,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const std::string& vertexShader, const '
               'std::string& geometryShader, const std::string& '
               'fragmentShader)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1512,
          lineno=245,
          tokens=10,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& stream, Type type)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1513,
          lineno=266,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& vertexShaderStream, InputStream& '
               'fragmentShaderStream)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1514,
          lineno=288,
          tokens=21,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& vertexShaderStream, InputStream& '
               'geometryShaderStream, InputStream& fragmentShaderStream)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1515,
          lineno=297,
          tokens=12,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, float x)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1516,
          lineno=306,
          tokens=18,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Vec2& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1517,
          lineno=315,
          tokens=18,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Vec3& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1518,
          lineno=333,
          tokens=31,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Vec4& '
               'vector)setUniform(const std::string& name, const Texture& '
               'texture)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1519,
          lineno=342,
          tokens=12,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, int x)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1520,
          lineno=351,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Ivec2& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1521,
          lineno=360,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Ivec3& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1522,
          lineno=377,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Ivec4& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1523,
          lineno=386,
          tokens=12,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, bool x)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1524,
          lineno=395,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Bvec2& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1525,
          lineno=404,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Bvec3& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1526,
          lineno=413,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Bvec4& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1527,
          lineno=422,
          tokens=18,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Mat3& matrix)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1528,
          lineno=431,
          tokens=18,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, const Glsl::Mat4& matrix)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1529,
          lineno=486,
          tokens=13,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniform',
          body='setUniform(const std::string& name, CurrentTextureType)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1530,
          lineno=496,
          tokens=22,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniformArray',
          body='setUniformArray(const std::string& name, const float* '
               'scalarArray, std::size_t length)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1531,
          lineno=506,
          tokens=26,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniformArray',
          body='setUniformArray(const std::string& name, const Glsl::Vec2* '
               'vectorArray, std::size_t length)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1532,
          lineno=516,
          tokens=26,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniformArray',
          body='setUniformArray(const std::string& name, const Glsl::Vec3* '
               'vectorArray, std::size_t length)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1533,
          lineno=526,
          tokens=26,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniformArray',
          body='setUniformArray(const std::string& name, const Glsl::Vec4* '
               'vectorArray, std::size_t length)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1534,
          lineno=536,
          tokens=26,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniformArray',
          body='setUniformArray(const std::string& name, const Glsl::Mat3* '
               'matrixArray, std::size_t length)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1535,
          lineno=546,
          tokens=26,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setUniformArray',
          body='setUniformArray(const std::string& name, const Glsl::Mat4* '
               'matrixArray, std::size_t length)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1536,
          lineno=554,
          tokens=11,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, float x)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1537,
          lineno=562,
          tokens=14,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, float x, float y)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1538,
          lineno=570,
          tokens=17,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, float x, float y, float '
               'z)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1539,
          lineno=578,
          tokens=20,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, float x, float y, float '
               'z, float w)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1540,
          lineno=586,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, const Vector2f& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1541,
          lineno=594,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, const Vector3f& vector)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1542,
          lineno=602,
          tokens=26,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, const Color& '
               'color)setParameter(const std::string& name, const Transform& '
               'transform)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1543,
          lineno=618,
          tokens=13,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, const Texture& texture)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1544,
          lineno=626,
          tokens=12,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setParameter',
          body='setParameter(const std::string& name, CurrentTextureType)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1545,
          lineno=638,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getNativeHandle',
          body='getNativeHandle() const'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1546,
          lineno=661,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='bind',
          body='bind(const Shader* shader)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1547,
          lineno=673,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='isAvailable',
          body='isAvailable()'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1548,
          lineno=692,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='isGeometryAvailable',
          body='isGeometryAvailable()'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1549,
          lineno=718,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='bindTextures',
          body='bindTextures() const'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1550,
          lineno=728,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getUniformLocation',
          body='getUniformLocation(const std::string& name)'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1551,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SHADER_HPP',
          body='#define SFML_SHADER_HPP'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1552,
          lineno=74,
          tokens=5,
          depth=3,
          parent_id=None,
          category='struct',
          summary=False,
          name='CurrentTextureType',
          body='struct CurrentTextureType {}'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1553,
          lineno=737,
          tokens=3,
          depth=3,
          parent_id=None,
          category='struct',
          summary=False,
          name='UniformBinder',
          body='struct UniformBinder'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1554,
          lineno=742,
          tokens=12,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='TextureTable',
          body='typedef std::map<int, const Texture*> TextureTable;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1555,
          lineno=743,
          tokens=13,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='UniformTable',
          body='typedef std::map<std::string, int> UniformTable;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1556,
          lineno=82,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='CurrentTexture',
          body='static CurrentTextureType CurrentTexture;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1557,
          lineno=748,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_shaderProgram',
          body='unsigned int m_shaderProgram;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1558,
          lineno=749,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_currentTexture',
          body='int          m_currentTexture;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1559,
          lineno=750,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_textures',
          body='TextureTable m_textures;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1560,
          lineno=751,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_uniforms',
          body='UniformTable m_uniforms;'),
 Fragment(document_cs='73169a7ce2164033d1a8f7de0c351b9c5ad718f702d672d36e3e19b285e6157b',
          id=1561,
          lineno=1,
          tokens=96,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Color InputStream SFML_GRAPHICS_API Texture '
               'Transform\n'
               '  Structs: CurrentTextureType UniformBinder\n'
               '  Enums: Type\n'
               '  Typedefs: TextureTable UniformTable\n'
               '  Macros: SFML_SHADER_HPP\n'
               '  Functions: bind bindTextures getNativeHandle '
               'getUniformLocation isAvailable isGeometryAvailable '
               'loadFromFile loadFromMemory loadFromStream setParameter '
               'setUniform setUniformArray\n'
               '  Variables: CurrentTexture m_currentTexture m_shaderProgram '
               'm_textures m_uniforms\n'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1562,
          lineno=37,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1563,
          lineno=43,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1564,
          lineno=77,
          tokens=9,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='open',
          body='open(InputStream& stream, Info& info)'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1565,
          lineno=92,
          tokens=7,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='seek',
          body='seek(Uint64 sampleOffset)'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1566,
          lineno=103,
          tokens=11,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='read',
          body='read(Int16* samples, Uint64 maxCount)'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1567,
          lineno=26,
          tokens=10,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDFILEREADER_HPP',
          body='#define SFML_SOUNDFILEREADER_HPP'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1568,
          lineno=55,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='sampleRate',
          body='unsigned int sampleRate;'),
 Fragment(document_cs='769b226e89331f298ee16a5d6a409e12b2e6c4968d75815e950f79841cdd56ec',
          id=1569,
          lineno=1,
          tokens=35,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream SFML_AUDIO_API\n'
               '  Macros: SFML_SOUNDFILEREADER_HPP\n'
               '  Functions: open read seek\n'
               '  Variables: sampleRate\n'),
 Fragment(document_cs='782b33f9c8dec0399f231adb7916607fdeb52e98dae9538a4446c00bb044274e',
          id=1570,
          lineno=4,
          tokens=82,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main3',
          body='main3()int main3()\n'
               '{\n'
               '\tfloat C, F;\n'
               '\tcout << "Enter your temperature in Celcius: ";\n'
               '\tcin >> C;\n'
               '\tF = C * 1.8 + 32;\n'
               '\tcout << "In Celcius: " << C << "*C ;" << endl;\n'
               '\tcout << "In Fahrenheit: " << F << "F ;" << endl;\n'
               '\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='782b33f9c8dec0399f231adb7916607fdeb52e98dae9538a4446c00bb044274e',
          id=1571,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='782b33f9c8dec0399f231adb7916607fdeb52e98dae9538a4446c00bb044274e',
          id=1572,
          lineno=6,
          tokens=5,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='C',
          body='float C, F;'),
 Fragment(document_cs='782b33f9c8dec0399f231adb7916607fdeb52e98dae9538a4446c00bb044274e',
          id=1573,
          lineno=1,
          tokens=16,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main3\n  Variables: C\n  Using: std\n'),
 Fragment(document_cs='79217d954702cfcdaefbae313b5748c08ec629a94dda7b9aa731ce3b6d070398',
          id=1574,
          lineno=9,
          tokens=99,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='qwerty',
          body='qwerty(double n, double sum, double fact)double qwerty(double '
               'n, double sum, double fact)\n'
               '{\n'
               '\tfor (int i = 1; i <= n; i++)\n'
               '\t{\n'
               '\t\tfact = fact * i;\t\t\t // calculating the factorial of the '
               'numbers\n'
               '\t\tsum += (pow(i, i) / (fact)); // executing the sum of '
               'numbers\n'
               '\t}\t\t\t\t\t\t\t\t //"pow" is raising \'i\' to power \'i\'\n'
               '\treturn sum;\t\t\t\t\t\t //\n'
               '}'),
 Fragment(document_cs='79217d954702cfcdaefbae313b5748c08ec629a94dda7b9aa731ce3b6d070398',
          id=1575,
          lineno=19,
          tokens=124,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tdouble n;\n'
               '\tdouble sum = 0;\n'
               '\tdouble fact = 1;\n'
               '\tcout << "Please ebter the number: "; // outputing and '
               'inputing the number\n'
               '\tcin >> n;\n'
               '\tif (n > 0)\t\t\t\t\t\t\t\t\t\t\t\t// the program will '
               'calculate the sum when numbers is positive\n'
               '\t\tcout << "Sum is: " << qwerty(n, sum, fact) << endl; // '
               'calling the function qwerty\n'
               '\telse\t\t\t\t\t\t\t\t\t\t\t\t\t// when the number is negative '
               "'else' will work\n"
               '\t\tcout << "INVALID INPUT!" << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='79217d954702cfcdaefbae313b5748c08ec629a94dda7b9aa731ce3b6d070398',
          id=1576,
          lineno=19,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='79217d954702cfcdaefbae313b5748c08ec629a94dda7b9aa731ce3b6d070398',
          id=1577,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='79217d954702cfcdaefbae313b5748c08ec629a94dda7b9aa731ce3b6d070398',
          id=1578,
          lineno=1,
          tokens=12,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main qwerty\n  Using: std\n'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1579,
          lineno=43,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1580,
          lineno=61,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='View',
          body='View(const FloatRect& rectangle)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1581,
          lineno=70,
          tokens=15,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='View',
          body='View(const Vector2f& center, const Vector2f& size)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1582,
          lineno=81,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setCenter',
          body='setCenter(float x, float y)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1583,
          lineno=91,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setCenter',
          body='setCenter(const Vector2f& center)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1584,
          lineno=102,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setSize',
          body='setSize(float width, float height)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1585,
          lineno=112,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setSize',
          body='setSize(const Vector2f& size)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1586,
          lineno=124,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setRotation',
          body='setRotation(float angle)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1587,
          lineno=141,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setViewport',
          body='setViewport(const FloatRect& viewport)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1588,
          lineno=153,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='reset',
          body='reset(const FloatRect& rectangle)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1589,
          lineno=163,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getCenter',
          body='getCenter() const'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1590,
          lineno=173,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1591,
          lineno=183,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getRotation',
          body='getRotation() const'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1592,
          lineno=193,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getViewport',
          body='getViewport() const'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1593,
          lineno=204,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='move',
          body='move(float offsetX, float offsetY)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1594,
          lineno=214,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='move',
          body='move(const Vector2f& offset)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1595,
          lineno=224,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='rotate',
          body='rotate(float angle)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1596,
          lineno=241,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='zoom',
          body='zoom(float factor)'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1597,
          lineno=253,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getTransform',
          body='getTransform() const'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1598,
          lineno=265,
          tokens=5,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getInverseTransform',
          body='getInverseTransform() const'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1599,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VIEW_HPP',
          body='#define SFML_VIEW_HPP'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1600,
          lineno=273,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_size',
          body='Vector2f          m_size;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1601,
          lineno=274,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_rotation',
          body='float             m_rotation;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1602,
          lineno=275,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_viewport',
          body='FloatRect         m_viewport;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1603,
          lineno=276,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_transform',
          body='mutable Transform m_transform;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1604,
          lineno=277,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_inverseTransform',
          body='mutable Transform m_inverseTransform;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1605,
          lineno=278,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_transformUpdated',
          body='mutable bool      m_transformUpdated;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1606,
          lineno=279,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_invTransformUpdated',
          body='mutable bool      m_invTransformUpdated;'),
 Fragment(document_cs='7b5177fba902b01bfb684c1782d95e88a7dadbd4dd3c67667ac62eb2a90818e5',
          id=1607,
          lineno=1,
          tokens=68,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_VIEW_HPP\n'
               '  Functions: View getCenter getInverseTransform getRotation '
               'getSize getTransform getViewport move reset rotate setCenter '
               'setRotation setSize setViewport zoom\n'
               '  Variables: m_invTransformUpdated m_inverseTransform '
               'm_rotation m_size m_transform m_transformUpdated m_viewport\n'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1608,
          lineno=39,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='CursorImpl',
          body='class CursorImpl'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1609,
          lineno=46,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1610,
          lineno=144,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromPixels',
          body='loadFromPixels(const Uint8* pixels, Vector2u size, Vector2u '
               'hotspot)'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1611,
          lineno=160,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromSystem',
          body='loadFromSystem(Type type)'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1612,
          lineno=175,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getImpl',
          body='getImpl() const'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1613,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CURSOR_HPP',
          body='#define SFML_CURSOR_HPP'),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1614,
          lineno=37,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='7bee5762d43bd5ade0a0fc7a5bc3c75c449aba4525cdaf77d734677224b524dc',
          id=1615,
          lineno=1,
          tokens=43,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: CursorImpl SFML_WINDOW_API\n'
               '  Macros: SFML_CURSOR_HPP\n'
               '  Functions: getImpl loadFromPixels loadFromSystem\n'
               '  Namespaces: priv\n'
               '  Usages: CursorImpl\n'),
 Fragment(document_cs='7d4dfc83e7645f721ad1f188ed83c851f62024274d83db44df2f0d1f24d60988',
          id=1616,
          lineno=8,
          tokens=92,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()int main() {\n'
               '\tint a = 0, b = 1, sum = 0;\n'
               '\tcout << a << endl;\n'
               '\tcout << b << endl;\n'
               '\twhile (b < 100) {\n'
               '\t\tsum = a + b;\n'
               '\t\ta = b;\n'
               '\t\tb = sum;\n'
               '\t\tif (b > 100) {\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t\tcout << sum << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='7d4dfc83e7645f721ad1f188ed83c851f62024274d83db44df2f0d1f24d60988',
          id=1617,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='7d4dfc83e7645f721ad1f188ed83c851f62024274d83db44df2f0d1f24d60988',
          id=1618,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='7d9643ce04b8a089c7568eca0b9a2b1bb39ad4860c45e4a2d38c81262c1c2d37',
          id=1619,
          lineno=42,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='7d9643ce04b8a089c7568eca0b9a2b1bb39ad4860c45e4a2d38c81262c1c2d37',
          id=1620,
          lineno=70,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isAvailable',
          body='isAvailable(Type sensor)'),
 Fragment(document_cs='7d9643ce04b8a089c7568eca0b9a2b1bb39ad4860c45e4a2d38c81262c1c2d37',
          id=1621,
          lineno=85,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setEnabled',
          body='setEnabled(Type sensor, bool enabled)'),
 Fragment(document_cs='7d9643ce04b8a089c7568eca0b9a2b1bb39ad4860c45e4a2d38c81262c1c2d37',
          id=1622,
          lineno=95,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getValue',
          body='getValue(Type sensor)'),
 Fragment(document_cs='7d9643ce04b8a089c7568eca0b9a2b1bb39ad4860c45e4a2d38c81262c1c2d37',
          id=1623,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SENSOR_HPP',
          body='#define SFML_SENSOR_HPP'),
 Fragment(document_cs='7d9643ce04b8a089c7568eca0b9a2b1bb39ad4860c45e4a2d38c81262c1c2d37',
          id=1624,
          lineno=1,
          tokens=25,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API\n'
               '  Macros: SFML_SENSOR_HPP\n'
               '  Functions: getValue isAvailable setEnabled\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1625,
          lineno=5,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1626,
          lineno=7,
          tokens=200,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='read_display',
          body='read_display()void read_display()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\tcout << "\\t\\tREAD AND DISPLAY\\n";\n'
               '\tcout << "Please input information about 2D array: " << '
               'endl;\n'
               '\tint row_input, col_input;\n'
               '\tcout << "Rows (max 5): ";\n'
               '\tcin >> row_input;\n'
               '\tcout << "Columns (max 5): ";\n'
               '\tcin >> col_input;\n'
               '\tint a[5][5];\n'
               '\tcout << "Now input elements of Matrix: ";\n'
               '\tif (row_input > 0 && row_input <= 5 && col_input > 0 && '
               'col_input <= 5)\n'
               '\t{\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> a[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\tcout << "Result: \\n";\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1627,
          lineno=31,
          tokens=165,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='read_display',
          body='\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\n'
               '\t\t\t\tcout << a[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Do you want to try again? (Yes = 1, No = Any '
               'Key)\\n";\n'
               '\t\tstring respond;\n'
               '\t\tcout << "Your choice: ";\n'
               '\t\tcin >> respond;\n'
               '\t\tif (respond == "1")\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tread_display();\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please input valid numbers from 1 to 5 ! " << '
               'endl;\n'
               '\t\tread_display();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1628,
          lineno=62,
          tokens=212,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='transpose',
          body='void transpose()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\tcout << "\\t\\tTRANSPOSE OF MATRIX\\n";\n'
               '\tint a[5][5], trans[5][5], r, c, i, j;\n'
               '\tcout << "Please input information about 2D array: " << '
               'endl;\n'
               '\tcout << "Rows (max 5): ";\n'
               '\tcin >> r;\n'
               '\tcout << "Columns (max 5): ";\n'
               '\tcin >> c;\n'
               '\t// Storing element of matrix entered by user in array\n'
               '\tif (r > 0 && r <= 5 && c > 0 && c <= 5)\n'
               '\t{\n'
               '\t\tcout << "Enter elements of matrix: " << endl;\n'
               '\t\tfor (i = 0; i < r; ++i)\n'
               '\t\t\tfor (j = 0; j < c; ++j)\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> a[i][j];\n'
               '\t\t\t}\n'
               '\t\t// Displaying the matrix\n'
               '\t\tcout << "Entered Matrix: " << endl;\n'
               '\t\tfor (i = 0; i < r; ++i)\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1629,
          lineno=62,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='transpose',
          body='transpose()'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1630,
          lineno=84,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='transpose',
          body='\t\t\tfor (j = 0; j < c; ++j)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << " " << a[i][j];\n'
               '\t\t\t\tif (j == c - 1)\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t}\n'
               '\t\t// Finding transpose of matrix\n'
               '\t\tfor (i = 0; i < r; ++i)\n'
               '\t\t\tfor (j = 0; j < c; ++j)\n'
               '\t\t\t{\n'
               '\t\t\t\ttrans[j][i] = a[i][j];\n'
               '\t\t\t}\n'
               '\t\t// Displaying the transpose\n'
               '\t\tcout << "Transpose of Matrix: " << endl;\n'
               '\t\tfor (i = 0; i < c; ++i)\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1631,
          lineno=100,
          tokens=174,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='transpose',
          body='\t\t\tfor (j = 0; j < r; ++j)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << " " << trans[i][j];\n'
               '\t\t\t\tif (j == r - 1)\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t}\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Do you want to try again? (Yes = 1, No = Any '
               'Key)\\n";\n'
               '\t\tstring respond;\n'
               '\t\tcout << "Your choice: ";\n'
               '\n'
               '\t\tcin >> respond;\n'
               '\t\tif (respond == "1")\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ttranspose();\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please input valid numbers from 1 to 5 ! " << '
               'endl;\n'
               '\t\ttranspose();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1632,
          lineno=132,
          tokens=222,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='sum_matrices',
          body='void sum_matrices()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\tcout << "\\t\\tSUM TWO MATRICES\\n";\n'
               '\tcout << "\\tNOTE: Rows 1 = Rows 2 && Columns 1 = Columns '
               '2\\n";\n'
               '\tcout << "Please input details for the First Matrix: \\n";\n'
               '\tint row_input, col_input;\n'
               '\tcout << "Rows (max 5): ";\n'
               '\tcin >> row_input;\n'
               '\tcout << "Columns (max 5): ";\n'
               '\tcin >> col_input;\n'
               '\tint a[5][5];\n'
               '\tcout << "Now input elements of First Matrix: ";\n'
               '\tif (row_input > 0 && row_input <= 5 && col_input > 0 && '
               'col_input <= 5)\n'
               '\t{\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> a[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\tcout << "First Matrix: \\n";\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1633,
          lineno=132,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='sum_matrices',
          body='sum_matrices()'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1634,
          lineno=157,
          tokens=214,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='sum_matrices',
          body='\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << a[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please input valid numbers from 1 to 5 ! " << '
               'endl;\n'
               '\t\tread_display();\n'
               '\t}\n'
               '\t// for the second matrix\n'
               '\tcout << endl;\n'
               '\tcout << "Please input details for the Second Matrix: \\n";\n'
               '\tint row_input2, col_input2;\n'
               '\tcout << "Rows (max 5): ";\n'
               '\tcin >> row_input2;\n'
               '\tcout << "Columns (max 5): ";\n'
               '\tcin >> col_input2;\n'
               '\tint b[5][5];\n'
               '\tcout << "Now input elements of Second Matrix: ";\n'
               '\tif (row_input2 > 0 && row_input2 <= 5 && col_input2 > 0 && '
               'col_input2 <= 5)\n'
               '\t{\n'
               '\t\tfor (int row = 0; row < row_input2; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1635,
          lineno=184,
          tokens=201,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='sum_matrices',
          body='\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> b[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\tcout << "Second Matrix: \\n";\n'
               '\t\tfor (int row = 0; row < row_input2; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\n'
               '\t\t\t\tcout << b[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please input valid numbers from 1 to 5 ! " << '
               'endl;\n'
               '\t\tread_display();\n'
               '\t}\n'
               '\t// validation for adding matrices\n'
               '\tint sum[5][5];\n'
               '\tif (row_input == row_input2 && col_input == col_input2)\n'
               '\t{\n'
               '\t\t// Adding Two matrices\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1636,
          lineno=213,
          tokens=238,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='sum_matrices',
          body='\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tsum[row][col] = a[row][col] + b[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\t// Displaying the resultant sum matrix.\n'
               '\t\tcout << endl\n'
               '\t\t\t << "Sum of two matrix is: " << endl;\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << sum[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "This Matrices cannot be added.";\n'
               '\t}\n'
               '\t// asking play again\n'
               '\tcout << endl;\n'
               '\tcout << "Do you want to try again? (Yes = 1, No = Any '
               'Key)\\n";\n'
               '\tstring respond;\n'
               '\tcout << "Your choice: ";\n'
               '\tcin >> respond;\n'
               '\tif (respond == "1")\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tsum_matrices();\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tmain();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1637,
          lineno=253,
          tokens=216,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='product',
          body='void product()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\tcout << "\\t\\tMULTIPLY TWO MATRICES\\n";\n'
               '\tcout << "\\tNOTE: Rows 1 = Column 2 \\n";\n'
               '\tcout << "Please input details for the First Matrix: \\n";\n'
               '\tint row_input, col_input;\n'
               '\tcout << "Rows (max 5): ";\n'
               '\tcin >> row_input;\n'
               '\tcout << "Columns (max 5): ";\n'
               '\tcin >> col_input;\n'
               '\tint a[5][5];\n'
               '\tcout << "Now input elements of First Matrix: ";\n'
               '\tif (row_input > 0 && row_input <= 5 && col_input > 0 && '
               'col_input <= 5)\n'
               '\t{\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> a[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\tcout << "First Matrix: \\n";\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1638,
          lineno=253,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='product',
          body='product()'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1639,
          lineno=278,
          tokens=214,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='product',
          body='\t\t\tfor (int col = 0; col < col_input; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << a[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please input valid numbers from 1 to 5 ! " << '
               'endl;\n'
               '\t\tread_display();\n'
               '\t}\n'
               '\t// for the second matrix\n'
               '\tcout << endl;\n'
               '\tcout << "Please input details for the Second Matrix: \\n";\n'
               '\tint row_input2, col_input2;\n'
               '\tcout << "Rows (max 5): ";\n'
               '\tcin >> row_input2;\n'
               '\tcout << "Columns (max 5): ";\n'
               '\tcin >> col_input2;\n'
               '\tint b[5][5];\n'
               '\tcout << "Now input elements of Second Matrix: ";\n'
               '\tif (row_input2 > 0 && row_input2 <= 5 && col_input2 > 0 && '
               'col_input2 <= 5)\n'
               '\t{\n'
               '\t\tfor (int row = 0; row < row_input2; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1640,
          lineno=305,
          tokens=233,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='product',
          body='\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> b[row][col];\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\tcout << "Second Matrix: \\n";\n'
               '\t\tfor (int row = 0; row < row_input2; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\n'
               '\t\t\t\tcout << b[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "Please input valid numbers from 1 to 5 ! " << '
               'endl;\n'
               '\t\tread_display();\n'
               '\t}\n'
               '\t// validation for multiplication matrices\n'
               '\tint multi[5][5];\n'
               '\tif (row_input == col_input2)\n'
               '\t{\n'
               '\t\t// initializing the matrix of multiplication\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tmulti[row][col] = 0;\n'
               '\t\t\t}\n'
               '\t\t}\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1641,
          lineno=339,
          tokens=131,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='product',
          body='\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'
               '\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tfor (int i = 0; i < col_input; i++)\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tmulti[row][col] += a[row][col] * b[row][col];\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\t// displaying multiplication of two matrices\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "Result of Multiplication: \\n";\n'
               '\t\tfor (int row = 0; row < row_input; row++)\n'
               '\t\t{\n'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1642,
          lineno=354,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='product',
          body='\t\t\tfor (int col = 0; col < col_input2; col++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << multi[row][col] << "  ";\n'
               '\t\t\t}\n'
               '\t\t\tcout << endl;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "This Matrices cannot be multiplied.";\n'
               '\t}\n'
               '\t// asking play again\n'
               '\tcout << endl;\n'
               '\tcout << "Do you want to try again? (Yes = 1, No = Any '
               'Key)\\n";\n'
               '\tstring respond;\n'
               '\tcout << "Your choice: ";\n'
               '\tcin >> respond;\n'
               '\tif (respond == "1")\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tsum_matrices();\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tmain();\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1643,
          lineno=384,
          tokens=119,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view',
          body='void main_menu_view()\n'
               '{\n'
               '\tsystem("color 3F");\n'
               '\tcout << "\\t\\t\\t===============================\\n";\n'
               '\tcout << "\\t\\t\\t\\tM A I N  M E N U\\n";\n'
               '\tcout << "\\t\\t\\t===============================\\n";\n'
               '\tcout << "\\t\\t\\t[1] Read and Display Matrix\\n";\n'
               '\tcout << "\\t\\t\\t[2] Transpose\\n";\n'
               '\tcout << "\\t\\t\\t[3] Sum of two Matrices\\n";\n'
               '\tcout << "\\t\\t\\t[4] Product of two Matrices\\n\\n";\n'
               '}main_menu_view()'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1644,
          lineno=395,
          tokens=174,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main22',
          body='main22()int main22()\n'
               '{\n'
               '\tmain_menu_view();\n'
               '\tcout << "\\t\\t\\tYOUR CHOICE: ";\n'
               '\tstring user_choice;\n'
               '\tcin >> user_choice;\n'
               '\t// validating the user input\n'
               '\tif (user_choice == "1" || user_choice == "2" || user_choice '
               '== "3" || user_choice == "4")\n'
               '\t{\n'
               '\t\tif (user_choice == "1")\n'
               '\t\t\tread_display();\n'
               '\t\telse if (user_choice == "2")\n'
               '\t\t\ttranspose();\n'
               '\t\telse if (user_choice == "3")\n'
               '\t\t\tsum_matrices();\n'
               '\t\telse if (user_choice == "4")\n'
               '\t\t\tproduct();\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tsystem("cls"); // function for the clearing the screen of '
               'console\n'
               '\t\tcout << "\\t\\tYou have inputted wrong number, please try '
               'again!\\n";\n'
               '\t\tmain();\n'
               '\t}\n'
               '\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1645,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1646,
          lineno=12,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='row_input',
          body='int row_input, col_input;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1647,
          lineno=40,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='respond',
          body='string respond;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1648,
          lineno=109,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='respond',
          body='string respond;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1649,
          lineno=138,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='row_input',
          body='int row_input, col_input;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1650,
          lineno=173,
          tokens=9,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='row_input2',
          body='int row_input2, col_input2;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1651,
          lineno=238,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='respond',
          body='string respond;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1652,
          lineno=259,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='row_input',
          body='int row_input, col_input;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1653,
          lineno=294,
          tokens=9,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='row_input2',
          body='int row_input2, col_input2;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1654,
          lineno=369,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='respond',
          body='string respond;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1655,
          lineno=399,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='user_choice',
          body='string user_choice;'),
 Fragment(document_cs='7e211ddd3d0af98ce7925e43979ada3fb8d376e4129ceda6ff8345744e1ee5e6',
          id=1656,
          lineno=1,
          tokens=33,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main main22 main_menu_view product read_display '
               'sum_matrices transpose\n'
               '  Variables: respond row_input row_input2 user_choice\n'
               '  Using: std\n'),
 Fragment(document_cs='804cf79f22a1bd301190c94c4c56c727f6b1a7b19123f9ce7f8ae3c8904dda8e',
          id=1657,
          lineno=1,
          tokens=215,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='#----------------------------------------------------------------\n'
               '# Generated CMake target import file for configuration '
               '"Release".\n'
               '#----------------------------------------------------------------\n'
               '\n'
               '# Commands may need to know the format version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION 1)\n'
               '\n'
               '# Import target "sfml-system" for configuration "Release"\n'
               'set_property(TARGET sfml-system APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-system PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-system-s.lib"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-system )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-system '
               '"${_IMPORT_PREFIX}/lib/sfml-system-s.lib" )\n'
               '\n'
               '# Import target "sfml-main" for configuration "Release"\n'
               'set_property(TARGET sfml-main APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-main PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-main.lib"\n'
               '  )\n'),
 Fragment(document_cs='804cf79f22a1bd301190c94c4c56c727f6b1a7b19123f9ce7f8ae3c8904dda8e',
          id=1658,
          lineno=24,
          tokens=218,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-main )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-main '
               '"${_IMPORT_PREFIX}/lib/sfml-main.lib" )\n'
               '\n'
               '# Import target "sfml-window" for configuration "Release"\n'
               'set_property(TARGET sfml-window APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-window PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-window-s.lib"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-window )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-window '
               '"${_IMPORT_PREFIX}/lib/sfml-window-s.lib" )\n'
               '\n'
               '# Import target "sfml-network" for configuration "Release"\n'
               'set_property(TARGET sfml-network APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-network PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-network-s.lib"\n'
               '  )\n'),
 Fragment(document_cs='804cf79f22a1bd301190c94c4c56c727f6b1a7b19123f9ce7f8ae3c8904dda8e',
          id=1659,
          lineno=44,
          tokens=230,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-network )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-network '
               '"${_IMPORT_PREFIX}/lib/sfml-network-s.lib" )\n'
               '\n'
               '# Import target "sfml-graphics" for configuration "Release"\n'
               'set_property(TARGET sfml-graphics APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-graphics PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics-s.lib"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-graphics )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-graphics '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics-s.lib" )\n'
               '\n'
               '# Import target "sfml-audio" for configuration "Release"\n'
               'set_property(TARGET sfml-audio APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-audio PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-audio-s.lib"\n'
               '  )\n'),
 Fragment(document_cs='804cf79f22a1bd301190c94c4c56c727f6b1a7b19123f9ce7f8ae3c8904dda8e',
          id=1660,
          lineno=64,
          tokens=61,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-audio )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-audio '
               '"${_IMPORT_PREFIX}/lib/sfml-audio-s.lib" )\n'
               '\n'
               '# Commands beyond this point should not need to know the '
               'version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION)\n'),
 Fragment(document_cs='804cf79f22a1bd301190c94c4c56c727f6b1a7b19123f9ce7f8ae3c8904dda8e',
          id=1661,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='8156245cee336111fe5ee8ab0fc5d317618446ec896f782f4e2254a04714faa3',
          id=1662,
          lineno=5,
          tokens=120,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='gcd',
          body='int gcd(int x, int y)\n'
               '{\n'
               '\tif (x == 0 || y == 0)\n'
               '\t\treturn y, x; // will input non-zero number when even one '
               'number input in zero\n'
               '\tif (x == y)\n'
               '\t\treturn x; // will return first number when both of the '
               'numbers are equal\n'
               '\tif (x > y)\n'
               '\t\treturn gcd(x - y, y); // when first number is greater than '
               'second\n'
               '\tif (y > x)\n'
               '\t\treturn gcd(x, y - x); // when second number is greater '
               'than first\n'
               '}gcd(int x, int y)'),
 Fragment(document_cs='8156245cee336111fe5ee8ab0fc5d317618446ec896f782f4e2254a04714faa3',
          id=1663,
          lineno=17,
          tokens=93,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main4',
          body='int main4()\n'
               '{\n'
               '\tcout << "\\t\\t\\t***Program to calculate the G.C.D for two '
               'integers using recursion.***" << endl;\n'
               '\tcout << "Please enter two integers: " << endl;\n'
               '\tint x, y;\n'
               '\tcin >> x >> y;\n'
               '\tcout << "The G.C.D of " << x << "and " << y << " is " << '
               'gcd(x, y); // calling function in the main function\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='8156245cee336111fe5ee8ab0fc5d317618446ec896f782f4e2254a04714faa3',
          id=1664,
          lineno=17,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main4',
          body='main4()'),
 Fragment(document_cs='8156245cee336111fe5ee8ab0fc5d317618446ec896f782f4e2254a04714faa3',
          id=1665,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='8156245cee336111fe5ee8ab0fc5d317618446ec896f782f4e2254a04714faa3',
          id=1666,
          lineno=1,
          tokens=12,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: gcd main4\n  Using: std\n'),
 Fragment(document_cs='83ca51883934612810a0137de2b13ec2c3856e38697f3ad81ee9aa6c34921a5a',
          id=1667,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_AUDIO_HPP',
          body='#define SFML_AUDIO_HPP'),
 Fragment(document_cs='83ca51883934612810a0137de2b13ec2c3856e38697f3ad81ee9aa6c34921a5a',
          id=1668,
          lineno=1,
          tokens=8,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_AUDIO_HPP\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1669,
          lineno=1,
          tokens=108,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Generated by CMake\n'
               '\n'
               'if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)\n'
               '   message(FATAL_ERROR "CMake >= 2.6.0 required")\n'
               'endif()\n'
               'cmake_policy(PUSH)\n'
               'cmake_policy(VERSION 2.6)\n'
               '#----------------------------------------------------------------\n'
               '# Generated CMake target import file.\n'
               '#----------------------------------------------------------------\n'
               '\n'
               '# Commands may need to know the format version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION 1)\n'
               '\n'
               '# Protect against multiple inclusion, which would fail when '
               'already imported targets are added once more.\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1670,
          lineno=16,
          tokens=241,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='set(_targetsDefined)\n'
               'set(_targetsNotDefined)\n'
               'set(_expectedTargets)\n'
               'foreach(_expectedTarget sfml-system sfml-main sfml-window '
               'OpenGL sfml-network sfml-graphics Freetype OpenAL Vorbis FLAC '
               'sfml-audio)\n'
               '  list(APPEND _expectedTargets ${_expectedTarget})\n'
               '  if(NOT TARGET ${_expectedTarget})\n'
               '    list(APPEND _targetsNotDefined ${_expectedTarget})\n'
               '  endif()\n'
               '  if(TARGET ${_expectedTarget})\n'
               '    list(APPEND _targetsDefined ${_expectedTarget})\n'
               '  endif()\n'
               'endforeach()\n'
               'if("${_targetsDefined}" STREQUAL "${_expectedTargets}")\n'
               '  unset(_targetsDefined)\n'
               '  unset(_targetsNotDefined)\n'
               '  unset(_expectedTargets)\n'
               '  set(CMAKE_IMPORT_FILE_VERSION)\n'
               '  cmake_policy(POP)\n'
               '  return()\n'
               'endif()\n'
               'if(NOT "${_targetsDefined}" STREQUAL "")\n'
               '  message(FATAL_ERROR "Some (but not all) targets in this '
               'export set were already defined.\\nTargets Defined: '
               '${_targetsDefined}\\nTargets not yet defined: '
               '${_targetsNotDefined}\\n")\n'
               'endif()\n'
               'unset(_targetsDefined)\n'
               'unset(_targetsNotDefined)\n'
               'unset(_expectedTargets)\n'
               '\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1671,
          lineno=43,
          tokens=226,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Compute the installation prefix relative to this file.\n'
               'get_filename_component(_IMPORT_PREFIX '
               '"${CMAKE_CURRENT_LIST_FILE}" PATH)\n'
               'get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" '
               'PATH)\n'
               'get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" '
               'PATH)\n'
               'get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" '
               'PATH)\n'
               'if(_IMPORT_PREFIX STREQUAL "/")\n'
               '  set(_IMPORT_PREFIX "")\n'
               'endif()\n'
               '\n'
               '# Create imported target sfml-system\n'
               'add_library(sfml-system SHARED IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-system PROPERTIES\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-main\n'
               'add_library(sfml-main STATIC IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-main PROPERTIES\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-window\n'
               'add_library(sfml-window SHARED IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-window PROPERTIES\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES "sfml-system"\n'
               ')\n'
               '\n'
               '# Create imported target OpenGL\n'
               'add_library(OpenGL INTERFACE IMPORTED)\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1672,
          lineno=77,
          tokens=236,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Create imported target sfml-network\n'
               'add_library(sfml-network SHARED IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-network PROPERTIES\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES "sfml-system"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-graphics\n'
               'add_library(sfml-graphics SHARED IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-graphics PROPERTIES\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES "sfml-window"\n'
               ')\n'
               '\n'
               '# Create imported target Freetype\n'
               'add_library(Freetype INTERFACE IMPORTED)\n'
               '\n'
               '# Create imported target OpenAL\n'
               'add_library(OpenAL INTERFACE IMPORTED)\n'
               '\n'
               '# Create imported target Vorbis\n'
               'add_library(Vorbis INTERFACE IMPORTED)\n'
               '\n'
               'set_target_properties(Vorbis PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "OV_EXCLUDE_STATIC_CALLBACKS"\n'
               ')\n'
               '\n'
               '# Create imported target FLAC\n'
               'add_library(FLAC INTERFACE IMPORTED)\n'
               '\n'
               'set_target_properties(FLAC PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "FLAC__NO_DLL"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-audio\n'
               'add_library(sfml-audio SHARED IMPORTED)\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1673,
          lineno=116,
          tokens=135,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'set_target_properties(sfml-audio PROPERTIES\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES "sfml-system"\n'
               ')\n'
               '\n'
               'if(CMAKE_VERSION VERSION_LESS 3.0.0)\n'
               '  message(FATAL_ERROR "This file relies on consumers using '
               'CMake 3.0.0 or greater.")\n'
               'endif()\n'
               '\n'
               '# Load information for each installed configuration.\n'
               'get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" '
               'PATH)\n'
               'file(GLOB CONFIG_FILES "${_DIR}/SFMLSharedTargets-*.cmake")\n'
               'foreach(f ${CONFIG_FILES})\n'
               '  include(${f})\n'
               'endforeach()\n'
               '\n'
               '# Cleanup temporary variables.\n'
               'set(_IMPORT_PREFIX)\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1674,
          lineno=135,
          tokens=212,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Loop over all imported files and verify that they actually '
               'exist\n'
               'foreach(target ${_IMPORT_CHECK_TARGETS} )\n'
               '  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )\n'
               '    if(NOT EXISTS "${file}" )\n'
               '      message(FATAL_ERROR "The imported target \\"${target}\\" '
               'references the file\n'
               '   \\"${file}\\"\n'
               'but this file does not exist.  Possible reasons include:\n'
               '* The file was deleted, renamed, or moved to another '
               'location.\n'
               '* An install or uninstall procedure did not complete '
               'successfully.\n'
               '* The installation package was faulty and contained\n'
               '   \\"${CMAKE_CURRENT_LIST_FILE}\\"\n'
               'but not all the files it references.\n'
               '")\n'
               '    endif()\n'
               '  endforeach()\n'
               '  unset(_IMPORT_CHECK_FILES_FOR_${target})\n'
               'endforeach()\n'
               'unset(_IMPORT_CHECK_TARGETS)\n'
               '\n'
               '# This file does not depend on other imported targets which '
               'have\n'
               '# been exported from the same project but in a separate export '
               'set.\n'
               '\n'
               '# Commands beyond this point should not need to know the '
               'version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION)\n'
               'cmake_policy(POP)\n'),
 Fragment(document_cs='85dc5d648d2d53a45882d36c96273be3eec01cdd2a458a5e4f6626ef71444f8e',
          id=1675,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='86f2d19b285830d171bda3593093336e0ea438469aa29b5a857964c585515637',
          id=1676,
          lineno=1,
          tokens=177,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - File Handling\n'
               '\n'
               '1. Create two file “one.txt” and “two.txt” which contains '
               'first 10 even numbers and first ten multiples of 5 '
               'respectively; Read the two files, find the sum of all the '
               'number of these two files and store it in the variable TOTAL. '
               'Write this value in third file named “total.txt”.\n'
               '\n'
               '2. A  file contains a  list of telephone numbers in the '
               'following form:\n'
               '    ```\n'
               '    John    23456\n'
               '    Ahmed\t9876\n'
               '    ...     ...\n'
               '    ```\n'
               '    The names contain only one word and the names and '
               'telephone numbers are separated by white spaces. Write a '
               'program to read the file and output the list in the two '
               'columns.\n'
               '\n'
               '3. Enter 20 numbers in a file named “Numbers.txt”. Ask user to '
               'enter any number and search if it exists in the file or not.\n'),
 Fragment(document_cs='86f2d19b285830d171bda3593093336e0ea438469aa29b5a857964c585515637',
          id=1677,
          lineno=1,
          tokens=8,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - File Handling\n'),
 Fragment(document_cs='8bd2249ceafb1bd7ed076f00ba2ae2c10db6defae77814a2e4fc37ff314778a7',
          id=1678,
          lineno=1,
          tokens=234,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Virtual function\n'
               '\n'
               '### Program 1\n'
               'Create a base class called shape.\n'
               '\n'
               'Use this class to store two double type values that could be '
               'used to compute the area of figures.\n'
               '\n'
               'Add to the base class, a member function:\n'
               '``` \n'
               'get_data(): to initialize base class data members.\n'
               'display_area(): to compute and display area of figures. \n'
               '```\n'
               'Make display area as a virtual function and override this '
               'function into the derived classes to suit their requirements.\n'
               '\n'
               'Derive two classes called triangle and rectangle from the base '
               'shape.\n'
               '\n'
               'Using these three classes, design a program that will accept '
               'dimension of a triangle or a rectangle interactively, and '
               'display the area.\n'
               '\n'
               '(Remember the two values given as input will be treated as '
               'length of two sides in case of rectangles, and as base and '
               'heights in the case of triangles.)\n'
               '\n'
               '### Program 1a\n'
               'Extend the above program to display area of circles. \n'
               '\n'
               'This requires addition of a new derived class ‘circle’ that '
               'computes the area of a circle. \n'
               '\n'
               'Remember, for a circle we need only one value its radius, but '
               'the get_data function in the base class requires two values to '
               'be passed.\n'),
 Fragment(document_cs='8bd2249ceafb1bd7ed076f00ba2ae2c10db6defae77814a2e4fc37ff314778a7',
          id=1679,
          lineno=1,
          tokens=19,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Virtual function\n'
               '### Program 1\n'
               '### Program 1a\n'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1680,
          lineno=41,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1681,
          lineno=62,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setRadius',
          body='setRadius(float radius)'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1682,
          lineno=72,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getRadius',
          body='getRadius() const'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1683,
          lineno=82,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPointCount',
          body='setPointCount(std::size_t count)'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1684,
          lineno=92,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPointCount',
          body='getPointCount() const'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1685,
          lineno=107,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPoint',
          body='getPoint(std::size_t index) const'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1686,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CIRCLESHAPE_HPP',
          body='#define SFML_CIRCLESHAPE_HPP'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1687,
          lineno=115,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_pointCount',
          body='std::size_t m_pointCount;'),
 Fragment(document_cs='8c5a918d303f6937c644d24098a5e74b8a54a435d2c83e2a76fc159b645aba38',
          id=1688,
          lineno=1,
          tokens=50,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_CIRCLESHAPE_HPP\n'
               '  Functions: getPoint getPointCount getRadius setPointCount '
               'setRadius\n'
               '  Variables: m_pointCount\n'
               '  Usages: size_t\n'),
 Fragment(document_cs='917fc37aedbb58b53b68be775241ae7ef3f6ee9cd1e2f0a59d7f74b0d1588333',
          id=1689,
          lineno=1,
          tokens=119,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - File Handling Operations\n'
               '\n'
               'Create a class Person with two private members name and '
               'telephone number\n'
               '\n'
               'Write a program that will create a data file containing name '
               'and telephone numbers of person. Use a class object to store '
               'each set of data. Read the file contents and display it on '
               'screen.\n'
               '- Write an interactive menu driven program that will access '
               'the file created in program no. 1 and implement the following '
               'tasks:\n'
               '- Determine the telephone number of the specified person.\n'
               '- Determine the name if telephone number is known.\n'
               '- Delete a record.\n'
               '- Add a record to a specific position.\n'),
 Fragment(document_cs='917fc37aedbb58b53b68be775241ae7ef3f6ee9cd1e2f0a59d7f74b0d1588333',
          id=1690,
          lineno=1,
          tokens=9,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - File Handling Operations\n'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1691,
          lineno=20,
          tokens=160,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='class Validation_C {\n'
               'private:\n'
               '\t// Identifires\n'
               '\tstring Name, Login, Parol, TellNum;\n'
               'public:\n'
               '\n'
               '\t// Defoult Constructor\n'
               '\tValidation_C() {\n'
               '\t\tName = "";\n'
               '\t\tLogin = "";\n'
               '\t\tParol = "";\n'
               '\t\tTellNum = "";\n'
               '\t}\n'
               '\n'
               '\t//Function display\n'
               '\tvoid Display() {\n'
               '\t\tcout << "\\t\\t\\tUser Information :" << endl << endl;\n'
               '\t\tcout << "\\t\\tUser Name  : " << Name << endl;\n'
               '\t\tcout << "\\t\\tTelephone  : " << TellNum << endl;\n'
               '\t\tcout << "\\t\\tLogin      : " << Login << endl;\n'
               '\t\tcout << "\\t\\tPassword   : " << Parol << endl;\n'
               '\t}\n'
               '\n'
               '\t// Set Info of User\n'
               '\tvoid SetUser('),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1692,
          lineno=44,
          tokens=229,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body=') {\n'
               '\t\tcout << "\\t\\t\\t\\t       Register User :" << endl << '
               'endl;\n'
               '\t\tcout << "\\t\\t\\t\\t        User Name : "; cin >> Name;\n'
               '\t\tcout << "\\t\\t\\t\\t        Telephone : "; cin >> '
               'TellNum;\n'
               '\t\tcout << "\\t\\t\\t\\t        Login     : "; cin >> Login;\n'
               '\t\tcout << "\\t\\t\\t\\t        Password  : "; cin >> Parol;\n'
               '\n'
               '\t\t// Info sended to Memory\n'
               '\t\tName_Memory = Name;\n'
               '\t\tParol_Memory = Parol;\n'
               '\t\tLogin_Memory = Login;\n'
               '\t\tTellNum_Memory = TellNum;\n'
               '\t}\n'
               '\n'
               '\t// Friend Functions\n'
               '\t//Validation Check for parol\n'
               '\tfriend void ValidationParol(Validation_C User) {\n'
               '\t\tif (User.Parol.length() >= 6 && User.Parol.length() <= 15) '
               '{\n'
               '\t\t\tfor (int i = 0; i < User.Parol.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Parol[i])) {  // Number of Upper '
               'Letters\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1693,
          lineno=66,
          tokens=225,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='\t\t\t\tif (islower(User.Parol[i])) {  // Number of Lower '
               'Letters\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Parol[i])) {  // Number of Digits \n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper >= 1 && Num_Upper <= 10 && Num_Lower >= 4 '
               '&& Num_Lower <= 10 && Num_Number >= 2 && Num_Number <= 10) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\n'
               '\t//Validation Check for Name\n'
               '\tfriend void ValidationName(Validation_C  User) {\n'
               '\t\tif (User.Name.length() >= 1 && User.Name.length() <= 15) '
               '{\n'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1694,
          lineno=85,
          tokens=241,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='\t\t\tfor (int i = 0; i < User.Name.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (Num_Upper <= 1 && Num_Lower >= 1 && Num_Lower <= 14 '
               '&& Num_Number == 0) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\n'
               '\t//Validation Check for TellNum\n'
               '\tfriend void ValidationTellNum(Validation_C User) {\n'
               '\t\tif (User.TellNum.length() >= 9 && User.TellNum.length() <= '
               '12) {\n'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1695,
          lineno=109,
          tokens=206,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Validation_C',
          body='\t\t\tfor (int i = 0; i < User.TellNum.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper == 0 && Num_Lower == 0 && Num_Number >= 9 '
               '&& Num_Number <= 12) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1696,
          lineno=23,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Name',
          body='string Name, Login, Parol, TellNum;'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1697,
          lineno=27,
          tokens=30,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Validation_C',
          body='Validation_C() {\n'
               '\t\tName = "";\n'
               '\t\tLogin = "";\n'
               '\t\tParol = "";\n'
               '\t\tTellNum = "";\n'
               '\t}Validation_C()'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1698,
          lineno=60,
          tokens=40,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationParol',
          body='ValidationParol(Validation_C User)void '
               'ValidationParol(Validation_C User) {\n'
               '\t\tif (User.Parol.length() >= 6 && User.Parol.length() <= 15) '
               '{\n'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1699,
          lineno=62,
          tokens=236,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationParol',
          body='\t\t\tfor (int i = 0; i < User.Parol.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Parol[i])) {  // Number of Upper '
               'Letters\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Parol[i])) {  // Number of Lower '
               'Letters\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Parol[i])) {  // Number of Digits \n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper >= 1 && Num_Upper <= 10 && Num_Lower >= 4 '
               '&& Num_Lower <= 10 && Num_Number >= 2 && Num_Number <= 10) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1700,
          lineno=83,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationName',
          body='ValidationName(Validation_C  User)'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1701,
          lineno=83,
          tokens=228,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationName',
          body='void ValidationName(Validation_C  User) {\n'
               '\t\tif (User.Name.length() >= 1 && User.Name.length() <= 15) '
               '{\n'
               '\t\t\tfor (int i = 0; i < User.Name.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (Num_Upper <= 1 && Num_Lower >= 1 && Num_Lower <= 14 '
               '&& Num_Number == 0) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1702,
          lineno=107,
          tokens=247,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationTellNum',
          body='void ValidationTellNum(Validation_C User) {\n'
               '\t\tif (User.TellNum.length() >= 9 && User.TellNum.length() <= '
               '12) {\n'
               '\t\t\tfor (int i = 0; i < User.TellNum.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper == 0 && Num_Lower == 0 && Num_Number >= 9 '
               '&& Num_Number <= 12) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}ValidationTellNum(Validation_C User)'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1703,
          lineno=8,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1704,
          lineno=13,
          tokens=10,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Login_Sign',
          body='string Login_Sign, Parol_Sign;'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1705,
          lineno=17,
          tokens=19,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Name_Memory',
          body='string Name_Memory, Login_Memory, Parol_Memory, '
               'TellNum_Memory;'),
 Fragment(document_cs='918687db9dd879b1b820728221493a201a96a210dd3080367934592803ff98f4',
          id=1706,
          lineno=1,
          tokens=40,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Validation_C\n'
               '  Functions: ValidationName ValidationParol ValidationTellNum '
               'Validation_C\n'
               '  Fields: Name\n'
               '  Variables: Login_Sign Name_Memory\n'
               '  Using: std\n'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1707,
          lineno=44,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1708,
          lineno=50,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1709,
          lineno=294,
          tokens=5,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='glyphs',
          body='GlyphTable       glyphs;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1710,
          lineno=295,
          tokens=4,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='texture',
          body='Texture          texture;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1711,
          lineno=296,
          tokens=6,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='nextRow',
          body='unsigned int     nextRow;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1712,
          lineno=297,
          tokens=8,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='rows',
          body='std::vector<Row> rows;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1713,
          lineno=79,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Font',
          body='Font(const Font& copy)'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1714,
          lineno=109,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& filename)'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1715,
          lineno=130,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const void* data, std::size_t sizeInBytes)'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1716,
          lineno=152,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& stream)'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1717,
          lineno=160,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getInfo',
          body='getInfo() const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1718,
          lineno=180,
          tokens=24,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getGlyph',
          body='getGlyph(Uint32 codePoint, unsigned int characterSize, bool '
               'bold, float outlineThickness = 0) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1719,
          lineno=198,
          tokens=19,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getKerning',
          body='getKerning(Uint32 first, Uint32 second, unsigned int '
               'characterSize) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1720,
          lineno=211,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLineSpacing',
          body='getLineSpacing(unsigned int characterSize) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1721,
          lineno=226,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getUnderlinePosition',
          body='getUnderlinePosition(unsigned int characterSize) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1722,
          lineno=240,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getUnderlineThickness',
          body='getUnderlineThickness(unsigned int characterSize) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1723,
          lineno=254,
          tokens=8,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getTexture',
          body='getTexture(unsigned int characterSize) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1724,
          lineno=292,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Page',
          body='Page()'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1725,
          lineno=304,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='cleanup',
          body='cleanup()'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1726,
          lineno=317,
          tokens=21,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='loadGlyph',
          body='loadGlyph(Uint32 codePoint, unsigned int characterSize, bool '
               'bold, float outlineThickness) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1727,
          lineno=329,
          tokens=16,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='findGlyphRect',
          body='findGlyphRect(Page& page, unsigned int width, unsigned int '
               'height) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1728,
          lineno=339,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setCurrentSize',
          body='setCurrentSize(unsigned int characterSize) const'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1729,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_FONT_HPP',
          body='#define SFML_FONT_HPP'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1730,
          lineno=290,
          tokens=81,
          depth=3,
          parent_id=None,
          category='struct',
          summary=False,
          name='Page',
          body='struct Page\n'
               '    {\n'
               '        Page();\n'
               '\n'
               '        GlyphTable       glyphs;  ///< Table mapping code '
               'points to their corresponding glyph\n'
               '        Texture          texture; ///< Texture containing the '
               'pixels of the glyphs\n'
               '        unsigned int     nextRow; ///< Y position of the next '
               'new row in the texture\n'
               '        std::vector<Row> rows;    ///< List containing the '
               'position of all the existing rows\n'
               '    }'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1731,
          lineno=284,
          tokens=13,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='GlyphTable',
          body='typedef std::map<Uint64, Glyph> GlyphTable;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1732,
          lineno=344,
          tokens=12,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='PageTable',
          body='typedef std::map<unsigned int, Page> PageTable;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1733,
          lineno=276,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='width',
          body='unsigned int width;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1734,
          lineno=277,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='top',
          body='unsigned int top;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1735,
          lineno=278,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='height',
          body='unsigned int height;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1736,
          lineno=354,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_info',
          body='Info                       m_info;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1737,
          lineno=355,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_pages',
          body='mutable PageTable          m_pages;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1738,
          lineno=356,
          tokens=12,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_pixelBuffer',
          body='mutable std::vector<Uint8> m_pixelBuffer;'),
 Fragment(document_cs='941e0fdd4362e8163c3f4c678b32a9c9defd4835736dee632cf8c3b80f25e1fd',
          id=1739,
          lineno=1,
          tokens=105,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream SFML_GRAPHICS_API\n'
               '  Structs: Page\n'
               '  Typedefs: GlyphTable PageTable\n'
               '  Macros: SFML_FONT_HPP\n'
               '  Functions: Font Page cleanup findGlyphRect getGlyph getInfo '
               'getKerning getLineSpacing getTexture getUnderlinePosition '
               'getUnderlineThickness loadFromFile loadFromMemory '
               'loadFromStream loadGlyph setCurrentSize\n'
               '  Fields: glyphs nextRow rows texture\n'
               '  Variables: height m_info m_pages m_pixelBuffer top width\n'
               '  Usages: string\n'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1740,
          lineno=43,
          tokens=58,
          depth=6,
          parent_id=None,
          category='enum',
          summary=False,
          name='Attribute',
          body='enum Attribute\n'
               '    {\n'
               '        Default = 0,      ///< Non-debug, compatibility '
               'context (this and the core attribute are mutually exclusive)\n'
               '        Core    = 1 << 0, ///< Core attribute\n'
               '        Debug   = 1 << 2  ///< Debug attribute\n'
               '    }'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1741,
          lineno=76,
          tokens=5,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='depthBits',
          body='unsigned int depthBits;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1742,
          lineno=77,
          tokens=5,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='stencilBits',
          body='unsigned int stencilBits;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1743,
          lineno=78,
          tokens=7,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='antialiasingLevel',
          body='unsigned int antialiasingLevel;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1744,
          lineno=79,
          tokens=5,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='majorVersion',
          body='unsigned int majorVersion;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1745,
          lineno=80,
          tokens=5,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='minorVersion',
          body='unsigned int minorVersion;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1746,
          lineno=81,
          tokens=6,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='attributeFlags',
          body='Uint32       attributeFlags;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1747,
          lineno=82,
          tokens=7,
          depth=5,
          parent_id=None,
          category='field',
          summary=False,
          name='sRgbCapable',
          body='bool         sRgbCapable;'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1748,
          lineno=62,
          tokens=164,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='ContextSettings',
          body='ContextSettings(unsigned int depth = 0, unsigned int stencil = '
               '0, unsigned int antialiasing = 0, unsigned int major = 1, '
               'unsigned int minor = 1, unsigned int attributes = Default, '
               'bool sRgb = false)explicit ContextSettings(unsigned int depth '
               '= 0, unsigned int stencil = 0, unsigned int antialiasing = 0, '
               'unsigned int major = 1, unsigned int minor = 1, unsigned int '
               'attributes = Default, bool sRgb = false) :\n'
               '    depthBits        (depth),\n'
               '    stencilBits      (stencil),\n'
               '    antialiasingLevel(antialiasing),\n'
               '    majorVersion     (major),\n'
               '    minorVersion     (minor),\n'
               '    attributeFlags   (attributes),\n'
               '    sRgbCapable      (sRgb)\n'
               '    {\n'
               '    }'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1749,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CONTEXTSETTINGS_HPP',
          body='#define SFML_CONTEXTSETTINGS_HPP'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1750,
          lineno=37,
          tokens=231,
          depth=3,
          parent_id=None,
          category='struct',
          summary=False,
          name='ContextSettings',
          body='struct ContextSettings\n'
               '{\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Enumeration of the context attribute flags\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    enum Attribute\n'
               '    {\n'
               '        Default = 0,      ///< Non-debug, compatibility '
               'context (this and the core attribute are mutually exclusive)\n'
               '        Core    = 1 << 0, ///< Core attribute\n'
               '        Debug   = 1 << 2  ///< Debug attribute\n'
               '    };\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// \\param depth        Depth buffer bits\n'
               '    /// \\param stencil      Stencil buffer bits\n'
               '    /// \\param antialiasing Antialiasing level\n'
               '    /// \\param major        Major number of the context '
               'version\n'
               '    /// \\param minor        Minor number of the context '
               'version\n'
               '    /// \\param attributes   Attribute flags of the context\n'
               '    /// \\param sRgb         sRGB capable framebuffer\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    explicit ContextSettings(unsigned int depth = 0, unsigned '
               'int stencil = 0, unsigned int antialiasing = 0, unsigned int '
               'major = 1, unsigned int minor = 1, unsigned int '),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1751,
          lineno=62,
          tokens=199,
          depth=3,
          parent_id=None,
          category='struct',
          summary=False,
          name='ContextSettings',
          body='attributes = Default, bool sRgb = false) :\n'
               '    depthBits        (depth),\n'
               '    stencilBits      (stencil),\n'
               '    antialiasingLevel(antialiasing),\n'
               '    majorVersion     (major),\n'
               '    minorVersion     (minor),\n'
               '    attributeFlags   (attributes),\n'
               '    sRgbCapable      (sRgb)\n'
               '    {\n'
               '    }\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    // Member data\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    unsigned int depthBits;         ///< Bits of the depth '
               'buffer\n'
               '    unsigned int stencilBits;       ///< Bits of the stencil '
               'buffer\n'
               '    unsigned int antialiasingLevel; ///< Level of '
               'antialiasing\n'
               '    unsigned int majorVersion;      ///< Major number of the '
               'context version to create\n'
               '    unsigned int minorVersion;      ///< Minor number of the '
               'context version to create\n'
               '    Uint32       attributeFlags;    ///< The attribute flags '
               'to create the context with\n'
               '    bool         sRgbCapable;       ///< Whether the context '
               'framebuffer is sRGB capable\n'
               '}'),
 Fragment(document_cs='96c1259c74ca746ea3faddae0772c97afdd548cb2ce7d5782d494db324d4a3ea',
          id=1752,
          lineno=1,
          tokens=49,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Structs: ContextSettings\n'
               '  Enums: Attribute\n'
               '  Macros: SFML_CONTEXTSETTINGS_HPP\n'
               '  Functions: ContextSettings\n'
               '  Fields: antialiasingLevel attributeFlags depthBits '
               'majorVersion minorVersion sRgbCapable stencilBits\n'),
 Fragment(document_cs='96d806015342664d65b70d73c5ba223c5ed74d2be8ac67fae5b388e2e4299d73',
          id=1753,
          lineno=6,
          tokens=60,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='gotoXY',
          body='gotoXY(int x, int y)void gotoXY(int x, int y) {\n'
               "\t//'COORD' is a built in function for positioning the "
               'objects\n'
               '\tCOORD d;\n'
               '\td.X = x;\n'
               '\td.Y = y;\n'
               '\tSetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), '
               'd);\n'
               '}'),
 Fragment(document_cs='96d806015342664d65b70d73c5ba223c5ed74d2be8ac67fae5b388e2e4299d73',
          id=1754,
          lineno=14,
          tokens=193,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Loading',
          body='F_Loading()void F_Loading() {\n'
               '\tcout << "\\n\\n\\n\\n\\n\\n";\n'
               '\tcout << "\\t\\t\\t       '
               '-------------------------------------  \\n";\n'
               '\tcout << "\\t\\t\\t         E I G H T S O F T  A C A D E M '
               'Y      \\n";\n'
               '\tcout << "\\t\\t\\t       '
               '-------------------------------------  \\n";\n'
               '\tcout << "\\t\\t\\t                   A L I B A Z A '
               'R             \\n";\n'
               '\tcout << "\\t\\t\\t       '
               '_____________________________________  \\n";\n'
               '\n'
               '\tchar a = 219;\n'
               '\tgotoXY(45, 14);\n'
               '\n'
               '\tcout << "LOADING... " << endl;\n'
               '\n'
               '\tgotoXY(37, 16);\n'
               '\tfor (int r = 1; r <= 26; r++)\n'
               '\t{\n'
               '\t\t//for speed\n'
               '\t\tfor (int speed = 0; speed <= 30000000; speed++);\n'
               '\t\tcout << a;\n'
               '\t}\n'
               '\tcout << endl;\n'
               '}'),
 Fragment(document_cs='96d806015342664d65b70d73c5ba223c5ed74d2be8ac67fae5b388e2e4299d73',
          id=1755,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Loading gotoXY\n'),
 Fragment(document_cs='9a910cb1432db15749a3cf83f475507fdf4c9fc58a2f646b9180f4a8ca173bdd',
          id=1756,
          lineno=1,
          tokens=167,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Arrays\n'
               '\n'
               '1. Write a program to generate Pascal’s triangle.\n'
               '    ```\n'
               '            1\n'
               '           1 1\n'
               '          1 2 1\n'
               '         1 3 3 1\n'
               '        1 4 6 4 1\n'
               '      1 5 10 10 5 1\n'
               '    1 6 15 20 15 6 1\n'
               '    ```\n'
               '2. Write a menu driven program to read and display an m × n '
               'matrix. Also find the sum, transpose and product of two m × n '
               'matrices.\n'
               '3. In a small company there are five salesman. Each salesman '
               'is supposed to sell three products. Write a program using 2D '
               'array to print the total sales by each salesman and total '
               'sales of each item.'),
 Fragment(document_cs='9a910cb1432db15749a3cf83f475507fdf4c9fc58a2f646b9180f4a8ca173bdd',
          id=1757,
          lineno=1,
          tokens=7,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Arrays\n'),
 Fragment(document_cs='9b34579ffef327a4a93e1d4f92231e7475f1c475e7bef4190909ae1a6a5bae1d',
          id=1758,
          lineno=7,
          tokens=113,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main4',
          body='int main4() {\n'
               '\tint num, j = 0;\n'
               '\tcout << "Enter the number: ";\n'
               '\tcin >> num;\n'
               '\tfor (int i = 1; i <= num; i++)\n'
               '\t{\n'
               '\t\tif ((num % i) == 0)\n'
               '\t\t{\n'
               '\t\t\tj++;\n'
               '\t\t}\n'
               '\t}\n'
               '\tif (j == 2)\n'
               '\t\tcout << num << " is a prime number." << endl;\n'
               '\telse\n'
               '\t\tcout << num << " is not a prime number." << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main4()'),
 Fragment(document_cs='9b34579ffef327a4a93e1d4f92231e7475f1c475e7bef4190909ae1a6a5bae1d',
          id=1759,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='9b34579ffef327a4a93e1d4f92231e7475f1c475e7bef4190909ae1a6a5bae1d',
          id=1760,
          lineno=8,
          tokens=8,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='num',
          body='int num, j = 0;'),
 Fragment(document_cs='9b34579ffef327a4a93e1d4f92231e7475f1c475e7bef4190909ae1a6a5bae1d',
          id=1761,
          lineno=1,
          tokens=16,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main4\n  Variables: num\n  Using: std\n'),
 Fragment(document_cs='9c73e1f32d4e16957dcf38bafde571c3cb4ce29950e5330e27f3f4e4319d1e4c',
          id=1762,
          lineno=4,
          tokens=100,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tfloat a, b;\n'
               '\tcout << "Enter first number: ";\n'
               '\tcin >> a;\n'
               '\tcout << "Enter second number: ";\n'
               '\tcin >> b;\n'
               '\ta = a + b;\n'
               '\tb = a - b;\n'
               '\ta = a - b;\n'
               '\tcout << "We have swapped your numbers, result in below." << '
               'endl;\n'
               '\tcout << "a = " << a << endl;\n'
               '\tcout << "b = " << b << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='9c73e1f32d4e16957dcf38bafde571c3cb4ce29950e5330e27f3f4e4319d1e4c',
          id=1763,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='9c73e1f32d4e16957dcf38bafde571c3cb4ce29950e5330e27f3f4e4319d1e4c',
          id=1764,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1765,
          lineno=41,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='IpAddress',
          body='class IpAddress'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1766,
          lineno=47,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1767,
          lineno=66,
          tokens=5,
          depth=6,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1768,
          lineno=188,
          tokens=10,
          depth=6,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_APIclass SFML_NETWORK_API'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1769,
          lineno=529,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='DataChannel',
          body='class DataChannel'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1770,
          lineno=146,
          tokens=15,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='Response',
          body='Response(Status code = InvalidResponse, const std::string& '
               'message = "")'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1771,
          lineno=157,
          tokens=3,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='isOk',
          body='isOk() const'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1772,
          lineno=165,
          tokens=3,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='getStatus',
          body='getStatus() const'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1773,
          lineno=173,
          tokens=3,
          depth=9,
          parent_id=None,
          category='function',
          summary=False,
          name='getMessage',
          body='getMessage() const'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1774,
          lineno=206,
          tokens=4,
          depth=9,
          parent_id=None,
          category='function',
          summary=False,
          name='getDirectory',
          body='getDirectory() const'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1775,
          lineno=240,
          tokens=4,
          depth=9,
          parent_id=None,
          category='function',
          summary=False,
          name='getListing',
          body='getListing() const'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1776,
          lineno=281,
          tokens=21,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='connect',
          body='connect(const IpAddress& server, unsigned short port = 21, '
               'Time timeout = Time::Zero)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1777,
          lineno=291,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='disconnect',
          body='disconnect()'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1778,
          lineno=302,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='login',
          body='login()'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1779,
          lineno=316,
          tokens=15,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='login',
          body='login(const std::string& name, const std::string& password)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1780,
          lineno=327,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='keepAlive',
          body='keepAlive()'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1781,
          lineno=340,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getWorkingDirectory',
          body='getWorkingDirectory()'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1782,
          lineno=357,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDirectoryListing',
          body='getDirectoryListing(const std::string& directory = "")'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1783,
          lineno=371,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='changeDirectory',
          body='changeDirectory(const std::string& directory)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1784,
          lineno=381,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='parentDirectory',
          body='parentDirectory()'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1785,
          lineno=396,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='createDirectory',
          body='createDirectory(const std::string& name)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1786,
          lineno=413,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='deleteDirectory',
          body='deleteDirectory(const std::string& name)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1787,
          lineno=429,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='renameFile',
          body='renameFile(const std::string& file, const std::string& '
               'newName)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1788,
          lineno=446,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='deleteFile',
          body='deleteFile(const std::string& name)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1789,
          lineno=468,
          tokens=23,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='download',
          body='download(const std::string& remoteFile, const std::string& '
               'localPath, TransferMode mode = Binary)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1790,
          lineno=491,
          tokens=28,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='upload',
          body='upload(const std::string& localFile, const std::string& '
               'remotePath, TransferMode mode = Binary, bool append = false)'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1791,
          lineno=509,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='sendCommand',
          body='sendCommand(const std::string& command, const std::string& '
               'parameter = "")'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1792,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_FTP_HPP',
          body='#define SFML_FTP_HPP'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1793,
          lineno=181,
          tokens=6,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_message',
          body='std::string m_message;'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1794,
          lineno=531,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='DataChannel',
          body='friend class DataChannel;'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1795,
          lineno=536,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_commandSocket',
          body='TcpSocket   m_commandSocket;'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1796,
          lineno=537,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_receiveBuffer',
          body='std::string m_receiveBuffer;'),
 Fragment(document_cs='9ef606e10ee331b7a4021eefd413d0891b743d16c6bc59948551d7dea7c152f9',
          id=1797,
          lineno=1,
          tokens=85,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: DataChannel IpAddress SFML_NETWORK_API\n'
               '  Macros: SFML_FTP_HPP\n'
               '  Functions: Response changeDirectory connect createDirectory '
               'deleteDirectory deleteFile disconnect download getDirectory '
               'getDirectoryListing getListing getMessage getStatus '
               'getWorkingDirectory isOk keepAlive login parentDirectory '
               'renameFile sendCommand upload\n'
               '  Variables: DataChannel m_commandSocket m_message '
               'm_receiveBuffer\n'
               '  Usages: Zero m_directory string vector\n'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1798,
          lineno=40,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1799,
          lineno=60,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='asSeconds',
          body='asSeconds() const'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1800,
          lineno=70,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='asMilliseconds',
          body='asMilliseconds() const'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1801,
          lineno=80,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='asMicroseconds',
          body='asMicroseconds() const'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1802,
          lineno=90,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='milliseconds',
          body='milliseconds(Int32)'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1803,
          lineno=91,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='microseconds',
          body='microseconds(Int64)'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1804,
          lineno=102,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Time',
          body='Time(Int64 microseconds)'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1805,
          lineno=123,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='seconds',
          body='seconds(float amount)'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1806,
          lineno=136,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='milliseconds',
          body='milliseconds(Int32 amount)'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1807,
          lineno=149,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='microseconds',
          body='microseconds(Int64 amount)'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1808,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TIME_HPP',
          body='#define SFML_TIME_HPP'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1809,
          lineno=85,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Zero',
          body='static const Time Zero;'),
 Fragment(document_cs='9f64578e480a83a80818ccc67c17b77f02051791387297c38b41b109731bcae5',
          id=1810,
          lineno=1,
          tokens=36,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n'
               '  Macros: SFML_TIME_HPP\n'
               '  Functions: Time asMicroseconds asMilliseconds asSeconds '
               'microseconds milliseconds seconds\n'
               '  Variables: Zero\n'),
 Fragment(document_cs='a250d0062f8d49e0f37b259c71a55131b8974dfe849bf66899ce39b576af23e2',
          id=1811,
          lineno=41,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='a250d0062f8d49e0f37b259c71a55131b8974dfe849bf66899ce39b576af23e2',
          id=1812,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_GLYPH_HPP',
          body='#define SFML_GLYPH_HPP'),
 Fragment(document_cs='a250d0062f8d49e0f37b259c71a55131b8974dfe849bf66899ce39b576af23e2',
          id=1813,
          lineno=54,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='advance',
          body='float     advance;'),
 Fragment(document_cs='a250d0062f8d49e0f37b259c71a55131b8974dfe849bf66899ce39b576af23e2',
          id=1814,
          lineno=55,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='bounds',
          body='FloatRect bounds;'),
 Fragment(document_cs='a250d0062f8d49e0f37b259c71a55131b8974dfe849bf66899ce39b576af23e2',
          id=1815,
          lineno=56,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='textureRect',
          body='IntRect   textureRect;'),
 Fragment(document_cs='a250d0062f8d49e0f37b259c71a55131b8974dfe849bf66899ce39b576af23e2',
          id=1816,
          lineno=1,
          tokens=27,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_GLYPH_HPP\n'
               '  Variables: advance bounds textureRect\n'),
 Fragment(document_cs='a31d5eb5670caaf79bb83f90a7ee89972433c4ce5e35c895a2977ca7f1664bbf',
          id=1817,
          lineno=9,
          tokens=109,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\tC++ program to Calculate Area of Scalene '
               'Triangle.\\n";\n'
               '\tfloat a, b, c, S, Area;\n'
               '\tcout << "Please enter the values for the first side of '
               'Triangle: ";\n'
               '\tcin >> a;\n'
               '\tcout << "Please enter the values for the second side of '
               'Triangle: ";\n'
               '\tcin >> b;\n'
               '\tcout << "Please enter the values for the third side of '
               'Triangle: ";\n'
               '\tcin >> c;\n'
               '\tif (a > 0 && b > 0 && c > 0)\n'
               '\t{\n'),
 Fragment(document_cs='a31d5eb5670caaf79bb83f90a7ee89972433c4ce5e35c895a2977ca7f1664bbf',
          id=1818,
          lineno=9,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='a31d5eb5670caaf79bb83f90a7ee89972433c4ce5e35c895a2977ca7f1664bbf',
          id=1819,
          lineno=21,
          tokens=147,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\tif (c < a + b && a < b + c && b < a + c)\n'
               '\t\t{\n'
               '\t\t\tS = (a + b + c) / 2;\n'
               '\t\t\tArea = sqrt(S * (S - a) * (S - b) * (S - c));\n'
               '\t\t\tcout << "The Area of Triangle is " << Area << endl;\n'
               '\t\t\treturn 0;\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "This triangle is wrong try another values." << '
               'endl;\n'
               '\t\t\treturn 0;\n'
               '\t\t}\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "The sides of Triangle cannot be negative '
               'numbers!" << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='a31d5eb5670caaf79bb83f90a7ee89972433c4ce5e35c895a2977ca7f1664bbf',
          id=1820,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='a31d5eb5670caaf79bb83f90a7ee89972433c4ce5e35c895a2977ca7f1664bbf',
          id=1821,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='a37af648f879cc8c606a05f711169b0ac0f9d742216ff50e2baba4643805d90f',
          id=1822,
          lineno=1,
          tokens=157,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Control Structure - Nested Loop\n'
               '\n'
               '1. Program to print stars Sequence1.\n'
               '    ```\n'
               '    *\n'
               '    **\n'
               '    ***\n'
               '    ****\n'
               '    *****\n'
               '    ```\n'
               '2. Program to print stars Sequence2.\n'
               '    ```\n'
               '        *\n'
               '       ** \n'
               '      ***\n'
               '     ****\n'
               '    *****\n'
               '    ```\n'
               '3. Program to print star Sequences3.\n'
               '    ```\n'
               '      *\n'
               '     ***\n'
               '    *****\n'
               '    ```\n'
               '4. Program to print Sequence4.\n'
               '    ```\n'
               '    *\n'
               '    **\n'
               '    ***\n'
               '    ****\n'
               '    *****\n'
               '    *****\n'
               '    ****\n'
               '    ***\n'
               '    **\n'
               '    *\n'
               '    ```\n'
               '5. Write a program to add first seven terms of the following '
               'series using for loop: `1/!1+ 2/!2 + 3/!3 + ...`'),
 Fragment(document_cs='a37af648f879cc8c606a05f711169b0ac0f9d742216ff50e2baba4643805d90f',
          id=1823,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Control Structure - Nested Loop\n'),
 Fragment(document_cs='a5a6fb5ee8d13d2e46b1adf20017658f9603b3dc5b69b78acf8ebdf57d7318ac',
          id=1824,
          lineno=7,
          tokens=83,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main3',
          body='main3()int main3() {\n'
               '\tint a, sum = 0;\n'
               '\tcout << "Please enter the number: ";\n'
               '\tcin >> a;\n'
               '\twhile (a != 0) {\n'
               '\t\tsum = sum + a % 10;\n'
               '\t\ta = a / 10;\n'
               '\t}\n'
               '\tcout <<"The sum of digits of given number is "<< sum <<";"<< '
               'endl;\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='a5a6fb5ee8d13d2e46b1adf20017658f9603b3dc5b69b78acf8ebdf57d7318ac',
          id=1825,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='a5a6fb5ee8d13d2e46b1adf20017658f9603b3dc5b69b78acf8ebdf57d7318ac',
          id=1826,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main3\n  Using: std\n'),
 Fragment(document_cs='a618969ce370aa8724e46d514be6eb7c3d5346df77e163c8c4cf7073c0a38534',
          id=1827,
          lineno=9,
          tokens=86,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main2',
          body='main2()int main2()\n'
               '{\n'
               '\tint a, b;\n'
               '\tcout << "Enter two numbers: ";\n'
               '\tcin >> a >> b;\n'
               '\tswap(a, b);\t\t\t\t\t\t // C++ function to swap two numbers\n'
               '\tcout << a << " & " << b << endl; // swap is the function '
               'which is contained in c++ ==>\n'
               '\t\t\t\t\t\t\t\t\t //==> there is no need to open new function '
               'to swap\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='a618969ce370aa8724e46d514be6eb7c3d5346df77e163c8c4cf7073c0a38534',
          id=1828,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='a618969ce370aa8724e46d514be6eb7c3d5346df77e163c8c4cf7073c0a38534',
          id=1829,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main2\n  Using: std\n'),
 Fragment(document_cs='a73ac43b53c0127c33b013603bbd9f1ee683e14b1f785cbecb705161d5c9bf53',
          id=1830,
          lineno=41,
          tokens=172,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='ThreadLocalPtr',
          body='class ThreadLocalPtr : private ThreadLocal\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// \\param value Optional value to initialize the '
               'variable\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    ThreadLocalPtr(T* value = NULL);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Overload of unary operator *\n'
               '    ///\n'
               '    /// Like raw pointers, applying the * operator returns a\n'
               '    /// reference to the pointed-to object.\n'
               '    ///\n'
               '    /// \\return Reference to the thread-local variable\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    T& operator *() const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Overload of operator ->\n'
               '    ///\n'
               '    /// Similarly to raw pointers, applying the -> operator\n'
               '    /// returns the pointed-to object.\n'
               '    ///\n'
               '    /// \\return Pointer to the thread-local variable\n'
               '    ///\n'
               '    '
               '///////////////////////////////////////////////////////////'),
 Fragment(document_cs='a73ac43b53c0127c33b013603bbd9f1ee683e14b1f785cbecb705161d5c9bf53',
          id=1831,
          lineno=72,
          tokens=179,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='ThreadLocalPtr',
          body='/\n'
               '    T* operator ->() const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Conversion operator to implicitly convert the\n'
               '    ///        pointer to its raw pointer type (T*)\n'
               '    ///\n'
               '    /// \\return Pointer to the actual object\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    operator T*() const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Assignment operator for a raw pointer '
               'parameter\n'
               '    ///\n'
               '    /// \\param value Pointer to assign\n'
               '    ///\n'
               '    /// \\return Reference to self\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    ThreadLocalPtr<T>& operator =(T* value);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Assignment operator for a ThreadLocalPtr '
               'parameter\n'
               '    ///\n'
               '    /// \\param right ThreadLocalPtr to assign\n'
               '    ///\n'
               '    /// \\return Reference to self\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    ThreadLocalPtr<T>& operator =(const ThreadLocalPtr<T>& '
               'right);\n'
               '}'),
 Fragment(document_cs='a73ac43b53c0127c33b013603bbd9f1ee683e14b1f785cbecb705161d5c9bf53',
          id=1832,
          lineno=51,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='ThreadLocalPtr',
          body='ThreadLocalPtr(T* value = NULL)'),
 Fragment(document_cs='a73ac43b53c0127c33b013603bbd9f1ee683e14b1f785cbecb705161d5c9bf53',
          id=1833,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_THREADLOCALPTR_HPP',
          body='#define SFML_THREADLOCALPTR_HPP'),
 Fragment(document_cs='a73ac43b53c0127c33b013603bbd9f1ee683e14b1f785cbecb705161d5c9bf53',
          id=1834,
          lineno=1,
          tokens=24,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: ThreadLocalPtr\n'
               '  Macros: SFML_THREADLOCALPTR_HPP\n'
               '  Functions: ThreadLocalPtr\n'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1835,
          lineno=42,
          tokens=202,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Rect',
          body='class Rect\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// Creates an empty rectangle (it is equivalent to '
               'calling\n'
               '    /// Rect(0, 0, 0, 0)).\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Rect();\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the rectangle from its coordinates\n'
               '    ///\n'
               '    /// Be careful, the last two parameters are the width\n'
               '    /// and height, not the right and bottom coordinates!\n'
               '    ///\n'
               '    /// \\param rectLeft   Left coordinate of the rectangle\n'
               '    /// \\param rectTop    Top coordinate of the rectangle\n'
               '    /// \\param rectWidth  Width of the rectangle\n'
               '    /// \\param rectHeight Height of the rectangle\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Rect(T rectLeft, T rectTop, T rectWidth, T rectHeight);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the rectangle from position and '
               'size\n'
               '    ///\n'
               '    /// Be careful, the last parameter is the size'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1836,
          lineno=72,
          tokens=203,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Rect',
          body=',\n'
               '    /// not the bottom-right corner!\n'
               '    ///\n'
               '    /// \\param position Position of the top-left corner of '
               'the rectangle\n'
               '    /// \\param size     Size of the rectangle\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Rect(const Vector2<T>& position, const Vector2<T>& size);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the rectangle from another type of '
               'rectangle\n'
               '    ///\n'
               "    /// This constructor doesn't replace the copy "
               'constructor,\n'
               "    /// it's called only when U != T.\n"
               '    /// A call to this constructor will fail to compile if U\n'
               '    /// is not convertible to T.\n'
               '    ///\n'
               '    /// \\param rectangle Rectangle to convert\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    template <typename U>\n'
               '    explicit Rect(const Rect<U>& rectangle);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               "    /// \\brief Check if a point is inside the rectangle's "
               'area\n'
               '    ///\n'
               '    /// This check is non-inclusive. If the point lies on the\n'
               '    /// edge of the rectangle, this function will return false'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1837,
          lineno=99,
          tokens=214,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Rect',
          body='.\n'
               '    ///\n'
               '    /// \\param x X coordinate of the point to test\n'
               '    /// \\param y Y coordinate of the point to test\n'
               '    ///\n'
               '    /// \\return True if the point is inside, false otherwise\n'
               '    ///\n'
               '    /// \\see intersects\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    bool contains(T x, T y) const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               "    /// \\brief Check if a point is inside the rectangle's "
               'area\n'
               '    ///\n'
               '    /// This check is non-inclusive. If the point lies on the\n'
               '    /// edge of the rectangle, this function will return '
               'false.\n'
               '    ///\n'
               '    /// \\param point Point to test\n'
               '    ///\n'
               '    /// \\return True if the point is inside, false otherwise\n'
               '    ///\n'
               '    /// \\see intersects\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    bool contains(const Vector2<T>& point) const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Check the intersection between two rectangles\n'
               '    ///\n'
               '    /// \\param rectangle Rectangle to test\n'
               '    ///\n'
               '    /// \\return True if rectangles overlap, false otherwise\n'
               '  '),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1838,
          lineno=132,
          tokens=189,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Rect',
          body='  ///\n'
               '    /// \\see contains\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    bool intersects(const Rect<T>& rectangle) const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Check the intersection between two rectangles\n'
               '    ///\n'
               '    /// This overload returns the overlapped rectangle in the\n'
               '    /// \\a intersection parameter.\n'
               '    ///\n'
               '    /// \\param rectangle    Rectangle to test\n'
               '    /// \\param intersection Rectangle to be filled with the '
               'intersection\n'
               '    ///\n'
               '    /// \\return True if rectangles overlap, false otherwise\n'
               '    ///\n'
               '    /// \\see contains\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    bool intersects(const Rect<T>& rectangle, Rect<T>& '
               'intersection) const;\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    // Member data\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    T left;   ///< Left coordinate of the rectangle\n'
               '    T top;    ///< Top coordinate of the rectangle\n'
               '    T width;  ///< Width of the rectangle\n'
               '    T height; ///< Height of the rectangle\n'
               '}'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1839,
          lineno=157,
          tokens=3,
          depth=6,
          parent_id=None,
          category='field',
          summary=False,
          name='left',
          body='T left;'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1840,
          lineno=158,
          tokens=3,
          depth=6,
          parent_id=None,
          category='field',
          summary=False,
          name='top',
          body='T top;'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1841,
          lineno=159,
          tokens=3,
          depth=6,
          parent_id=None,
          category='field',
          summary=False,
          name='width',
          body='T width;'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1842,
          lineno=160,
          tokens=3,
          depth=6,
          parent_id=None,
          category='field',
          summary=False,
          name='height',
          body='T height;'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1843,
          lineno=53,
          tokens=17,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Rect',
          body='Rect()Rect(const Vector2<T>& position, const Vector2<T>& size)'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1844,
          lineno=67,
          tokens=24,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Rect',
          body='Rect(T rectLeft, T rectTop, T rectWidth, T '
               'rectHeight)Rect(const Rect<U>& rectangle)'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1845,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_RECT_HPP',
          body='#define SFML_RECT_HPP'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1846,
          lineno=196,
          tokens=8,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='IntRect',
          body='typedef Rect<int>   IntRect;'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1847,
          lineno=197,
          tokens=7,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='FloatRect',
          body='typedef Rect<float> FloatRect;'),
 Fragment(document_cs='a99ae9f580d0f7d6995cf7a47dca5c515cf8a97e18c336630a3449cb844eb5a4',
          id=1848,
          lineno=1,
          tokens=36,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Rect\n'
               '  Typedefs: FloatRect IntRect\n'
               '  Macros: SFML_RECT_HPP\n'
               '  Functions: Rect\n'
               '  Fields: height left top width\n'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1849,
          lineno=14,
          tokens=237,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()int main()\n'
               '{\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "M A I N  M E N U\\n"\n'
               '\t\t\t << "-------------------\\n"\n'
               '\t\t\t << "1. First Program\\n"\n'
               '\t\t\t << "2. Second Program\\n"\n'
               '\t\t\t << "3. Third Program\\n"\n'
               '\t\t\t << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\tcase 49:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_First_Program();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tcase 50:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Second_Program();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tcase 51:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Third_Program();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tcase 48:\n'
               '\t\t\treturn 0;\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "Your choice is not available in Menu.\\nPlease '
               'try one more time\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1850,
          lineno=16,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='F_First_Program()'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1851,
          lineno=16,
          tokens=212,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='void F_First_Program()\n'
               '{\n'
               '\n'
               '\t// creating a text file one.txt\n'
               '\tofstream out_one;\n'
               '\tout_one.open("one.txt");\n'
               '\tfor (int i = 2; i <= 2 * 10; i = i + 2)\n'
               '\t{\n'
               '\t\tout_one << i << endl; // writing to file first ten even '
               'numbers\n'
               '\t}\n'
               '\tout_one.close(); // closing the file\n'
               '\n'
               '\t// creating a text file one.txt\n'
               '\tofstream out_two;\n'
               '\tout_two.open("two.txt");\n'
               '\tfor (int i = 5; i <= 5 * 10; i = i + 5)\n'
               '\t{\n'
               '\t\tout_two << i << endl; // writing to file first ten '
               'multiples of five\n'
               '\t}\n'
               '\tout_two.close(); // closing the file\n'
               '\n'
               '\t// calculting the sum\n'
               '\tifstream in_one;\n'
               '\tifstream in_two;\n'
               '\tin_one.open("one.txt"); // opening files\n'
               '\tin_two.open("two.txt");\n'
               '\n'
               '\tint total = 0;\n'
               '\tint num1 = 0;\n'
               '\tint num2 = 0;\n'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1852,
          lineno=46,
          tokens=163,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='\n'
               '\twhile (in_one && in_two)\n'
               '\t{\n'
               '\t\ttotal += num1 + num2; // calculating the total\n'
               '\t\tin_one >> num1;\n'
               '\t\tin_two >> num2;\n'
               '\t}\n'
               '\tin_one.close(); // closing the files\n'
               '\tin_two.close();\n'
               '\n'
               '\t'
               '///////////////////////////////////////////////////////////////////\n'
               '\t// creating a file total for storingthe total sum of '
               'numbers\n'
               '\tofstream out_total("total.txt");\n'
               '\tout_total << total << endl;\n'
               '\tout_total.close();\n'
               '\n'
               '\t// reading the file and outputing it on the screen\n'
               '\tifstream in_total;\n'
               '\tin_total.open("total.txt");\n'
               '\n'
               '\tcout << "All three Files are created!\\n";\n'
               '\n'
               '\tin_total >> total;\n'
               '\tcout << "TOTAL: " << total << "\\n\\n"; // displaying the '
               'total in console\n'
               '\n'
               '\tin_total.close(); // closing the file after executing\n'
               '}'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1853,
          lineno=74,
          tokens=163,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='F_Second_Program()void F_Second_Program()\n'
               '{\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "C O N T A C T S\\n"\n'
               '\t\t\t << "------------------\\n"\n'
               '\t\t\t << "1. Add a contact\\n"\n'
               '\t\t\t << "2. Contacts\\n"\n'
               '\t\t\t << "0. Back\\n"\n'
               '\t\t\t << "Your choice: \\n";\n'
               '\n'
               '\t\tofstream out_contacts("contacts.txt", ios::app);\n'
               '\n'
               '\t\tstring name, phone;\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\t// case 49 is for adding a new contact into a list\n'
               '\t\tcase 49:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "Adding a new contact. Input a conta'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1854,
          lineno=97,
          tokens=126,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='ct info:\\n\\n";\n'
               '\n'
               '\t\t\tcout << "Enter the name: ";\n'
               '\t\t\tcin >> name;\n'
               '\t\t\tcout << "Enter the phone number: ";\n'
               '\t\t\tcin >> phone;\n'
               '\n'
               '\t\t\t// storing the data in file\n'
               '\t\t\tout_contacts << left << setw(12) << name << "\\t" << '
               'phone << "\\n";\n'
               '\t\t\tout_contacts.close(); // closing the file\n'
               '\n'
               '\t\t\tcout << "Successfully added!\\n\\n";\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tcase 50:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tifstream in_contacts("contacts.txt"); // getting data '
               'from the file\n'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1855,
          lineno=118,
          tokens=139,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts >> name >> phone)\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tcout << left << setw(12) << name << "\\t" << phone << '
               'endl;\n'
               '\t\t\t}\n'
               '\t\t\tin_contacts.close(); // closing the file\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tcase 48:\n'
               '\t\t{\n'
               '\t\t\tmain(); // to back to main menu\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << "Your choice is not available in Menu.\\nPlease '
               'try one more time\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1856,
          lineno=144,
          tokens=173,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Third_Program',
          body='void F_Third_Program()\n'
               '{\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "S E A R C H I N G  F O R  N U M B E R \\n"\n'
               '\t\t\t << "------------------------------------\\n"\n'
               '\t\t\t << "1. Add numbers\\n"\n'
               '\t\t\t << "2. Search for number\\n"\n'
               '\t\t\t << "0. Back\\n"\n'
               '\t\t\t << "Your choice: \\n";\n'
               '\n'
               '\t\tofstream out_numbers("numbers.txt", ios::app); // the list '
               'could be contiunied after the program execution\n'
               '\n'
               '\t\tint numbers;\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\tcase 49:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "ENYER NUMBERS\\n";\n'
               '\n'
               '\t\t\t// inputing numbers\n'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1857,
          lineno=144,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Third_Program',
          body='F_Third_Program()'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1858,
          lineno=169,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Third_Program',
          body='\t\t\tfor (int i = 1; i <= 20; i++)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "[ " << i << " ] -> ";\n'
               '\t\t\t\tcin >> numbers;\n'
               '\t\t\t\tout_numbers << numbers << endl;\n'
               '\t\t\t}\n'
               '\t\t\tout_numbers.close(); // closing the file\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tcase 50:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tifstream in_numbers("numbers.txt");\n'
               '\n'
               '\t\t\tcout << "SEARCHING A NUMBER\\n";\n'
               '\n'
               '\t\t\tint search_number;\n'
               '\t\t\tbool isAnswerHere = 0; // for finding the searching '
               'number from available list\n'
               '\t\t\tcout << "Enter the number to search: ";\n'
               '\t\t\tcin >> search_number;\n'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1859,
          lineno=192,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Third_Program',
          body='\n'
               '\t\t\twhile (in_numbers)\n'
               '\t\t\t{\n'
               '\t\t\t\tin_numbers >> numbers;\n'
               '\t\t\t\tif (search_number == numbers)\n'
               '\t\t\t\t\tisAnswerHere = 1;\n'
               '\t\t\t} // while loop\n'
               '\n'
               '\t\t\tif (isAnswerHere == 1)\n'
               '\t\t\t\tcout << "\\nThe number is available in list.\\n\\n";\n'
               '\t\t\telse\n'
               '\t\t\t\tcout << "\\nThe number is NOT in list\\n\\n";\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tcase 48:\n'
               '\t\t{\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << "Your choice is not available in Menu.\\nPlease '
               'try one more time\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1860,
          lineno=225,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1861,
          lineno=12,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1862,
          lineno=20,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='out_one',
          body='ofstream out_one;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1863,
          lineno=29,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='out_two',
          body='ofstream out_two;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1864,
          lineno=38,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='in_one',
          body='ifstream in_one;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1865,
          lineno=39,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='in_two',
          body='ifstream in_two;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1866,
          lineno=63,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='in_total',
          body='ifstream in_total;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1867,
          lineno=89,
          tokens=5,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='name',
          body='string name, phone;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1868,
          lineno=159,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='numbers',
          body='int numbers;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1869,
          lineno=188,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='search_number',
          body='int search_number;'),
 Fragment(document_cs='aa4e020b2b82b24b7d870f5b1edd0a823a2b32f1cf69c727195724e52d83cf56',
          id=1870,
          lineno=1,
          tokens=48,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_First_Program F_Second_Program F_Third_Program '
               'main\n'
               '  Variables: in_one in_total in_two name numbers out_one '
               'out_two search_number\n'
               '  Using: std\n'
               '  Usages: app\n'),
 Fragment(document_cs='aaca5be995f6e6a4f3446a8daa4861573e81b6a96ffabdedaf89207e5aeab8b8',
          id=1871,
          lineno=7,
          tokens=68,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main1',
          body='main1()int main1()\n'
               '{\n'
               '\tint a;\n'
               '\tcout << "Enter the number: ";\n'
               '\tcin >> a;\n'
               '\tif (a % 2 == 0)\n'
               '\t\tcout << "Your number is Even!" << endl;\n'
               '\telse\n'
               '\t\tcout << "Your number is Odd!" << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='aaca5be995f6e6a4f3446a8daa4861573e81b6a96ffabdedaf89207e5aeab8b8',
          id=1872,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='aaca5be995f6e6a4f3446a8daa4861573e81b6a96ffabdedaf89207e5aeab8b8',
          id=1873,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main1\n  Using: std\n'),
 Fragment(document_cs='aba460d753be301fad2ebbd58e48fd8f2b9206eb294c7d21093feea0ff247c49',
          id=1874,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='aba460d753be301fad2ebbd58e48fd8f2b9206eb294c7d21093feea0ff247c49',
          id=1875,
          lineno=63,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getElapsedTime',
          body='getElapsedTime() const'),
 Fragment(document_cs='aba460d753be301fad2ebbd58e48fd8f2b9206eb294c7d21093feea0ff247c49',
          id=1876,
          lineno=74,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='restart',
          body='restart()'),
 Fragment(document_cs='aba460d753be301fad2ebbd58e48fd8f2b9206eb294c7d21093feea0ff247c49',
          id=1877,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CLOCK_HPP',
          body='#define SFML_CLOCK_HPP'),
 Fragment(document_cs='aba460d753be301fad2ebbd58e48fd8f2b9206eb294c7d21093feea0ff247c49',
          id=1878,
          lineno=1,
          tokens=23,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n'
               '  Macros: SFML_CLOCK_HPP\n'
               '  Functions: getElapsedTime restart\n'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1879,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1880,
          lineno=63,
          tokens=9,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='read',
          body='read(void* data, Int64 size)'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1881,
          lineno=73,
          tokens=5,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='seek',
          body='seek(Int64 position)'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1882,
          lineno=81,
          tokens=2,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='tell',
          body='tell()'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1883,
          lineno=89,
          tokens=2,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize()'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1884,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_INPUTSTREAM_HPP',
          body='#define SFML_INPUTSTREAM_HPP'),
 Fragment(document_cs='ae2e43302126c3617b5137bab77c0b4d890124b7512b5d396d5910d61ae6870d',
          id=1885,
          lineno=1,
          tokens=25,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API\n'
               '  Macros: SFML_INPUTSTREAM_HPP\n'
               '  Functions: getSize read seek tell\n'),
 Fragment(document_cs='ae5f433353d2125611ee233508595584d6f2ba22be7702904a181a7457432315',
          id=1886,
          lineno=6,
          tokens=60,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='gotoXY',
          body='gotoXY(int x, int y)void gotoXY(int x, int y) {\n'
               "\t//'COORD' is a built in function for positioning the "
               'objects\n'
               '\tCOORD d;\n'
               '\td.X = x;\n'
               '\td.Y = y;\n'
               '\tSetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), '
               'd);\n'
               '}'),
 Fragment(document_cs='ae5f433353d2125611ee233508595584d6f2ba22be7702904a181a7457432315',
          id=1887,
          lineno=14,
          tokens=193,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Loading',
          body='void F_Loading() {\n'
               '\tcout << "\\n\\n\\n\\n\\n\\n";\n'
               '\tcout << "\\t\\t\\t       '
               '-------------------------------------  \\n";\n'
               '\tcout << "\\t\\t\\t         E I G H T S O F T  A C A D E M '
               'Y      \\n";\n'
               '\tcout << "\\t\\t\\t       '
               '-------------------------------------  \\n";\n'
               '\tcout << "\\t\\t\\t                   A L I B A Z A '
               'R             \\n";\n'
               '\tcout << "\\t\\t\\t       '
               '_____________________________________  \\n";\n'
               '\n'
               '\tchar a = 219;\n'
               '\tgotoXY(45, 14);\n'
               '\n'
               '\tcout << "LOADING... " << endl;\n'
               '\n'
               '\tgotoXY(37, 16);\n'
               '\tfor (int r = 1; r <= 26; r++)\n'
               '\t{\n'
               '\t\t//for speed\n'
               '\t\tfor (int speed = 0; speed <= 110000000; speed++);\n'
               '\t\tcout << a;\n'
               '\t}\n'
               '\tcout << endl;\n'
               '}F_Loading()'),
 Fragment(document_cs='ae5f433353d2125611ee233508595584d6f2ba22be7702904a181a7457432315',
          id=1888,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Loading gotoXY\n'),
 Fragment(document_cs='af0ea4760c3855082a5f86fd03ad5a776e97f6eecc4a93b11ba44da78a92a1b4',
          id=1889,
          lineno=1,
          tokens=7,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='Rustam      \t985\n'),
 Fragment(document_cs='af0ea4760c3855082a5f86fd03ad5a776e97f6eecc4a93b11ba44da78a92a1b4',
          id=1890,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1891,
          lineno=42,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1892,
          lineno=68,
          tokens=39,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Transform',
          body='Transform(float a00, float a01, float a02,\n'
               '              float a10, float a11, float a12,\n'
               '              float a20, float a21, float a22)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1893,
          lineno=87,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getMatrix',
          body='getMatrix() const'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1894,
          lineno=98,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getInverse',
          body='getInverse() const'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1895,
          lineno=109,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='transformPoint',
          body='transformPoint(float x, float y) const'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1896,
          lineno=119,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='transformPoint',
          body='transformPoint(const Vector2f& point) const'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1897,
          lineno=135,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='transformRect',
          body='transformRect(const FloatRect& rectangle) const'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1898,
          lineno=149,
          tokens=6,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='combine',
          body='combine(const Transform& transform)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1899,
          lineno=169,
          tokens=7,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='translate',
          body='translate(float x, float y)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1900,
          lineno=188,
          tokens=8,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='translate',
          body='translate(const Vector2f& offset)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1901,
          lineno=207,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='rotate',
          body='rotate(float angle)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1902,
          lineno=233,
          tokens=10,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='rotate',
          body='rotate(float angle, float centerX, float centerY)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1903,
          lineno=258,
          tokens=11,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='rotate',
          body='rotate(float angle, const Vector2f& center)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1904,
          lineno=278,
          tokens=15,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='scale',
          body='scale(float scaleX, float scaleY)scale(const Vector2f& '
               'factors)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1905,
          lineno=305,
          tokens=13,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='scale',
          body='scale(float scaleX, float scaleY, float centerX, float '
               'centerY)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1906,
          lineno=349,
          tokens=15,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='scale',
          body='scale(const Vector2f& factors, const Vector2f& center)'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1907,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TRANSFORM_HPP',
          body='#define SFML_TRANSFORM_HPP'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1908,
          lineno=354,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='Identity',
          body='static const Transform Identity;'),
 Fragment(document_cs='afc0a996335c022bdfbcc0748d7eb12c1bb9af65a846e053d93b896152d022e9',
          id=1909,
          lineno=1,
          tokens=39,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_TRANSFORM_HPP\n'
               '  Functions: Transform combine getInverse getMatrix rotate '
               'scale transformPoint transformRect translate\n'
               '  Variables: Identity\n'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1910,
          lineno=41,
          tokens=4,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='RenderTextureImpl',
          body='class RenderTextureImpl'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1911,
          lineno=48,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1912,
          lineno=89,
          tokens=13,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(unsigned int width, unsigned int height, bool '
               'depthBuffer)'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1913,
          lineno=109,
          tokens=18,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(unsigned int width, unsigned int height, const '
               'ContextSettings& settings = ContextSettings())'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1914,
          lineno=117,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getMaximumAntialiasingLevel',
          body='getMaximumAntialiasingLevel()'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1915,
          lineno=130,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setSmooth',
          body='setSmooth(bool smooth)'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1916,
          lineno=140,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isSmooth',
          body='isSmooth() const'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1917,
          lineno=153,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setRepeated',
          body='setRepeated(bool repeated)'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1918,
          lineno=163,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isRepeated',
          body='isRepeated() const'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1919,
          lineno=179,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='generateMipmap',
          body='generateMipmap()'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1920,
          lineno=196,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setActive',
          body='setActive(bool active = true)'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1921,
          lineno=207,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='display',
          body='display()'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1922,
          lineno=218,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1923,
          lineno=234,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getTexture',
          body='getTexture() const'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1924,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_RENDERTEXTURE_HPP',
          body='#define SFML_RENDERTEXTURE_HPP'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1925,
          lineno=39,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1926,
          lineno=242,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_texture',
          body='Texture                  m_texture;'),
 Fragment(document_cs='b017c2b4a7d26348307a7dc3a2398273daa7825d44fd7920e02083c0e143d069',
          id=1927,
          lineno=1,
          tokens=69,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: RenderTextureImpl SFML_GRAPHICS_API\n'
               '  Macros: SFML_RENDERTEXTURE_HPP\n'
               '  Functions: create display generateMipmap '
               'getMaximumAntialiasingLevel getSize getTexture isRepeated '
               'isSmooth setActive setRepeated setSmooth\n'
               '  Variables: m_texture\n'
               '  Namespaces: priv\n'
               '  Usages: RenderTextureImpl\n'),
 Fragment(document_cs='b05ea5b0c6e8ace3a625770bb427470a4358747befa3b94acfa72b85d5858420',
          id=1928,
          lineno=1,
          tokens=211,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Binary Operator Overloading\n'
               '\n'
               '### Program 1\n'
               '```\n'
               'Create a class Rectangle.\n'
               'Private members of class Rectangle: Length, breadth.\n'
               'Create Member function: \n'
               '    Public:\n'
               '        double getArea()\n'
               '        void setLength(double)\n'
               '        void setBreadth(double)\n'
               '```\n'
               'Declare overloading function use **(+)** operator to add two '
               'Rectangle objects.\n'
               'In the `main()` function set rectangle length, breadth with '
               'member functions and use area function to print area of each '
               'rectangle. \n'
               'Then declare a third object use overloading function to get '
               'area of third object.\n'
               '\n'
               '### Program 2\n'
               '```\n'
               'Create a class Distance.\n'
               'Private members of class Distance: Kilometer, meter.\n'
               'Create default constructor and parameter constructor.\n'
               'Create Member function: \n'
               '    void showDistance()\n'
               '```\n'
               'Declare overloading function use **(==)** operator to compare '
               'two distances. \n'
               'In the `main()` function set Distance  kilometer, meter and '
               'use show distance to print of each distance.\n'
               'Then use overloading function to get difference of two '
               'distances.\n'),
 Fragment(document_cs='b05ea5b0c6e8ace3a625770bb427470a4358747befa3b94acfa72b85d5858420',
          id=1929,
          lineno=1,
          tokens=20,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Binary Operator Overloading\n'
               '### Program 1\n'
               '### Program 2\n'),
 Fragment(document_cs='b1e7719a0b3a153bfdc8b433c2dd75fc0d6a93b343cc8d6199c6c65ee8a4efe3',
          id=1930,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SLEEP_HPP',
          body='#define SFML_SLEEP_HPP'),
 Fragment(document_cs='b1e7719a0b3a153bfdc8b433c2dd75fc0d6a93b343cc8d6199c6c65ee8a4efe3',
          id=1931,
          lineno=1,
          tokens=14,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_SLEEP_HPP\n  Usages: sleep\n'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1932,
          lineno=48,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1933,
          lineno=56,
          tokens=83,
          depth=3,
          parent_id=None,
          category='enum',
          summary=False,
          name='Style',
          body='enum Style\n'
               '    {\n'
               '        Regular       = 0,      ///< Regular characters, no '
               'style\n'
               '        Bold          = 1 << 0, ///< Bold characters\n'
               '        Italic        = 1 << 1, ///< Italic characters\n'
               '        Underlined    = 1 << 2, ///< Underlined characters\n'
               '        StrikeThrough = 1 << 3  ///< Strike through '
               'characters\n'
               '    }'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1934,
          lineno=88,
          tokens=19,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Text',
          body='Text(const String& string, const Font& font, unsigned int '
               'characterSize = 30)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1935,
          lineno=109,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setString',
          body='setString(const String& string)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1936,
          lineno=126,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setFont',
          body='setFont(const Font& font)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1937,
          lineno=145,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setCharacterSize',
          body='setCharacterSize(unsigned int size)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1938,
          lineno=159,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setLineSpacing',
          body='setLineSpacing(float spacingFactor)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1939,
          lineno=178,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setLetterSpacing',
          body='setLetterSpacing(float spacingFactor)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1940,
          lineno=192,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setStyle',
          body='setStyle(Uint32 style)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1941,
          lineno=210,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setColor',
          body='setColor(const Color& color)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1942,
          lineno=224,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setFillColor',
          body='setFillColor(const Color& color)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1943,
          lineno=236,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setOutlineColor',
          body='setOutlineColor(const Color& color)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1944,
          lineno=251,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setOutlineThickness',
          body='setOutlineThickness(float thickness)'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1945,
          lineno=270,
          tokens=3,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getString',
          body='getString() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1946,
          lineno=284,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getFont',
          body='getFont() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1947,
          lineno=294,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getCharacterSize',
          body='getCharacterSize() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1948,
          lineno=304,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getLetterSpacing',
          body='getLetterSpacing() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1949,
          lineno=314,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getLineSpacing',
          body='getLineSpacing() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1950,
          lineno=324,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getStyle',
          body='getStyle() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1951,
          lineno=338,
          tokens=3,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getColor',
          body='getColor() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1952,
          lineno=348,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getFillColor',
          body='getFillColor() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1953,
          lineno=358,
          tokens=5,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getOutlineColor',
          body='getOutlineColor() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1954,
          lineno=368,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getOutlineThickness',
          body='getOutlineThickness() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1955,
          lineno=385,
          tokens=10,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='findCharacterPos',
          body='findCharacterPos(std::size_t index) const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1956,
          lineno=399,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalBounds',
          body='getLocalBounds() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1957,
          lineno=413,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getGlobalBounds',
          body='getGlobalBounds() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1958,
          lineno=433,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ensureGeometryUpdate',
          body='ensureGeometryUpdate() const'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1959,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TEXT_HPP',
          body='#define SFML_TEXT_HPP'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1960,
          lineno=438,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_string',
          body='String              m_string;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1961,
          lineno=440,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_characterSize',
          body='unsigned int        m_characterSize;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1962,
          lineno=441,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_letterSpacingFactor',
          body='float               m_letterSpacingFactor;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1963,
          lineno=442,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_lineSpacingFactor',
          body='float               m_lineSpacingFactor;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1964,
          lineno=443,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_style',
          body='Uint32              m_style;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1965,
          lineno=444,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_fillColor',
          body='Color               m_fillColor;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1966,
          lineno=445,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_outlineColor',
          body='Color               m_outlineColor;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1967,
          lineno=446,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_outlineThickness',
          body='float               m_outlineThickness;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1968,
          lineno=447,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_vertices',
          body='mutable VertexArray m_vertices;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1969,
          lineno=448,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_outlineVertices',
          body='mutable VertexArray m_outlineVertices;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1970,
          lineno=449,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_bounds',
          body='mutable FloatRect   m_bounds;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1971,
          lineno=450,
          tokens=8,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_geometryNeedUpdate',
          body='mutable bool        m_geometryNeedUpdate;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1972,
          lineno=451,
          tokens=9,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_fontTextureId',
          body='mutable Uint64      m_fontTextureId;'),
 Fragment(document_cs='b20f5110cd29946616bab66dc3c599ce19bf018d7a45b35bb8040179063702f0',
          id=1973,
          lineno=1,
          tokens=129,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Enums: Style\n'
               '  Macros: SFML_TEXT_HPP\n'
               '  Functions: Text ensureGeometryUpdate findCharacterPos '
               'getCharacterSize getColor getFillColor getFont getGlobalBounds '
               'getLetterSpacing getLineSpacing getLocalBounds getOutlineColor '
               'getOutlineThickness getString getStyle setCharacterSize '
               'setColor setFillColor setFont setLetterSpacing setLineSpacing '
               'setOutlineColor setOutlineThickness setString setStyle\n'
               '  Variables: m_bounds m_characterSize m_fillColor '
               'm_fontTextureId m_geometryNeedUpdate m_letterSpacingFactor '
               'm_lineSpacingFactor m_outlineColor m_outlineThickness '
               'm_outlineVertices m_string m_style m_vertices\n'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1974,
          lineno=40,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1975,
          lineno=41,
          tokens=4,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='SoundFileReader',
          body='class SoundFileReader'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1976,
          lineno=47,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1977,
          lineno=74,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromFile',
          body='openFromFile(const std::string& filename)'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1978,
          lineno=88,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromMemory',
          body='openFromMemory(const void* data, std::size_t sizeInBytes)'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1979,
          lineno=101,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromStream',
          body='openFromStream(InputStream& stream)'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1980,
          lineno=109,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleCount',
          body='getSampleCount() const'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1981,
          lineno=117,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getChannelCount',
          body='getChannelCount() const'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1982,
          lineno=125,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleRate',
          body='getSampleRate() const'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1983,
          lineno=136,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDuration',
          body='getDuration() const'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1984,
          lineno=144,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getTimeOffset',
          body='getTimeOffset() const'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1985,
          lineno=152,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleOffset',
          body='getSampleOffset() const'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1986,
          lineno=171,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='seek',
          body='seek(Uint64 sampleOffset)'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1987,
          lineno=185,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='seek',
          body='seek(Time timeOffset)'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1988,
          lineno=196,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='read',
          body='read(Int16* samples, Uint64 maxCount)'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1989,
          lineno=26,
          tokens=9,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_INPUTSOUNDFILE_HPP',
          body='#define SFML_INPUTSOUNDFILE_HPP'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1990,
          lineno=211,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_streamOwned',
          body='bool             m_streamOwned;'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1991,
          lineno=212,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sampleOffset',
          body='Uint64           m_sampleOffset;'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1992,
          lineno=213,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sampleCount',
          body='Uint64           m_sampleCount;'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1993,
          lineno=214,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_channelCount',
          body='unsigned int     m_channelCount;'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1994,
          lineno=215,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sampleRate',
          body='unsigned int     m_sampleRate;'),
 Fragment(document_cs='b27dafa46795a0db94fc418a49430cc65a41a6775610a9d84e487fe246982ba5',
          id=1995,
          lineno=1,
          tokens=73,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream SFML_AUDIO_API SoundFileReader\n'
               '  Macros: SFML_INPUTSOUNDFILE_HPP\n'
               '  Functions: getChannelCount getDuration getSampleCount '
               'getSampleOffset getSampleRate getTimeOffset openFromFile '
               'openFromMemory openFromStream read seek\n'
               '  Variables: m_channelCount m_sampleCount m_sampleOffset '
               'm_sampleRate m_streamOwned\n'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=1996,
          lineno=45,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=1997,
          lineno=77,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='start',
          body='start(unsigned int sampleRate = 44100)'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=1998,
          lineno=85,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='stop',
          body='stop()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=1999,
          lineno=97,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleRate',
          body='getSampleRate() const'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2000,
          lineno=108,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getAvailableDevices',
          body='getAvailableDevices()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2001,
          lineno=120,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDefaultDevice',
          body='getDefaultDevice()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2002,
          lineno=137,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setDevice',
          body='setDevice(const std::string& name)'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2003,
          lineno=145,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getDevice',
          body='getDevice() const'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2004,
          lineno=160,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setChannelCount',
          body='setChannelCount(unsigned int channelCount)'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2005,
          lineno=173,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getChannelCount',
          body='getChannelCount() const'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2006,
          lineno=186,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isAvailable',
          body='isAvailable()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2007,
          lineno=214,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setProcessingInterval',
          body='setProcessingInterval(Time interval)'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2008,
          lineno=227,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onStart',
          body='onStart()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2009,
          lineno=243,
          tokens=16,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='onProcessSamples',
          body='onProcessSamples(const Int16* samples, std::size_t '
               'sampleCount)'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2010,
          lineno=254,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onStop',
          body='onStop()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2011,
          lineno=275,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='processCapturedSamples',
          body='processCapturedSamples()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2012,
          lineno=283,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='cleanup',
          body='cleanup()'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2013,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDRECORDER_HPP',
          body='#define SFML_SOUNDRECORDER_HPP'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2014,
          lineno=288,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_thread',
          body='Thread             m_thread;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2015,
          lineno=289,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_samples',
          body='std::vector<Int16> m_samples;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2016,
          lineno=290,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sampleRate',
          body='unsigned int       m_sampleRate;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2017,
          lineno=291,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_processingInterval',
          body='Time               m_processingInterval;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2018,
          lineno=292,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_isCapturing',
          body='bool               m_isCapturing;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2019,
          lineno=293,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_deviceName',
          body='std::string        m_deviceName;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2020,
          lineno=294,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_channelCount',
          body='unsigned int       m_channelCount;'),
 Fragment(document_cs='b35d3bd9d3b94f4d0902eeee1a2c0fca1b359dfc88082af44963601b39c8b49f',
          id=2021,
          lineno=1,
          tokens=81,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n'
               '  Macros: SFML_SOUNDRECORDER_HPP\n'
               '  Functions: cleanup getAvailableDevices getChannelCount '
               'getDefaultDevice getDevice getSampleRate isAvailable '
               'onProcessSamples onStart onStop processCapturedSamples '
               'setChannelCount setDevice setProcessingInterval start stop\n'
               '  Variables: m_channelCount m_deviceName m_isCapturing '
               'm_processingInterval m_sampleRate m_samples m_thread\n'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2022,
          lineno=11,
          tokens=177,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_VegetablesFruits',
          body='class Product_VegetablesFruits\n'
               '{\n'
               'private:\n'
               '\n'
               '\t// "Owner" Only\n'
               '\t// this 3 integers for the quantity in the storage (ñêëàä)\n'
               '\t// the quantity in storage could be changed by "Owner"\n'
               '\tint storage_quantity_potatoes;\n'
               '\tint storage_quantity_carrot;\n'
               '\tint storage_quantity_onion;\n'
               '\n'
               '\t// prices of products\n'
               '\t// the prices only could be changed by "Owner"\n'
               '\tint price_potatoes;\n'
               '\tint price_carrot;\n'
               '\tint price_onion;\n'
               '\n'
               '\t// "User" - Visible only for Users\n'
               '\t// it could be decremented when "User" buying this droduct\n'
               '\tint quantity_potatoes;\n'
               '\tint quantity_carrot;\n'
               '\tint quantity_onion;\n'
               '\n'
               'public:\n'
               '\n'
               '\t// default constructor\n'
               '\tProduct_VegetablesFruits();\n'
               '\n'
               '\t// Parametirized constructor\n'
               '\t//Product_VegetablesFruit'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2023,
          lineno=40,
          tokens=157,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_VegetablesFruits',
          body='s(int sp, int sc, int so, int pp, int pc, int po);\n'
               '\n'
               '\t// for only "Owner" setting the parameters for the storage\n'
               '\tvoid set_storage_quantity_potatoes(int '
               'storage_quantity_potatoes) {\n'
               '\t\tthis->storage_quantity_potatoes = '
               'storage_quantity_potatoes;\n'
               '\t}\n'
               '\tint get_storage_quantity_potatoes() {\n'
               '\t\treturn storage_quantity_potatoes;\n'
               '\t}\n'
               '\n'
               '\tvoid set_storage_quantity_carrot(int '
               'storage_quantity_carrot) {\n'
               '\t\tthis->storage_quantity_carrot = storage_quantity_carrot;\n'
               '\t}\n'
               '\tint get_storage_quantity_carrot() {\n'
               '\t\treturn storage_quantity_carrot;\n'
               '\t}\n'
               '\n'
               '\tvoid set_storage_quantity_onion(int storage_quantity_onion) '
               '{\n'
               '\t\tthis->storage_quantity_onion = storage_quantity_onion;\n'
               '\t}\n'
               '\tint get_storage_quantity_onion'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2024,
          lineno=60,
          tokens=191,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_VegetablesFruits',
          body='() {\n'
               '\t\treturn storage_quantity_onion;\n'
               '\t}\n'
               '\n'
               '\t// setting the prices of products\n'
               '\tvoid set_price_potatoes(int price_potatoes) {\n'
               '\t\tthis->price_potatoes = price_potatoes;\n'
               '\t}\n'
               '\tint get_price_potatoes() {\n'
               '\t\treturn price_potatoes;\n'
               '\t}\n'
               '\tvoid set_price_carrot(int price_carrot) {\n'
               '\t\tthis->price_carrot = price_carrot;\n'
               '\t}\n'
               '\tint get_price_carrot() {\n'
               '\t\treturn price_carrot;\n'
               '\t}\n'
               '\tvoid set_price_onion(int price_onion) {\n'
               '\t\tthis->price_onion = price_onion;\n'
               '\t}\n'
               '\tint get_price_onion() {\n'
               '\t\treturn price_onion;\n'
               '\t}\n'
               '\n'
               '\t// for "User"\n'
               "\t// if '1'  incrementing ... should be +1, if '2' "
               'decrementing ... should be -1\n'
               '\tvoid set_quantity_potatoes_incrementing() {\n'
               '\t\tquantity_potatoes++;\n'
               '\t\tstorage_quantity_potatoes--'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2025,
          lineno=88,
          tokens=182,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Product_VegetablesFruits',
          body=';\n'
               '\t}\n'
               '\tvoid set_quantity_potatoes_decrementing() {\n'
               '\t\tquantity_potatoes--;\n'
               '\t\tstorage_quantity_potatoes++;\n'
               '\t}\n'
               '\tint get_quantity_potatoes() {\n'
               '\t\treturn quantity_potatoes;\n'
               '\t}\n'
               '\n'
               '\t//carrot\n'
               '\tvoid set_quantity_carrot_incrementing() {\n'
               '\t\tquantity_carrot++;\n'
               '\t\tstorage_quantity_carrot--;\n'
               '\t}\n'
               '\tvoid set_quantity_carrot_decrementing() {\n'
               '\t\tquantity_carrot--;\n'
               '\t\tstorage_quantity_carrot++;\n'
               '\t}\n'
               '\tint get_quantity_carrot() {\n'
               '\t\treturn quantity_carrot;\n'
               '\t}\n'
               '\t//onion\n'
               '\tvoid set_quantity_onion_incrementing() {\n'
               '\t\tquantity_onion++;\n'
               '\t\tstorage_quantity_onion--;\n'
               '\t}\n'
               '\tvoid set_quantity_onion_decrementing() {\n'
               '\t\tquantity_onion--;\n'
               '\t\tstorage_quantity_onion++;\n'
               '\t}\n'
               '\tint get_quantity_onion() {\n'
               '\t\treturn quantity_onion;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2026,
          lineno=18,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_potatoes',
          body='int storage_quantity_potatoes;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2027,
          lineno=19,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_carrot',
          body='int storage_quantity_carrot;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2028,
          lineno=20,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='storage_quantity_onion',
          body='int storage_quantity_onion;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2029,
          lineno=24,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_potatoes',
          body='int price_potatoes;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2030,
          lineno=25,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_carrot',
          body='int price_carrot;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2031,
          lineno=26,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price_onion',
          body='int price_onion;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2032,
          lineno=30,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_potatoes',
          body='int quantity_potatoes;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2033,
          lineno=31,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_carrot',
          body='int quantity_carrot;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2034,
          lineno=32,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity_onion',
          body='int quantity_onion;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2035,
          lineno=37,
          tokens=8,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Product_VegetablesFruits',
          body='Product_VegetablesFruits()'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2036,
          lineno=126,
          tokens=116,
          depth=0,
          parent_id=None,
          category='method',
          summary=False,
          name='Product_VegetablesFruits::Product_VegetablesFruits',
          body='Product_VegetablesFruits::Product_VegetablesFruits() {\n'
               '\t// on storage we have ...\n'
               '\tstorage_quantity_potatoes = 10;\n'
               '\tstorage_quantity_carrot = 10;\n'
               '\tstorage_quantity_onion = 10;\n'
               '\n'
               '\t// pries by default\n'
               '\tprice_potatoes = 7990;\n'
               '\tprice_carrot = 1990;\n'
               '\tprice_onion = 2990;\n'
               '\n'
               '\t//quantity bought by user by default\n'
               '\tquantity_potatoes = 0;\n'
               '\tquantity_carrot = 0;\n'
               '\tquantity_onion = 0;\n'
               '}'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2037,
          lineno=9,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='b3c310d6e7cb73a5ea65d4b26e56ef21ab56a7c6f7e546089d4c2077d9477e50',
          id=2038,
          lineno=1,
          tokens=92,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Product_VegetablesFruits\n'
               '  Functions: Product_VegetablesFruits\n'
               '  Methods: Product_VegetablesFruits::Product_VegetablesFruits\n'
               '  Fields: price_carrot price_onion price_potatoes '
               'quantity_carrot quantity_onion quantity_potatoes '
               'storage_quantity_carrot storage_quantity_onion '
               'storage_quantity_potatoes\n'
               '  Using: std\n'
               '  Usages: Product_VegetablesFruits\n'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2039,
          lineno=40,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='ThreadImpl',
          body='class ThreadImpl'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2040,
          lineno=48,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2041,
          lineno=103,
          tokens=7,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Thread',
          body='Thread(F function, A argument)'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2042,
          lineno=126,
          tokens=5,
          depth=9,
          parent_id=None,
          category='function',
          summary=False,
          name='void',
          body='void(C::*function)'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2043,
          lineno=146,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='launch',
          body='launch()'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2044,
          lineno=159,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='wait',
          body='wait()'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2045,
          lineno=172,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='terminate',
          body='terminate()'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2046,
          lineno=184,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='run',
          body='run()'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2047,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_THREAD_HPP',
          body='#define SFML_THREAD_HPP'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2048,
          lineno=38,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2049,
          lineno=41,
          tokens=3,
          depth=5,
          parent_id=None,
          category='struct',
          summary=False,
          name='ThreadFunc',
          body='struct ThreadFunc'),
 Fragment(document_cs='b3ca5356370f60e6f9146b76876a8d81ec124641848b3713ecf74a7323dc336c',
          id=2050,
          lineno=1,
          tokens=48,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API ThreadImpl\n'
               '  Structs: ThreadFunc\n'
               '  Macros: SFML_THREAD_HPP\n'
               '  Functions: Thread launch run terminate void wait\n'
               '  Namespaces: priv\n'
               '  Usages: ThreadImpl\n'),
 Fragment(document_cs='b3cfd86768f81d77a31e18c7cad53893d52cc8e7f07b3b799b1062a8469ac3e1',
          id=2051,
          lineno=1,
          tokens=239,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='#----------------------------------------------------------------\n'
               '# Generated CMake target import file for configuration '
               '"Debug".\n'
               '#----------------------------------------------------------------\n'
               '\n'
               '# Commands may need to know the format version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION 1)\n'
               '\n'
               '# Import target "sfml-system" for configuration "Debug"\n'
               'set_property(TARGET sfml-system APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-system PROPERTIES\n'
               '  IMPORTED_IMPLIB_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-system-d.lib"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/bin/sfml-system-d-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-system )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-system '
               '"${_IMPORT_PREFIX}/lib/sfml-system-d.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-system-d-2.dll" )\n'
               '\n'
               '# Import target "sfml-main" for configuration "Debug"\n'
               'set_property(TARGET sfml-main APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-main PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-main-d.lib"\n'
               '  )\n'),
 Fragment(document_cs='b3cfd86768f81d77a31e18c7cad53893d52cc8e7f07b3b799b1062a8469ac3e1',
          id=2052,
          lineno=24,
          tokens=170,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-main )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-main '
               '"${_IMPORT_PREFIX}/lib/sfml-main-d.lib" )\n'
               '\n'
               '# Import target "sfml-window" for configuration "Debug"\n'
               'set_property(TARGET sfml-window APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-window PROPERTIES\n'
               '  IMPORTED_IMPLIB_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-window-d.lib"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/bin/sfml-window-d-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-window )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-window '
               '"${_IMPORT_PREFIX}/lib/sfml-window-d.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-window-d-2.dll" )\n'),
 Fragment(document_cs='b3cfd86768f81d77a31e18c7cad53893d52cc8e7f07b3b799b1062a8469ac3e1',
          id=2053,
          lineno=37,
          tokens=218,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Import target "sfml-network" for configuration "Debug"\n'
               'set_property(TARGET sfml-network APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-network PROPERTIES\n'
               '  IMPORTED_IMPLIB_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-network-d.lib"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/bin/sfml-network-d-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-network )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-network '
               '"${_IMPORT_PREFIX}/lib/sfml-network-d.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-network-d-2.dll" )\n'
               '\n'
               '# Import target "sfml-graphics" for configuration "Debug"\n'
               'set_property(TARGET sfml-graphics APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-graphics PROPERTIES\n'
               '  IMPORTED_IMPLIB_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics-d.lib"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/bin/sfml-graphics-d-2.dll"\n'
               '  )\n'),
 Fragment(document_cs='b3cfd86768f81d77a31e18c7cad53893d52cc8e7f07b3b799b1062a8469ac3e1',
          id=2054,
          lineno=54,
          tokens=218,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-graphics )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-graphics '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics-d.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-graphics-d-2.dll" )\n'
               '\n'
               '# Import target "sfml-audio" for configuration "Debug"\n'
               'set_property(TARGET sfml-audio APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS DEBUG)\n'
               'set_target_properties(sfml-audio PROPERTIES\n'
               '  IMPORTED_IMPLIB_DEBUG '
               '"${_IMPORT_PREFIX}/lib/sfml-audio-d.lib"\n'
               '  IMPORTED_LOCATION_DEBUG '
               '"${_IMPORT_PREFIX}/bin/sfml-audio-d-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-audio )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-audio '
               '"${_IMPORT_PREFIX}/lib/sfml-audio-d.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-audio-d-2.dll" )\n'
               '\n'
               '# Commands beyond this point should not need to know the '
               'version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION)\n'),
 Fragment(document_cs='b3cfd86768f81d77a31e18c7cad53893d52cc8e7f07b3b799b1062a8469ac3e1',
          id=2055,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='b5eab95dc2ab527ffcc8506d8379d539f99e80f02cd3a5e68282839746847852',
          id=2056,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SFML_WINDOW_HPP',
          body='#define SFML_SFML_WINDOW_HPP'),
 Fragment(document_cs='b5eab95dc2ab527ffcc8506d8379d539f99e80f02cd3a5e68282839746847852',
          id=2057,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_SFML_WINDOW_HPP\n'),
 Fragment(document_cs='b8801ae931986586f1bda51d9864bf8039f446180dbce5bda32e693ed677afa9',
          id=2058,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_WINDOW_EXPORT_HPP',
          body='#define SFML_WINDOW_EXPORT_HPP'),
 Fragment(document_cs='b8801ae931986586f1bda51d9864bf8039f446180dbce5bda32e693ed677afa9',
          id=2059,
          lineno=39,
          tokens=9,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_WINDOW_API',
          body='#define SFML_WINDOW_API SFML_API_EXPORT'),
 Fragment(document_cs='b8801ae931986586f1bda51d9864bf8039f446180dbce5bda32e693ed677afa9',
          id=2060,
          lineno=43,
          tokens=9,
          depth=3,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_WINDOW_API',
          body='#define SFML_WINDOW_API SFML_API_IMPORT'),
 Fragment(document_cs='b8801ae931986586f1bda51d9864bf8039f446180dbce5bda32e693ed677afa9',
          id=2061,
          lineno=1,
          tokens=13,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_WINDOW_API SFML_WINDOW_EXPORT_HPP\n'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2062,
          lineno=8,
          tokens=47,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Products',
          body='class Products\n'
               '{\n'
               'public:\n'
               '\tstring name; double price;\n'
               '\n'
               'public:\n'
               '\tProducts(string name, double price) {\n'
               '\t\tthis->name = name; this->price = price;\n'
               '\t}\n'
               '\tvirtual void Display() = 0;\n'
               '}'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2063,
          lineno=22,
          tokens=111,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Vegetables',
          body='class Vegetables : public Products\n'
               '{\n'
               'public:\n'
               '\tint quantity;\n'
               '\n'
               'public:\n'
               '\tVegetables(string name, double price, int quantity) : '
               'Products(name, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tdouble getPrice() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint getQuantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid Display() {\n'
               '\t\tcout << setw(11) << name << "\\t" << price << setw(4) << '
               '"\\t" << quantity << endl;\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2064,
          lineno=52,
          tokens=109,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Drinks',
          body='class Drinks : public Products\n'
               '{\n'
               'public:\n'
               '\tint quantity;\n'
               '\n'
               'public:\n'
               '\tDrinks(string name, double price, int quantity) : '
               'Products(name, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tdouble getPrice() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint getQuantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid Display() {\n'
               '\t\tcout << setw(11) << name << "\\t" << price << setw(4) << '
               '"\\t" << quantity << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2065,
          lineno=81,
          tokens=108,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Foods',
          body='class Foods : public Products\n'
               '{\n'
               'public:\n'
               '\tint quantity;\n'
               '\n'
               'public:\n'
               '\tFoods(string name, double price, int quantity) : '
               'Products(name, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}\n'
               '\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tdouble getPrice() {\n'
               '\t\treturn price;\n'
               '\t}\n'
               '\n'
               '\tint getQuantity() {\n'
               '\t\treturn quantity;\n'
               '\t}\n'
               '\n'
               '\tvoid Display() {\n'
               '\t\tcout << setw(11) << name << "\\t" << price << setw(4) << '
               '"\\t" << quantity << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2066,
          lineno=11,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2067,
          lineno=11,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='price',
          body='double price;'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2068,
          lineno=25,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2069,
          lineno=55,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='quantity',
          body='int quantity;int quantity;'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2070,
          lineno=14,
          tokens=30,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Products',
          body='Products(string name, double price)Products(string name, '
               'double price) {\n'
               '\t\tthis->name = name; this->price = price;\n'
               '\t}'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2071,
          lineno=28,
          tokens=40,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Vegetables',
          body='Vegetables(string name, double price, int '
               'quantity)Vegetables(string name, double price, int quantity) : '
               'Products(name, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2072,
          lineno=58,
          tokens=38,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Drinks',
          body='Drinks(string name, double price, int quantity) : '
               'Products(name, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}Drinks(string name, double price, int quantity)'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2073,
          lineno=87,
          tokens=38,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Foods',
          body='Foods(string name, double price, int quantity) : '
               'Products(name, price) {\n'
               '\t\tthis->quantity = quantity;\n'
               '\t}Foods(string name, double price, int quantity)'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2074,
          lineno=5,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='b97ae94b6ca489b1fc2c7f5aa6bb0c15d335ed2b8010cba93370dcd6a4b5ab77',
          id=2075,
          lineno=1,
          tokens=30,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Drinks Foods Products Vegetables\n'
               '  Functions: Drinks Foods Products Vegetables\n'
               '  Fields: name price quantity\n'
               '  Using: std\n'),
 Fragment(document_cs='b9aafff734a9113eeb5b9303174184284a367922892b71edc4c81de910e4cb78',
          id=2076,
          lineno=37,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Mutex',
          body='class Mutex'),
 Fragment(document_cs='b9aafff734a9113eeb5b9303174184284a367922892b71edc4c81de910e4cb78',
          id=2077,
          lineno=43,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='b9aafff734a9113eeb5b9303174184284a367922892b71edc4c81de910e4cb78',
          id=2078,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_LOCK_HPP',
          body='#define SFML_LOCK_HPP'),
 Fragment(document_cs='b9aafff734a9113eeb5b9303174184284a367922892b71edc4c81de910e4cb78',
          id=2079,
          lineno=1,
          tokens=17,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Mutex SFML_SYSTEM_API\n  Macros: SFML_LOCK_HPP\n'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2080,
          lineno=14,
          tokens=181,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Staff',
          body='class Staff\n'
               '{\n'
               'protected:\n'
               '\tstring code;\n'
               '\tstring name;\n'
               '\n'
               'public:\n'
               '\tStaff()\n'
               '\t{\n'
               '\t\tcode = "0000";\n'
               '\t\tname = "Unknown";\n'
               '\t}\n'
               '\t/*void set_code(string code) {\n'
               '\t\tthis->code = code;\n'
               '\t}\n'
               '\tstring get_code() {\n'
               '\t\treturn code;\n'
               '\t}\n'
               '\tvoid set_name(string name) {\n'
               '\t\tthis->name = name;\n'
               '\t}\n'
               '\n'
               '\tstring get_name() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\t*/\n'
               '\tvoid getdata_name()\n'
               '\t{\n'
               '\t\tcout << " Enter employee name: ";\n'
               '\t\tcin >> name;\n'
               '\t}\n'
               '\tvoid getdata_code()\n'
               '\t{\n'
               '\t\tcout << " Enter employee code: ";\n'
               '\t\tcin >> code;\n'
               '\t}\n'
               '\tvoid showdata_name()\n'
               '\t{\n'
               '\t\tcout << " Name: " << name << endl;\n'
               '\t}\n'
               '\tvoid showdata_code()\n'
               '\t{\n'
               '\t\tcout << " Code: " << code << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2081,
          lineno=60,
          tokens=138,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Teacher',
          body='class Teacher : public Staff\n'
               '{\n'
               'protected:\n'
               '\tstring subject;\n'
               '\tint publications;\n'
               '\n'
               'public:\n'
               '\tTeacher()\n'
               '\t{\n'
               '\t\tsubject = "Unknown";\n'
               '\t\tpublications = 0;\n'
               '\t}\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tStaff::getdata_code();\n'
               '\t\tStaff::getdata_name();\n'
               '\t\tcout << " Enter subject: ";\n'
               '\t\tcin >> subject;\n'
               '\t\tcout << " Enter number of publications: ";\n'
               '\t\tcin >> publications;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tStaff::showdata_code();\n'
               '\t\tStaff::showdata_name();\n'
               '\t\tcout << " Subject: " << subject << endl\n'
               '\t\t\t << " Publications: " << publications << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2082,
          lineno=90,
          tokens=106,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Officer',
          body='class Officer : public Staff\n'
               '{\n'
               'protected:\n'
               '\tfloat grade;\n'
               '\n'
               'public:\n'
               '\tOfficer()\n'
               '\t{\n'
               '\t\tgrade = 0.0;\n'
               '\t}\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tStaff::getdata_code();\n'
               '\t\tStaff::getdata_name();\n'
               '\t\tcout << " Enter the grade: ";\n'
               '\t\tcin >> grade;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tStaff::showdata_code();\n'
               '\t\tStaff::showdata_name();\n'
               '\t\tcout << " Grade: " << grade << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2083,
          lineno=115,
          tokens=112,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Typist',
          body='class Typist : public Staff\n'
               '{\n'
               'protected:\n'
               '\tint speed;\n'
               '\n'
               'public:\n'
               '\tTypist()\n'
               '\t{\n'
               '\t\tspeed = 0;\n'
               '\t}\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tStaff::getdata_code();\n'
               '\t\tStaff::getdata_name();\n'
               '\t\tcout << " Enter the speed (wprds/min): ";\n'
               '\t\tcin >> speed;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tStaff::showdata_code();\n'
               '\t\tStaff::showdata_name();\n'
               '\t\tcout << " Speed (words/min): " << speed << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2084,
          lineno=140,
          tokens=102,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Regular_Typist',
          body='class Regular_Typist : public Typist\n'
               '{\n'
               'protected:\n'
               '\tfloat monthly_salary;\n'
               '\n'
               'public:\n'
               '\tRegular_Typist()\n'
               '\t{\n'
               '\t\tmonthly_salary = 0.0;\n'
               '\t}\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tTypist::getdata();\n'
               '\t\tcout << " Enter the monthly salary: ";\n'
               '\t\tcin >> monthly_salary;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tTypist::showdata();\n'
               '\t\tcout << " Monthly salary: " << monthly_salary << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2085,
          lineno=163,
          tokens=107,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Casual_Typist',
          body='class Casual_Typist : public Typist\n'
               '{\n'
               'protected:\n'
               '\tfloat daily_wage;\n'
               '\n'
               'public:\n'
               '\tCasual_Typist()\n'
               '\t{\n'
               '\t\tdaily_wage = 0.0;\n'
               '\t}\n'
               '\tvoid getdata()\n'
               '\t{\n'
               '\t\tTypist::getdata();\n'
               '\t\tcout << " Enter the daily wage: ";\n'
               '\t\tcin >> daily_wage;\n'
               '\t}\n'
               '\tvoid showdata()\n'
               '\t{\n'
               '\t\tTypist::showdata();\n'
               '\t\tcout << " Daily wage: " << daily_wage << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2086,
          lineno=188,
          tokens=100,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Person',
          body='class Person\n'
               '{\n'
               'protected:\n'
               '\tstring name;\n'
               '\tstring code;\n'
               '\n'
               'public:\n'
               '\tPerson()\n'
               '\t{\n'
               '\t\tname = "Unknown";\n'
               '\t\tcode = "Unknown";\n'
               '\t}\n'
               '\tvoid getdetails()\n'
               '\t{\n'
               '\t\tcout << " Enter name: ";\n'
               '\t\tcin >> name;\n'
               '\t\tcout << " Enter code: ";\n'
               '\t\tcin >> code;\n'
               '\t}\n'
               '\tvoid showdetails()\n'
               '\t{\n'
               '\t\tcout << " NAME: " << name << endl;\n'
               '\t\tcout << " CODE: " << code << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2087,
          lineno=214,
          tokens=74,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Account',
          body='class Account : virtual public Person\n'
               '{\n'
               'protected:\n'
               '\tfloat pay;\n'
               '\n'
               'public:\n'
               '\tAccount()\n'
               '\t{\n'
               '\t\tpay = 0.0;\n'
               '\t}\n'
               '\tvoid getpay()\n'
               '\t{\n'
               '\t\tcout << " Enter pay amount: ";\n'
               '\t\tcin >> pay;\n'
               '\t}\n'
               '\tvoid showpay()\n'
               '\t{\n'
               '\t\tcout << " PAY: " << pay << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2088,
          lineno=235,
          tokens=74,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Admin',
          body='class Admin : virtual public Person\n'
               '{\n'
               'protected:\n'
               '\tint experience;\n'
               '\n'
               'public:\n'
               '\tAdmin()\n'
               '\t{\n'
               '\t\texperience = 0;\n'
               '\t}\n'
               '\tvoid getexpr()\n'
               '\t{\n'
               '\t\tcout << " Enter experience in years: ";\n'
               '\t\tcin >> experience;\n'
               '\t}\n'
               '\tvoid showexpr()\n'
               '\t{\n'
               '\t\tcout << " EXPERIENCE: " << experience << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2089,
          lineno=256,
          tokens=55,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Master',
          body='class Master : public Account, public Admin\n'
               '{\n'
               'public:\n'
               '\tvoid create()\n'
               '\t{\n'
               '\t\tgetdetails();\n'
               '\t\tgetpay();\n'
               '\t\tgetexpr();\n'
               '\t}\n'
               '\n'
               '\tvoid display()\n'
               '\t{\n'
               '\t\tshowdetails();\n'
               '\t\tshowpay();\n'
               '\t\tshowexpr();\n'
               '\t}\n'
               '\n'
               '\tvoid update()\n'
               '\t{\n'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2090,
          lineno=275,
          tokens=206,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Master',
          body='\t\tfor (int i = 0; i < 1000; i++)\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t U P D A T E  D E T A I L S\\n";\n'
               '\t\t\tcout << "=========================================\\n";\n'
               '\t\t\tcout << " Choose detail you want to update\\n";\n'
               '\t\t\tcout << " 1. NAME\\n";\n'
               '\t\t\tcout << " 2. CODE\\n";\n'
               '\t\t\tcout << " 3. EXPERIENCE\\n";\n'
               '\t\t\tcout << " 4. PAY\\n";\n'
               '\t\t\tcout << " 0. Back\\n";\n'
               '\t\t\tcout << " Your choice: ";\n'
               '\n'
               '\t\t\tswitch (_getch())\n'
               '\t\t\t{\n'
               '\t\t\tcase 49:\n'
               '\t\t\t\tcout << "\\n\\n Enter name: ";\n'
               '\t\t\t\tcin >> name;\n'
               '\t\t\t\tcout << " Successfully Updated!\\n";\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase 50:\n'
               '\t\t\t\tcout << "\\n\\n Enter code: ";\n'
               '\t\t\t\tcin >> code;\n'
               '\t\t\t\tcout << " '),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2091,
          lineno=300,
          tokens=200,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Master',
          body='Successfully Updated!\\n";\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase 51:\n'
               '\t\t\t\tcout << "\\n\\n Enter Expereince: ";\n'
               '\t\t\t\tcin >> experience;\n'
               '\t\t\t\tcout << " Successfully Updated!\\n";\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase 52:\n'
               '\t\t\t\tcout << "\\n\\n Enter pay: ";\n'
               '\t\t\t\tcin >> pay;\n'
               '\t\t\t\tcout << " Successfully Updated!\\n";\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase 48:\n'
               '\t\t\t\ti = 1000;\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tdefault:\n'
               '\t\t\t\tcout << endl\n'
               '\t\t\t\t\t << endl;\n'
               '\t\t\t\tcout << "\\t\\t Your choice is not abailable in Menu. '
               '\\n\\t\\t Please try one more time.\\n";\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t\tSleep(0700);\n'
               '\t\t\t} // switch\n'
               '\t\t}\n'
               '\t} // for loop\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2092,
          lineno=17,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='code',
          body='string code;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2093,
          lineno=18,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2094,
          lineno=63,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='subject',
          body='string subject;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2095,
          lineno=64,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='publications',
          body='int publications;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2096,
          lineno=93,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='grade',
          body='float grade;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2097,
          lineno=118,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='speed',
          body='int speed;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2098,
          lineno=143,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='monthly_salary',
          body='float monthly_salary;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2099,
          lineno=166,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='daily_wage',
          body='float daily_wage;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2100,
          lineno=191,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2101,
          lineno=192,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='code',
          body='string code;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2102,
          lineno=217,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='pay',
          body='float pay;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2103,
          lineno=238,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='experience',
          body='int experience;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2104,
          lineno=10,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='F_First_Program_Menu()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2105,
          lineno=11,
          tokens=7,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program_Menu',
          body='F_Second_Program_Menu()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2106,
          lineno=21,
          tokens=21,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Staff',
          body='Staff()\n'
               '\t{\n'
               '\t\tcode = "0000";\n'
               '\t\tname = "Unknown";\n'
               '\t}Staff()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2107,
          lineno=67,
          tokens=22,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Teacher',
          body='Teacher()\n'
               '\t{\n'
               '\t\tsubject = "Unknown";\n'
               '\t\tpublications = 0;\n'
               '\t}Teacher()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2108,
          lineno=96,
          tokens=19,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Officer',
          body='Officer()Officer()\n\t{\n\t\tgrade = 0.0;\n\t}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2109,
          lineno=121,
          tokens=16,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Typist',
          body='Typist()\n\t{\n\t\tspeed = 0;\n\t}Typist()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2110,
          lineno=146,
          tokens=24,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Regular_Typist',
          body='Regular_Typist()\n'
               '\t{\n'
               '\t\tmonthly_salary = 0.0;\n'
               '\t}Regular_Typist()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2111,
          lineno=169,
          tokens=27,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Casual_Typist',
          body='Casual_Typist()\n'
               '\t{\n'
               '\t\tdaily_wage = 0.0;\n'
               '\t}Casual_Typist()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2112,
          lineno=195,
          tokens=20,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Person',
          body='Person()Person()\n'
               '\t{\n'
               '\t\tname = "Unknown";\n'
               '\t\tcode = "Unknown";\n'
               '\t}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2113,
          lineno=220,
          tokens=17,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Account',
          body='Account()\n\t{\n\t\tpay = 0.0;\n\t}Account()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2114,
          lineno=241,
          tokens=15,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Admin',
          body='Admin()\n\t{\n\t\texperience = 0;\n\t}Admin()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2115,
          lineno=332,
          tokens=144,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\tM A I N  M E N U\\n";\n'
               '\t\tcout << "      =====================\\n";\n'
               '\t\tcout << "      1. First program\\n";\n'
               '\t\tcout << "      2. Second program\\n";\n'
               '\t\tcout << "      0. Exit\\n";\n'
               '\t\tcout << "      Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1':\n"
               '\t\t{\n'
               '\t\t\tcout << "\\t Educational institution database\\n";\n'
               '\t\t\t// calling the menu of first program\n'
               '\t\t\tF_First_Program_Menu();\n'
               '\t'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2116,
          lineno=332,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2117,
          lineno=351,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t}\n'
               '\t\tbreak;\n'
               "\t\tcase '2':\n"
               '\t\t{\n'
               '\t\t\tcout << "\\t Second program\\n";\n'
               '\t\t\t// calling the menu of second program\n'
               '\t\t\tF_Second_Program_Menu();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               "\t\tcase '0':\n"
               '\t\t{\n'
               '\t\t\treturn 0;\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tcout << "\\t\\t Your choice is not abailable in Menu. '
               '\\n\\t\\t Please try one more time.\\n";\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tSleep(0700);\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2118,
          lineno=381,
          tokens=205,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='void F_First_Program_Menu()\n'
               '{\n'
               '\t// objects\n'
               '\tTeacher teacher;\n'
               '\tOfficer officer;\n'
               '\tRegular_Typist regular;\n'
               '\tCasual_Typist casual;\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\tM A I N  M E N U\\n";\n'
               '\t\tcout << "      =====================\\n";\n'
               '\t\tcout << " 1. TEACHER\\n";\n'
               '\t\tcout << " 2. OFFICER\\n";\n'
               '\t\tcout << " 3. TYPIST\\n";\n'
               '\t\tcout << " 0. Back\\n";\n'
               '\t\tcout << " Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1':\n"
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t T E A C H E R\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tteacher.getdata();\n'
               '\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\t'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2119,
          lineno=381,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='F_First_Program_Menu()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2120,
          lineno=408,
          tokens=134,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='cout << "===================================\\n";\n'
               '\t\t\tteacher.showdata();\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               "\t\tcase '2':\n"
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t O F F I C E R\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tofficer.getdata();\n'
               '\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tofficer.showdata();\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               "\t\tcase '3':\n"
               '\t\t{\n'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2121,
          lineno=433,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='\t\t\tfor (int l = 0; l < 1000; l++)\n'
               '\t\t\t{\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\t T Y P I S T\\n";\n'
               '\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\tcout << " 1. Regular typist\\n";\n'
               '\t\t\t\tcout << " 2. Casual typist\\n";\n'
               '\t\t\t\tcout << " 0. Back\\n";\n'
               '\t\t\t\tcout << " Your choice: \\n";\n'
               '\t\t\t\tswitch (_getch())\n'
               '\t\t\t\t{\n'
               "\t\t\t\tcase '1':\n"
               '\t\t\t\t{\n'
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tcout << "\\t R E G U L A R  T Y P I S T\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\t\tregular.getdata();\n'
               '\t\t\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\t\tregular.showdata();\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\n'
               "\t\t\t\tcase '2':\n"
               '\t\t\t\t{\n'
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tcout << "\\t C A S U A L  T Y P I S T\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2122,
          lineno=464,
          tokens=115,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='\t\t\tcasual.getdata();\n'
               '\t\t\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\t\tcasual.showdata();\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t}\n'
               '\t\t\t\tbreak;\n'
               "\t\t\t\tcase '0':\n"
               '\t\t\t\t{\n'
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tl = 1000;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t\tdefault:\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t Your choice is not abailable in '
               'Menu. \\n\\'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2123,
          lineno=483,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='t\\t Please try one more time.\\n";\n'
               '\t\t\t\t\tSleep(0700);\n'
               '\t\t\t\t\tSleep(0700);\n'
               '\t\t\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t\t} // switch\n'
               '\t\t\t}\t  // for\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               "\t\tcase '0':\n"
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tk = 1000;\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tcout << "\\t\\t Your choice is not abailable in Menu. '
               '\\n\\t\\t Please try one more time.\\n";\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tSleep(0700);\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2124,
          lineno=511,
          tokens=200,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program_Menu',
          body='void F_Second_Program_Menu()\n'
               '{\n'
               '\tMaster master1; // object\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\t M A S T E R\'S  D A T A B A S E\\n";\n'
               '\t\tcout << "      ====================================\\n";\n'
               '\t\tcout << " 1. Create  Record\\n";\n'
               '\t\tcout << " 2. Display Record\\n";\n'
               '\t\tcout << " 3. Update  Record\\n";\n'
               '\t\tcout << " 0. Back\\n";\n'
               '\t\tcout << " Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t C R E A T E  A  R E C O R D\\n";\n'
               '\t\t\tcout << '
               '"===========================================\\n";\n'
               '\t\t\tmaster1.create();\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbr'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2125,
          lineno=511,
          tokens=7,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program_Menu',
          body='F_Second_Program_Menu()'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2126,
          lineno=535,
          tokens=178,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program_Menu',
          body='eak;\n'
               '\n'
               "\t\tcase '2':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t D I S P L A Y  D E T A I L S\\n";\n'
               '\t\t\tcout << '
               '"==========================================\\n";\n'
               '\t\t\tmaster1.display();\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               "\t\tcase '3':\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tmaster1.update();\n'
               '\t\t\tcout << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\t// system("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               "\t\tcase '0':\n"
               '\t\t\tk = 1000;\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "\\t\\t Your choice is not abailable in Menu. '
               '\\n\\t\\t Please try one more time.\\n";\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2127,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2128,
          lineno=384,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='teacher',
          body='Teacher teacher;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2129,
          lineno=385,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='officer',
          body='Officer officer;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2130,
          lineno=386,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='regular',
          body='Regular_Typist regular;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2131,
          lineno=387,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='casual',
          body='Casual_Typist casual;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2132,
          lineno=513,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='master1',
          body='Master master1;'),
 Fragment(document_cs='ba92b7743e475816922f6d9ce2d0801f2feabe664b04549ccd9451daab117318',
          id=2133,
          lineno=1,
          tokens=106,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Account Admin Casual_Typist Master Officer Person '
               'Regular_Typist Staff Teacher Typist\n'
               '  Functions: Account Admin Casual_Typist F_First_Program_Menu '
               'F_Second_Program_Menu Officer Person Regular_Typist Staff '
               'Teacher Typist main\n'
               '  Fields: code daily_wage experience grade monthly_salary name '
               'pay publications speed subject\n'
               '  Variables: casual master1 officer regular teacher\n'
               '  Using: std\n'
               '  Usages: getdata getdata_code getdata_name showdata '
               'showdata_code showdata_name\n'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2134,
          lineno=39,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Packet',
          body='class Packet'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2135,
          lineno=45,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_NETWORK_API',
          body='class SFML_NETWORK_API'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2136,
          lineno=74,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalPort',
          body='getLocalPort() const'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2137,
          lineno=98,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='bind',
          body='bind(unsigned short port, const IpAddress& address = '
               'IpAddress::Any)'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2138,
          lineno=112,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='unbind',
          body='unbind()'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2139,
          lineno=131,
          tokens=24,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='send',
          body='send(const void* data, std::size_t size, const IpAddress& '
               'remoteAddress, unsigned short remotePort)'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2140,
          lineno=154,
          tokens=30,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='receive',
          body='receive(void* data, std::size_t size, std::size_t& received, '
               'IpAddress& remoteAddress, unsigned short& remotePort)'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2141,
          lineno=172,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='send',
          body='send(Packet& packet, const IpAddress& remoteAddress, unsigned '
               'short remotePort)'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2142,
          lineno=189,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='receive',
          body='receive(Packet& packet, IpAddress& remoteAddress, unsigned '
               'short& remotePort)'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2143,
          lineno=26,
          tokens=7,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_UDPSOCKET_HPP',
          body='#define SFML_UDPSOCKET_HPP'),
 Fragment(document_cs='bc99a02a04ae936717d58c694352ffe173036ec6676b4074480bf9b608689ab3',
          id=2144,
          lineno=1,
          tokens=39,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Packet SFML_NETWORK_API\n'
               '  Macros: SFML_UDPSOCKET_HPP\n'
               '  Functions: bind getLocalPort receive send unbind\n'
               '  Usages: Any m_buffer\n'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2145,
          lineno=41,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Sound',
          body='class Sound'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2146,
          lineno=42,
          tokens=4,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputSoundFile',
          body='class InputSoundFile'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2147,
          lineno=43,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2148,
          lineno=49,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2149,
          lineno=65,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='SoundBuffer',
          body='SoundBuffer(const SoundBuffer& copy)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2150,
          lineno=86,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& filename)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2151,
          lineno=102,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const void* data, std::size_t sizeInBytes)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2152,
          lineno=117,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& stream)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2153,
          lineno=135,
          tokens=24,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromSamples',
          body='loadFromSamples(const Int16* samples, Uint64 sampleCount, '
               'unsigned int channelCount, unsigned int sampleRate)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2154,
          lineno=150,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='saveToFile',
          body='saveToFile(const std::string& filename) const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2155,
          lineno=164,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getSamples',
          body='getSamples() const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2156,
          lineno=177,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleCount',
          body='getSampleCount() const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2157,
          lineno=191,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSampleRate',
          body='getSampleRate() const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2158,
          lineno=204,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getChannelCount',
          body='getChannelCount() const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2159,
          lineno=214,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDuration',
          body='getDuration() const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2160,
          lineno=238,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='initialize',
          body='initialize(InputSoundFile& file)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2161,
          lineno=249,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(unsigned int channelCount, unsigned int sampleRate)'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2162,
          lineno=257,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='attachSound',
          body='attachSound(Sound* sound) const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2163,
          lineno=265,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='detachSound',
          body='detachSound(Sound* sound) const'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2164,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDBUFFER_HPP',
          body='#define SFML_SOUNDBUFFER_HPP'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2165,
          lineno=270,
          tokens=10,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='SoundList',
          body='typedef std::set<Sound*> SoundList;'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2166,
          lineno=275,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_buffer',
          body='unsigned int       m_buffer;'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2167,
          lineno=276,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_samples',
          body='std::vector<Int16> m_samples;'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2168,
          lineno=277,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_duration',
          body='Time               m_duration;'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2169,
          lineno=278,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sounds',
          body='mutable SoundList  m_sounds;'),
 Fragment(document_cs='bd59435a5b50f06bf2519a43fc10c4e1b6819f304253e7f3c6b14038a0263766',
          id=2170,
          lineno=1,
          tokens=83,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputSoundFile InputStream SFML_AUDIO_API Sound\n'
               '  Typedefs: SoundList\n'
               '  Macros: SFML_SOUNDBUFFER_HPP\n'
               '  Functions: SoundBuffer attachSound detachSound '
               'getChannelCount getDuration getSampleCount getSampleRate '
               'getSamples initialize loadFromFile loadFromMemory '
               'loadFromSamples loadFromStream saveToFile update\n'
               '  Variables: m_buffer m_duration m_samples m_sounds\n'),
 Fragment(document_cs='c0aeccedc64b88e93de318f6015cc86d488b81a84083c360e83c73206540520a',
          id=2171,
          lineno=7,
          tokens=74,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main5',
          body='main5()int main5()\n'
               '{\n'
               '\tfloat sum = 0, fact = 1;\n'
               '\tfor (int i = 1; i <= 7; i++)\n'
               '\t{\n'
               '\t\tfact = fact * i;\n'
               '\t\tsum += i / fact;\n'
               '\t}\n'
               '\tcout << "Sum is : " << sum << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='c0aeccedc64b88e93de318f6015cc86d488b81a84083c360e83c73206540520a',
          id=2172,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c0aeccedc64b88e93de318f6015cc86d488b81a84083c360e83c73206540520a',
          id=2173,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main5\n  Using: std\n'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2174,
          lineno=42,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2175,
          lineno=64,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPointCount',
          body='setPointCount(std::size_t count)'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2176,
          lineno=74,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPointCount',
          body='getPointCount() const'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2177,
          lineno=91,
          tokens=15,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPoint',
          body='setPoint(std::size_t index, const Vector2f& point)'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2178,
          lineno=108,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPoint',
          body='getPoint(std::size_t index) const'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2179,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CONVEXSHAPE_HPP',
          body='#define SFML_CONVEXSHAPE_HPP'),
 Fragment(document_cs='c10a6da1bce95ae820cbbc50e77ac8f158fa50e2725679ad3bb76abc284e717f',
          id=2180,
          lineno=1,
          tokens=42,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_CONVEXSHAPE_HPP\n'
               '  Functions: getPoint getPointCount setPoint setPointCount\n'
               '  Usages: size_t vector\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2181,
          lineno=38,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='F_General_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2182,
          lineno=39,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='F_Sign_in()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2183,
          lineno=40,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='F_Developers()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2184,
          lineno=41,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='F_Logo()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2185,
          lineno=42,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo_Owner',
          body='F_Logo_Owner()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2186,
          lineno=44,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='F_Owner_Main_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2187,
          lineno=45,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='F_Owner_Products_Stotage()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2188,
          lineno=46,
          tokens=7,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Customers_List',
          body='F_Owner_Customers_List()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2189,
          lineno=48,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='F_User_Main_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2190,
          lineno=49,
          tokens=10,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Table_For_Increasing_And_Decreasing',
          body='F_Table_For_Increasing_And_Decreasing()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2191,
          lineno=50,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='F_Vegetables_Fruits_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2192,
          lineno=51,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='F_Water_Beverages_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2193,
          lineno=52,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='F_Bread_Bakery_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2194,
          lineno=53,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='F_Cart_Check()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2195,
          lineno=56,
          tokens=54,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\t// Loading Time\n'
               '    F_Loading();\n'
               '\tF_General_Menu();\n'
               '\t\n'
               '\tcout << "\\n\\n\\t\\t\\t\\t   Thank you for '
               'Attention!!!\\n\\n" << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2196,
          lineno=66,
          tokens=250,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='void F_General_Menu() {\n'
               '\t// Main Authentication Menu \n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << "        A L I B A Z A '
               'R                                             A U T H E N T I '
               'C A T I O N     \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Authentication \\n" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   1. Sign in" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   2. Sign up" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   3. About" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   0. Exit" << endl << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t  Your Choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: // Sign in\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t    break;\n'
               '\n'
               "\t\tcase 50: {   // Register ('sign up')   // Set details with "
               'validation    \n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2197,
          lineno=66,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='F_General_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2198,
          lineno=87,
          tokens=235,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\tfor (int i = 0; i != 1;) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << "        A L I B A Z A '
               'R                                             R E G I S T R A '
               'T I O N         \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t       Example of Registration: " '
               '<< endl ;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        ______________________" '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        User Name  : Abdullokh " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Telephone  : 974006102 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Login      : Alimov_8 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        Password   : Alimov808 " '
               '<< endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t\\t        ______________________" '
               '<< endl << endl;\n'
               '\t\t\t\tUser_1.SetUser();   \n'
               '\t\t\t\tValidationParol(User_1);\n'
               '\t\t\t\tValidationName(User_1);\n'
               '\t\t\t\tValidationTellNum(User_1);\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2199,
          lineno=103,
          tokens=181,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\t\tif (Validation == 3) {\n'
               '\t\t\t\t\t//////   File Handling For User Info\n'
               '\t\t\t\t\tofstream User_1_Info;\n'
               '\t\t\t\t\tUser_1_Info.open("User_Info.txt");  // Opening File\n'
               '\t\t\t\t\t// Setting User Info to Memory\n'
               '\t\t\t\t\tUser_1_Info << Name_Memory << endl;\n'
               '\t\t\t\t\tUser_1_Info << TellNum_Memory << endl;\n'
               '\t\t\t\t\tUser_1_Info << Login_Memory << endl;\n'
               '\t\t\t\t\tUser_1_Info << Parol_Memory << endl;\n'
               '\t\t\t\t\tUser_1_Info.close();\n'
               '\t\t\t\t\t///////// End of the File Handling\n'
               '\t\t\t\t\tcout << "\\t\\t              '
               '__________________________________" << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t                      Correct '
               'Validation" << endl;\n'
               '\t\t\t\t\ti++; \n'
               '\t\t\t\t\tcout << "                          Please press any '
               'keyboard to continue program" << endl << endl; '
               'system("Pause");\n'
               '\t\t\t\t\tValidation = 0;\n'
               '\t\t\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2200,
          lineno=120,
          tokens=193,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_General_Menu',
          body='\t\t\t\telse {\n'
               '\t\t\t\t\tcout << "\\t\\t              '
               '__________________________________" << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t                      Invalid '
               'Validation" << endl;\n'
               '\t\t\t\t\tcout << "                          Please press any '
               'keyboard to rewrite details" << endl << endl;\n'
               '\t\t\t\t\tsystem("Pause"); system("cls");\n'
               '\t\t\t\t\tValidation = 0;\n'
               '\t\t\t\t} // switch case ends\n'
               '\t\t\t} // for loop ends\n'
               '\t\t}break;\n'
               '\n'
               '\t\tcase 51:   // Developers\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Developers();\n'
               '\t        break;\n'
               '\t\tcase 48:\n'
               '\t\t\t//i = 1000;\n'
               '\t\t\tsystem("exit");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tdefault:  cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\t\n'
               '\t\t} // switch case ends\n'
               '\t} // for loop ends\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2201,
          lineno=148,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='void F_Sign_in() {\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << "        A L I B A Z A '
               'R                                                       S I G '
               'N  I N          \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t     Sign in\\n\\n";\n'
               '\t\tcout << "\\t\\t\\t\\t\\t1. Sign in as Owner" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t2. Sign in as User" << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t0. Back" << endl << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t   '),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2202,
          lineno=148,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='F_Sign_in()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2203,
          lineno=159,
          tokens=174,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='Your Choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {  // Sign in as Owner\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                          O W '
               'N E R          \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t         Owner '
               'Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t  Login    : "; cin >> '
               'Login_Sign;\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t  Password : "; cin >> '
               'Parol_Sign;\n'
               '\t\t\tif (Login_Sign == Owner_Login_Sign && Parol_Sign == '
               'Owner_Parol_Sign) {\n'
               "\t\t\t\t// Owner's Menu\n"
               '\t\t\t\tF_Owner_Main_Menu();\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2204,
          lineno=175,
          tokens=177,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body="\t\t\telse {  // If Login hasn't Registered\n"
               '\t\t\t\tcout << "\\n\\n\\t\\t\\t        Your Login and '
               'Password are Invalid." << endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t     Please press any key back to '
               '\'Sign in\' Menu.\\n\\n" << endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t\tF_Sign_in();\n'
               '\t\t\t} // else ends\n'
               '\t\t}break;\n'
               '\n'
               '\t\tcase 50: {   // Sign in as User\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\t//////   File Handling For User Info\n'
               '\t\t\tifstream User_1_Info;\n'
               '\t\t\tUser_1_Info.open("User_Info.txt");\n'
               '\t\t\tUser_1_Info >> Name_Memory;\n'
               '\t\t\tUser_1_Info >> TellNum_Memory;\n'
               '\t\t\tUser_1_Info >> Login_Memory;\n'
               '\t\t\tUser_1_Info >> Parol_Memory;\n'
               '\t\t\tUser_1_Info.clo'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2205,
          lineno=192,
          tokens=113,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='se();\n'
               '\t\t\t///////// End of the File Handling\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                     C U S T '
               'O M E R         \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t         Customer '
               'Authentication\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t  Login    : "; cin >> '
               'Login_Sign;\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t  Password : "; cin >> '
               'Parol_Sign;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2206,
          lineno=200,
          tokens=215,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Sign_in',
          body='\t\t\tif (Login_Sign == Login_Memory && Parol_Sign == '
               'Parol_Memory) {\n'
               '\t\t\t\t/////// User Menu\n'
               '\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t\t///////\n'
               '\t\t\t}\n'
               '\t\t\telse {  // If Login didnt Register\n'
               '\t\t\t\tcout << "\\n\\n\\t\\t\\t        Your Login and '
               'Password are Invalid." << endl;\n'
               '\t\t\t\tcout << "\\t\\t\\t     Please press any key back to '
               '\'Sign in\' Menu.\\n\\n" << endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t\tF_Sign_in();\n'
               '\t\t\t} // else ends\n'
               '\t\t}break;\n'
               '\n'
               '\t\tcase 48: {   // Back\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_General_Menu();\n'
               '\t\t}break;\n'
               '\n'
               '\t\tdefault: \n'
               '\t\t\tcout << "\\n\\n\\t\\t\\t       Your choice is not '
               'available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\n'
               '\t\t} // switch\n'
               '\t} // for\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2207,
          lineno=228,
          tokens=220,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='void F_Developers() {\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                           A '
               'B O U T        \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\tcout << "\\n\\t\\t\\t\\t\'AliBazar\' Online Shopping '
               'Aplication " << endl << endl;\n'
               '\tcout << "\\t\\t\\t  Team Name: EightSoft " << endl;\n'
               '\tcout << "\\t\\t\\t  Team Section: OOP2 - '
               '004                         " << endl;\n'
               '\tcout << "\\t\\t\\t  Team Members: " << endl;\n'
               '\tcout << "                             '
               '-----------------------------------------------\\n";\n'
               '\tcout << "\\t\\t\\t\\t      Alimov Abdullokh  '
               '[U1910060]\\n\\t\\t\\t\\t      Zokirov Rustam [U1910049] " << '
               'endl;\n'
               '\tcout << "                             '
               '-----------------------------------------------\\n";\n'
               '\n'
               '\tcout << "\\n\\n\\t\\t           Press any keyboard for back '
               'to Menu \\n\\n" << endl;\n'
               '\tsystem("pause");\n'
               '\tF_General_Menu();\n'
               '}F_Developers()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2208,
          lineno=245,
          tokens=56,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo',
          body='void F_Logo() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                    8. '
               'Account Info         \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '}F_Logo()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2209,
          lineno=252,
          tokens=65,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logo_Owner',
          body='void F_Logo_Owner() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "        A L I B A Z A '
               'R                                                  O W N E R  '
               'M E N U         \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '}F_Logo_Owner()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2210,
          lineno=260,
          tokens=200,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='void F_Owner_Main_Menu() {\n'
               '\t// Entering as a Owner of shop\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo_Owner();\n'
               '\t\tcout << "      Main Menu\\n\\n";\n'
               '\t\tcout << "      1. Products in stock \\n\\n";\n'
               '\t\tcout << "      2. Customers list \\n\\n";\n'
               '\t\tcout << "      0. Back\\n\\n";\n'
               '\t\tcout << "      Your choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\t  F_Owner_Products_Stotage();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 50: {\n'
               '\t\t\t/*F_Owner_Customers_List();*/\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                           C U S T O M E R S  '
               'L I S T        \\n";\n'
               '\t\t\tcout << "______'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2211,
          lineno=260,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='F_Owner_Main_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2212,
          lineno=280,
          tokens=178,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Main_Menu',
          body='______________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\n\\t\\t\\t   Customers list :" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      User Name  : " << Name_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Telephone  : " << TellNum_Memory << '
               'endl << endl << endl;\n'
               '\t\t\t\n'
               '\t\t\tsystem("pause");\n'
               '\t\t} break;\n'
               '\n'
               '\t\t\n'
               '\t\tcase 48: {  // Back to Menu\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tk = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch \n'
               '\t} // for loop \n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2213,
          lineno=303,
          tokens=122,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='void F_Owner_Products_Stotage(){\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tF_Logo_Owner();\n'
               '\t\tcout << "  Products List                                '
               'Category                    Price          In Stock\\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\tcout << " 1. Potatoes, Weight                          '
               'Vegetables & Fruits          " << '
               'Test.get_price_potatoes()                << "\\t\\t  " << '
               'Test.get_storage_quantity_potatoes()               << endl;\n'
               '\t\tcout << " 2. Yellow Carrot, Weight                     '
               'Vegetables & '),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2214,
          lineno=303,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='F_Owner_Products_Stotage()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2215,
          lineno=309,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='Fruits          " << Test.get_price_carrot()                  '
               '<< "\\t\\t  " << '
               'Test.get_storage_quantity_carrot()                 << endl;\n'
               '\t\tcout << " 3. Onion, Weight                             '
               'Vegetables & Fruits          " << '
               'Test.get_price_onion()                   << "\\t\\t  " << '
               'Test.get_storage_quantity_onion()                  << endl;\n'
               '\t\tcout << " 4. Water, Hydrolife without gas 750ml        '
               'Water & Beverages            " << '
               'Test1.get_price_water_hydrolife_750ml()  << "\\t\\t  " << '
               'Test1.get_storage_quantity_water_hydrolife_750ml() << endl;\n'
               '\t\tcout << '),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2216,
          lineno=312,
          tokens=157,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='" 5. Drink, Aloe Original 500ml                Water & '
               'Beverages            " << '
               'Test1.get_price_drink_aloe_500ml()       << "\\t\\t  " << '
               'Test1.get_storage_quantity_drink_aloe_500ml()      << endl;\n'
               '\t\tcout << " 6. Nectar, Zet Apple 125ml                   '
               'Water & Beverages            " << '
               'Test1.get_price_nectar_zet_125ml()       << "\\t\\t  " << '
               'Test1.get_storage_quantity_nectar_zet_125ml()      << endl;\n'
               '\t\tcout << " 7. Bun Smart Food                            '
               'Bread & Bakery Products      " << '
               'Test2.get_price_bun_smart_food()         << "\\t\\t  " << '
               'Test2.get_'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2217,
          lineno=314,
          tokens=164,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='storage_quantity_bun_smart_food()        << endl;\n'
               '\t\tcout << " 8. Cracker Tuc cheese 100g                   '
               'Bread & Bakery Products      " << '
               'Test2.get_price_cracker_tuc_cheese_100g() << "\\t\\t  " << '
               'Test2.get_storage_quantity_cracker_tuc_cheese_100g() << endl;\n'
               '\t\tcout << " 9. Bread Of SAMARKAND                        '
               'Bread & Bakery Products      " << '
               'Test2.get_price_bread_samarkand()         << "\\t\\t  " << '
               'Test2.get_storage_quantity_bread_samarkand() << endl;\n'
               '\t\tcout << " \\n 0. Back\\n";\n'
               '\t\tcout << " Make changes in: ";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1': \t\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2218,
          lineno=322,
          tokens=166,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Potatoes, Weight                          '
               'Vegetables & Fruits             " << Test.get_price_potatoes() '
               '<< "\\t\\t " << '
               'Test.get_storage_quantity_potatoes()+Test.get_storage_quantity_potatoes() '
               '<< endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n";\n'
               '\t\t\t\t\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << " Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2219,
          lineno=333,
          tokens=214,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest.set_price_potatoes(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << " Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\tTest.set_storage_quantity_potatoes(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\t\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '2':\t\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2220,
          lineno=364,
          tokens=159,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t    for (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Yellow Carrot, Weight                     '
               'Vegetables & Fruits             " << Test.get_price_carrot() '
               '<< "\\t\\t " << Test.get_storage_quantity_carrot() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 3. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2221,
          lineno=374,
          tokens=214,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest.set_price_carrot(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\n'
               '\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\tTest.set_storage_quantity_carrot(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '3': \t\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2222,
          lineno=406,
          tokens=157,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t    for (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Onion, Weight                             '
               'Vegetables & Fruits             " << Test.get_price_onion() << '
               '"\\t\\t " << Test.get_storage_quantity_onion() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2223,
          lineno=416,
          tokens=213,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest.set_price_onion(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\tTest.set_storage_quantity_onion(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '4':\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2224,
          lineno=446,
          tokens=178,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Water, Hydrolife without gas 750ml        '
               'Water & Beverages               " << '
               'Test1.get_price_water_hydrolife_750ml() << "\\t\\t " << '
               'Test1.get_storage_quantity_water_hydrolife_750ml() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2225,
          lineno=457,
          tokens=229,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\t\n'
               '\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest1.set_price_water_hydrolife_750ml(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\t\t\t\t\t\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\t'
               'Test1.set_storage_quantity_water_hydrolife_750ml(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '5': \t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2226,
          lineno=488,
          tokens=173,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Drink, Aloe Original 500ml                '
               'Water & Beverages               " << '
               'Test1.get_price_drink_aloe_500ml() << "\\t\\t " << '
               'Test1.get_storage_quantity_drink_aloe_500ml() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2227,
          lineno=499,
          tokens=227,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\n'
               '\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest1.set_price_drink_aloe_500ml(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\n'
               '\t\t\t\t\t\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\t'
               'Test1.set_storage_quantity_drink_aloe_500ml(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '6':\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2228,
          lineno=531,
          tokens=175,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Nectar, Zet Apple 125ml                   '
               'Water & Beverages               " << '
               'Test1.get_price_nectar_zet_125ml() << "\\t\\t " << '
               'Test1.get_storage_quantity_nectar_zet_125ml() << endl;\n'
               '\t\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\t\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2229,
          lineno=542,
          tokens=225,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest1.set_price_nectar_zet_125ml(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\t'
               'Test1.set_storage_quantity_nectar_zet_125ml(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '7':\t\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2230,
          lineno=572,
          tokens=163,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Bun Smart Food                            '
               'Bread & Bakery Products         " << '
               'Test2.get_price_bun_smart_food() << "\\t\\t " << '
               'Test2.get_storage_quantity_bun_smart_food() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\t\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2231,
          lineno=582,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest2.set_price_bun_smart_food(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\t'
               'Test2.set_storage_quantity_bun_smart_food(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '8':\t\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2232,
          lineno=612,
          tokens=177,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Cracker Tuc cheese 100g                   '
               'Bread & Bakery Products         " << '
               'Test2.get_price_cracker_tuc_cheese_100g() << "\\t\\t " << '
               'Test2.get_storage_quantity_cracker_tuc_cheese_100g() << endl;\n'
               '\t\t\t\tcout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2233,
          lineno=622,
          tokens=230,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest2.set_price_cracker_tuc_cheese_100g(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\t\t\t\t\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\t'
               'Test2.set_storage_quantity_cracker_tuc_cheese_100g(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '9':\t\t\t\n"),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2234,
          lineno=652,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\n  '
               'Product                                     '
               'Category                     Price         In Stock\\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\t\tcout << " Bread Of SAMARKAND                        '
               'Bread & Bakery Products         " << '
               'Test2.get_price_bread_samarkand() << "\\t\\t " << '
               'Test2.get_storage_quantity_bread_samarkand() << endl;\n'
               '\t \t\t    cout << "\\n 1. Change price \\n 2. Change the '
               "quantity in storage\\n 0. Go back \\n Press '1' or '2' or "
               '\'0\'\\n\\n ";\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\tcout << "Enter a new price: ";\n'
               '\t\t\t\t\tcin >> price;\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2235,
          lineno=662,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\t\n'
               '\t\t\t\t\tif (price >= 0) {\n'
               '\t\t\t\t\t\tTest2.set_price_bread_samarkand(price);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Price cannot be negative! Please check '
               'one more time.\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tcout << "Enter a new quantity in storage: ";\n'
               '\t\t\t\t\tcin >> quantity;\t\t\t\t\t\n'
               '\t\t\t\t\tif (quantity > 0) {\n'
               '\t\t\t\t\t\t'
               'Test2.set_storage_quantity_bread_samarkand(quantity);\n'
               '\t\t\t\t\t\tcout << " Successfully changed!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2236,
          lineno=681,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body='\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Quantity cannot be negative\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' \n"
               "\t\t\t}// 'for' loop \n"
               '\t\t\tbreak;\n'
               "\t\tcase '0': {  // Back to Menu\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               "\t\tcase 'i' || 'I': { // User info   \n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\n\\t\\t\\t   User Information:" << endl;;\n'
               '\t\t\tcout << "\\t\\t    _______________________________" << '
               'endl << endl;;\n'
               '\t\t\tcout << "\\t\\t      User Name  '),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2237,
          lineno=702,
          tokens=144,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Products_Stotage',
          body=': " << Name_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t      Telephone  : " << TellNum_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Login      : " << Login_Memory << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t      Password   : " << Parol_Memory << '
               'endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t\n'
               '\t\tdefault: { cout << "\\n\\t\\t      Your choice is not '
               'available in Menu" << endl;\n'
               '\t\t\tcout << "\\t\\tPlease press any keyboard to continue '
               'program\\n" << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} \n'
               '\t\t\n'
               '\t} // for loop for products in stock  \n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2238,
          lineno=719,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Owner_Customers_List',
          body='void F_Owner_Customers_List(){\n'
               '\tsystem("cls");\n'
               '\tofstream User_1_Info;\n'
               '\tUser_1_Info.open("User_Info.txt");  // Opening File\n'
               '\t// Setting User Info to Memory\n'
               '\tUser_1_Info << Name_Memory << endl;\n'
               '\tUser_1_Info << TellNum_Memory << endl;\n'
               '\t//User_1_Info.close();\n'
               '\tcout << "\\n\\t\\t\\t   Customers list :" << endl;;\n'
               '\tcout << "\\t\\t    _______________________________" << endl '
               '<< endl;;\n'
               '\tcout << "\\t\\t      User Name  : " << Name_Memory << endl;\n'
               '\tcout << "\\t\\t      Telephone  : " << TellNum_Memory << '
               'endl << endl << endl;\n'
               '\tsystem("pause");\n'
               '}F_Owner_Customers_List()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2239,
          lineno=735,
          tokens=157,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='void F_User_Main_Menu() {\n'
               '\t// Entering as a Guest\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories\\n\\n";\n'
               '\t\tcout << "      1. Vegetables & Fruits\\n\\n";\n'
               '\t\tcout << "      2. Water & Beverages\\n\\n";\n'
               '\t\tcout << "      3. Bread & Bakery Products\\n\\n";\n'
               '\t\tcout << "      4. Cart and Overall Sums\\n\\n";\n'
               '\t\tcout << "      0. Go Back\\n\\n";\n'
               '\t\tcout << "      Your choice: ";\n'
               '\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'
               '\t\t\tF_Vegetables_Fruits_Menu();\n'
               '\t\t} bre'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2240,
          lineno=735,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='F_User_Main_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2241,
          lineno=750,
          tokens=121,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='ak;\n'
               '\n'
               '\t\tcase 50: {\n'
               '\t\t\tF_Water_Beverages_Menu();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 51: {\n'
               '\t\t\tF_Bread_Bakery_Menu();\n'
               '\t\t}\n'
               '\t\tcase 52:\n'
               '\t\t{\n'
               '\t\t\tF_Cart_Check();\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tcase 48: {  // Back to Menu\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\ti = 1000;\n'
               '\t\t\tF_Sign_in();\n'
               '\t\t} break;\n'
               '\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2242,
          lineno=773,
          tokens=216,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_User_Main_Menu',
          body='\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch \n'
               '\t} // for loop \n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2243,
          lineno=792,
          tokens=10,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Table_For_Increasing_And_Decreasing',
          body='F_Table_For_Increasing_And_Decreasing()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2244,
          lineno=792,
          tokens=93,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Table_For_Increasing_And_Decreasing',
          body='void F_Table_For_Increasing_And_Decreasing() {\n'
               '\n'
               '\tcout << "     (+)   \'Press 1\'                        '
               '\\n";\n'
               '\tcout << "     (-)   \'Press 2\'                        '
               '\\n";\n'
               '\tcout << "     (0)   \'Back\'                           '
               '\\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\tcout << "     Add to Cart:  \\n";\n'
               '\t//cin >> VariableForIncreasingAndDecreasing;\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2245,
          lineno=802,
          tokens=131,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='void F_Vegetables_Fruits_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories -> Vegetables & Fruits \\t\\t '
               'Cart \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << " 1. Potatoes, Weight \\t\\t\\t\\t\\t"; cout << '
               'Test.get_quantity_potatoes() << " (kg)" << endl;\n'
               '\t\tcout << "    " << Test.get_price_potatoes() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\tcout << " 2. Yello'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2246,
          lineno=802,
          tokens=9,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='F_Vegetables_Fruits_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2247,
          lineno=809,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='w Carrot, Weight \\t\\t\\t\\t"; cout << '
               'Test.get_quantity_carrot() << " (kg)" << endl;\n'
               '\t\tcout << "    " << Test.get_price_carrot() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\tcout << " 3. Onion, Weight \\t\\t\\t\\t\\t"; cout << '
               'Test.get_quantity_onion() << " (kg)" << endl;\n'
               '\t\tcout << "    " << Test.get_price_onion() << " UZS for 1 '
               'kg\\n\\n";\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\t\t// for potatoes\n'
               '\t\tcase 49: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2248,
          lineno=818,
          tokens=137,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Vegetables & Fruits '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Potatoes, Weight \\t\\t\\t\\t\\t"; cout '
               '<< Test.get_quantity_potatoes() << " (kg)" << endl;\n'
               '\t\t\t\tcout << "     " << Test.get_price_potatoes() << " UZS '
               'for 1 kg\\n\\n";\n'
               '\t\t\t\t//\n'
               '\t\t\t\t\n'
               '\t            F_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\t\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2249,
          lineno=830,
          tokens=119,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Test.get_storage_quantity_potatoes() > 0) { // '
               'checking for storage and user needs\n'
               '\t\t\t\t\t\tTest.set_quantity_potatoes_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Potatoes (kg): " << '
               'Test.get_quantity_potatoes() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2250,
          lineno=842,
          tokens=164,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Test.get_quantity_potatoes() > 0) { // Check for '
               '(-1 kg)\n'
               '\t\t\t\t\t\tTest.set_quantity_potatoes_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Potatoes (kg): " << '
               'Test.get_quantity_potatoes() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for potato\n"
               "\t\t\t}// 'for' loop for potato\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // case 2 - for carrot\n'
               '\t\tcase 50: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2251,
          lineno=859,
          tokens=146,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t// Rustam have changed\n'
               '\t\t\t\tcout << "      Categories -> Vegetables & Fruits '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Yellow Carrot, Weight \\t\\t\\t\\t"; '
               'cout << Test.get_quantity_carrot() << " (kg)" << endl;\n'
               '\t\t\t\tcout << "     " << Test.get_price_carrot() << " UZS '
               'for 1 kg\\n\\n";\n'
               '\t\t\t\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\n'
               '\t\t\t\t\t//\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2252,
          lineno=873,
          tokens=122,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Test.get_storage_quantity_carrot() > 0) { // '
               'checking for storage and user needs\n'
               '\t\t\t\t\t\tTest.set_quantity_carrot_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Carrot (kg): " << '
               'Test.get_quantity_carrot() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\t//\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2253,
          lineno=887,
          tokens=164,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Test.get_quantity_carrot() > 0) { // Check for '
               '(-1 kg)\n'
               '\t\t\t\t\t\tTest.set_quantity_carrot_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Carrot (kg): " << '
               'Test.get_quantity_carrot() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (kg) cannot  decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for carrot\n"
               "\t\t\t}// 'for' loop for carrot\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // case 3 - for onion\n'
               '\t\tcase 51: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2254,
          lineno=904,
          tokens=143,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t// Rustam have changed\n'
               '\t\t\t\tcout << "      Categories -> Vegetables & Fruits '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Onion, Weight \\t\\t\\t\\t\\t"; cout << '
               'Test.get_quantity_onion() << " (kg)" << endl;\n'
               '\t\t\t\tcout << "     " << Test.get_price_onion() << " UZS for '
               '1 kg\\n\\n";\n'
               '\t\t\t\t//\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\t\t\t\t\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2255,
          lineno=916,
          tokens=195,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\tif (Test.get_storage_quantity_onion() > 0) { // '
               'checking for storage and user needs\n'
               '\t\t\t\t\t\tTest.set_quantity_onion_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Onion (kg): " << '
               'Test.get_quantity_onion() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t       \t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tif (Test.get_quantity_onion() > 0) { // Check for '
               '(-1 kg)\n'
               '\t\t\t\t\t\tTest.set_quantity_onion_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Onion (kg): " << '
               'Test.get_quantity_onion() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2256,
          lineno=934,
          tokens=161,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='\t\t\t\t\telse { cout << " 0 (kg) cannot  decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for onion\n"
               "\t\t\t}// 'for' loop for onion\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << '
               '"_____________________________________________________'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2257,
          lineno=951,
          tokens=188,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Vegetables_Fruits_Menu',
          body='_______________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\t\n'
               '\t\t} // switch ends\n'
               '\t} // loop ends\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2258,
          lineno=968,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='F_Water_Beverages_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2259,
          lineno=968,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='void F_Water_Beverages_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories -> Water & Beverages \\t\\t\\t '
               'Cart \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << " 1. Water, Hydrolife without gas 750ml '
               '\\t\\t\\t"; cout << Test1.get_quantity_water_hydrolife_750ml() '
               '<< " (pc)" << endl;\n'
               '\t\tcout << "    " << Test1.get_price_water_hydrolife_750ml() '
               '<< " UZS for 1 pc\\n\\n";\n'
               '\t\tcout << " 2. Drin'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2260,
          lineno=975,
          tokens=174,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='k, Aloe Original 500ml \\t\\t\\t\\t"; cout << '
               'Test1.get_quantity_drink_aloe_500ml() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Test1.get_price_drink_aloe_500ml() << " '
               'UZS for 1 pc\\n\\n";\n'
               '\t\tcout << " 3. Nectar, Zet Apple 125ml \\t\\t\\t\\t"; cout '
               '<< Test1.get_quantity_nectar_zet_125ml() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Test1.get_price_nectar_zet_125ml() << " '
               'UZS for 1 pc\\n\\n";\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2261,
          lineno=983,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Water & Beverages '
               '\\t\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Water, Hydrolife without gas 750ml '
               '\\t\\t  "; cout << Test1.get_quantity_water_hydrolife_750ml() '
               '<< " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << '
               'Test1.get_price_water_hydrolife_750ml() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2262,
          lineno=993,
          tokens=140,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif '
               '(Test1.get_storage_quantity_water_hydrolife_750ml() > 0) { // '
               'checking for storage and user needs\n'
               '\t\t\t\t\t\t'
               'Test1.set_quantity_water_hydrolife_750ml_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'Test1.get_quantity_water_hydrolife_750ml() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2263,
          lineno=1005,
          tokens=190,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Test1.get_quantity_water_hydrolife_750ml() > 0) '
               '{ // Check for (-1 kg)\n'
               '\t\t\t\t\t\t'
               'Test1.set_quantity_water_hydrolife_750ml_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'Test1.get_quantity_water_hydrolife_750ml() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for water\n"
               "\t\t\t}// 'for' loop for water\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // case 2 - for drink_aloe_500ml\n'
               '\t\tcase 50: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2264,
          lineno=1022,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t// Rustam have changed\n'
               '\t\t\t\tcout << "      Categories -> Water & Beverages '
               '\\t\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Drink, Aloe Original 500ml \\t\\t\\t  "; '
               'cout << Test1.get_quantity_drink_aloe_500ml() << " (pc)" << '
               'endl;\n'
               '\t\t\t\tcout << "     " << Test1.get_price_drink_aloe_500ml() '
               '<< " UZS for 1 pc\\n\\n";\n'
               '\t\t\t\t//\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2265,
          lineno=1033,
          tokens=137,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Test1.get_storage_quantity_drink_aloe_500ml() > '
               '0) { // checking for storage and user needs\n'
               '\t\t\t\t\t\t'
               'Test1.set_quantity_drink_aloe_500ml_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'Test1.get_quantity_drink_aloe_500ml() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2266,
          lineno=1045,
          tokens=192,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Test1.get_quantity_drink_aloe_500ml() > 0) { // '
               'Check for (-1 kg)\n'
               '\t\t\t\t\t\t'
               'Test1.set_quantity_drink_aloe_500ml_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bottles (pc): " << '
               'Test1.get_quantity_drink_aloe_500ml() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) cannot  decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for aloe drink\n"
               "\t\t\t}// 'for' loop for aloe drink\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // case 3 - for nectar_zet_125ml\n'
               '\t\tcase 51: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2267,
          lineno=1062,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t// Rustam have changed\n'
               '\t\t\t\tcout << "      Categories -> Water & Beverages '
               '\\t\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Nectar, Zet Apple 125ml \\t\\t\\t\\t"; '
               'cout << Test1.get_quantity_nectar_zet_125ml() << " (pc)" << '
               'endl;\n'
               '\t\t\t\tcout << "     " <<Test1.get_price_nectar_zet_125ml() '
               '<< " UZS for 1 pc\\n\\n";\n'
               '\t\t\t\t//\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'
               '\t\t\t\t\t//\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2268,
          lineno=1074,
          tokens=239,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\tif (Test1.get_storage_quantity_nectar_zet_125ml() > '
               '0) { // checking for storage and user needs\n'
               '\t\t\t\t\t\t'
               'Test1.set_quantity_nectar_zet_125ml_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Nectar 125ml (pc): " << '
               'Test1.get_quantity_nectar_zet_125ml() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tif (Test1.get_quantity_nectar_zet_125ml() > 0) { // '
               'Check for (-1 kg)\n'
               '\t\t\t\t\t\t'
               'Test1.set_quantity_nectar_zet_125ml_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Nectar 125ml (pc): " << '
               'Test1.get_quantity_nectar_zet_125ml() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2269,
          lineno=1092,
          tokens=173,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='\t\t\t\t\telse { cout << " 0 (pc) cannot  decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for nectar_zet_125ml\n"
               "\t\t\t}// 'for' loop for nectar_zet_125ml\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << "___________________________________________'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2270,
          lineno=1109,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Water_Beverages_Menu',
          body='_________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\n'
               '\t} // loop ends\n'
               '\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2271,
          lineno=1128,
          tokens=139,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='void F_Bread_Bakery_Menu() {\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tF_Logo();\n'
               '\t\tcout << "      Categories -> Bread & Bakery Products '
               '\\t\\t Cart \\n";\n'
               '\t\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t\tcout << " 1. Bun Smart Food \\t\\t\\t\\t\\t"; cout << '
               'Test2.get_quantity_bun_smart_food() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Test2.get_price_bun_smart_food() << " '
               'UZS for 1 pc\\n\\n";\n'
               '\t\tcout << " 2. Cracker Tuc cheese 1'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2272,
          lineno=1128,
          tokens=8,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='F_Bread_Bakery_Menu()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2273,
          lineno=1135,
          tokens=167,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='00g \\t\\t\\t\\t"; cout << '
               'Test2.get_quantity_cracker_tuc_cheese_100g() << " (pc)" << '
               'endl;\n'
               '\t\tcout << "    " << '
               'Test2.get_price_cracker_tuc_cheese_100g() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\tcout << " 3. Bread Of SAMARKAND \\t\\t\\t\\t\\t"; cout << '
               'Test2.get_quantity_bread_samarkand() << " (pc)" << endl;\n'
               '\t\tcout << "    " << Test2.get_price_bread_samarkand() << " '
               'UZS for 1 pc\\n\\n";\n'
               '\t\tcout << " 0. Back\\n\\n";\n'
               '\t\tcout << " Your choice: ";\n'
               '\t\tswitch (_getch()) {\n'
               '\t\tcase 49: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2274,
          lineno=1143,
          tokens=136,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "      Categories -> Bread & Bakery Products '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Bun Smart Food \\t\\t\\t\\t\\t"; cout << '
               'Test2.get_quantity_bun_smart_food() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << Test2.get_price_bun_smart_food() << '
               '" UZS for 1 pc\\n\\n";\n'
               '\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2275,
          lineno=1153,
          tokens=129,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (Test2.get_storage_quantity_bun_smart_food() > 0) '
               '{ // checking for storage and user needs\n'
               '\t\t\t\t\t\tTest2.set_quantity_bun_smart_food_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bun Smart Food (pc): " << '
               'Test2.get_quantity_bun_smart_food() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2276,
          lineno=1165,
          tokens=184,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (Test2.get_quantity_bun_smart_food() > 0) { // '
               'Check for (-1 pc)\n'
               '\t\t\t\t\t\tTest2.set_quantity_bun_smart_food_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bun Smart Food (pc): " << '
               'Test2.get_quantity_bun_smart_food() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) can not decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bun bread\n"
               "\t\t\t}// 'for' loop for bun bread\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // case 2 - for cracker_tuc_cheese_100g\n'
               '\t\tcase 50: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2277,
          lineno=1182,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t// Rustam have changed\n'
               '\t\t\t\tcout << "      Categories -> Bread & Bakery Products '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Cracker Tuc cheese 100g  \\t\\t\\t\\t"; '
               'cout << Test2.get_quantity_cracker_tuc_cheese_100g() << " '
               '(pc)" << endl;\n'
               '\t\t\t\tcout << "     " << '
               'Test2.get_price_cracker_tuc_cheese_100g() << " UZS for 1 '
               'pc\\n\\n";\n'
               '\t\t\t\t//\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2278,
          lineno=1193,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\t\n'
               '\t\t\t\t\tif '
               '(Test2.get_storage_quantity_cracker_tuc_cheese_100g() > 0) { '
               '// checking for storage and user needs\n'
               '\t\t\t\t\t\t'
               'Test2.set_quantity_cracker_tuc_cheese_100g_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Cracker Tuc Cheese 100g '
               '(pc): " << Test2.get_quantity_cracker_tuc_cheese_100g() << '
               'endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t\t\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2279,
          lineno=1207,
          tokens=214,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (Test2.get_quantity_cracker_tuc_cheese_100g() > '
               '0) { // Check for (-1 pc)\n'
               '\t\t\t\t\t\t'
               'Test2.set_quantity_cracker_tuc_cheese_100g_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Cracker Tuc Cheese 100g '
               '(pc): " << Test2.get_quantity_cracker_tuc_cheese_100g() << '
               'endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse { cout << " 0 (pc) cannot  decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for cracker_tuc_cheese_100g\n"
               "\t\t\t}// 'for' loop for cracker_tuc_cheese_100g\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // case 3 - for bread_samarkand\n'
               '\t\tcase 51: {\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2280,
          lineno=1224,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\tfor (int j = 0; j < 1000; j++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t// Rustam have changed\n'
               '\t\t\t\tcout << "      Categories -> Bread & Bakery Products '
               '\\t\\t Cart \\n";\n'
               '\t\t\t\tcout << '
               '"____________________________________________________________________________________________________\\n";\n'
               '\t\t\t\tcout << "     Bread Of SAMARKAND \\t\\t\\t\\t  "; cout '
               '<< Test2.get_quantity_bread_samarkand() << " (pc)" << endl;\n'
               '\t\t\t\tcout << "     " << Test2.get_price_bread_samarkand() '
               '<< " UZS for 1 pc\\n\\n";\n'
               '\t\t\t\t\n'
               '\t\t\t\tF_Table_For_Increasing_And_Decreasing();\n'
               '\t\t\t\tswitch (_getch()) {\n'
               '\t\t\t\tcase 49:\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2281,
          lineno=1235,
          tokens=233,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\tif (Test2.get_storage_quantity_bread_samarkand() > '
               '0) { // checking for storage and user needs\n'
               '\t\t\t\t\t\t'
               'Test2.set_quantity_bread_samarkand_incrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bread Of SAMARKAND (pc): " '
               '<< Test2.get_quantity_bread_samarkand() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully added \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\telse {\n'
               '\t\t\t\t\t\tcout << " Product is over / finished. Sorry!\\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 50:\n'
               '\t\t\t\t\tif (Test2.get_quantity_bread_samarkand() > 0) { // '
               'Check for (-1 pc)\n'
               '\t\t\t\t\t\t'
               'Test2.set_quantity_bread_samarkand_decrementing();\n'
               '\t\t\t\t\t\tcout << " Quantity of Bread Of SAMARKAND (pc): " '
               '<< Test2.get_quantity_bread_samarkand() << endl;\n'
               '\t\t\t\t\t\tcout << "   Successfully decreased \\n";\n'
               '\t\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2282,
          lineno=1253,
          tokens=168,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='\t\t\t\t\telse { cout << " 0 (pc) cannot  decrease \\n"; '
               'Sleep(0700); Sleep(0700); }\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 48:\n'
               '\t\t\t\t\tj = 1000;\n'
               '\t\t\t\t\tbreak;\n'
               "\t\t\t\t}// 'switch' for bread_samarkand\n"
               "\t\t\t}// 'for' loop for bread_samarkand\n"
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t\t   // Back to F_User menu \n'
               '\t\tcase 48: {   k = 1000;\n'
               '\t\t\tF_User_Main_Menu(); }\n'
               '\t\t\t   break;\n'
               '\t\tcase 56: { // User info   \n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\t\t\tcout << "        A L I B A Z A '
               'R                                                   U S E R  I '
               'N F O         \\n";\n'
               '\t\t\tcout << "____________________________________________'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2283,
          lineno=1270,
          tokens=187,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Bread_Bakery_Menu',
          body='________________________________________________________\\n\\n";\n'
               '\t\t\tcout << "\\t\\t\\t\\t    User Information:" << endl << '
               'endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      User Name  : " << Name_Memory '
               '<< endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Telephone  : " << '
               'TellNum_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Login      : " << '
               'Login_Memory << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t      Password   : " << '
               'Parol_Memory << endl << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\tdefault: { cout << "\\n\\n\\t\\t\\t       Your choice is '
               'not available in Menu." << endl;\n'
               '\t\t\tcout << "\\t\\t\\t\\t    Please enter correct keys.\\n" '
               '<< endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t} // switch ends\n'
               '\n'
               '\t} // loop ends\n'
               '\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2284,
          lineno=1290,
          tokens=239,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='void F_Cart_Check() {\n'
               '\tsystem("cls");\n'
               '\tcout << '
               '"____________________________________________________________________________________________________ '
               '\\n";\n'
               '\tcout << "                                              C A R '
               'T \\n";\n'
               '\tcout << '
               '"____________________________________________________________________________________________________\\n\\n";\n'
               '\t// Check\n'
               '\tfor (int i = 1; i <= 1; i++) {\n'
               '\t\tif (Test.get_quantity_potatoes() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Potatoes, Weight    " '
               '<< Test.get_quantity_potatoes() << " (kg)     Price: " << '
               'Test.get_quantity_potatoes() * Test.get_price_potatoes();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test.get_quantity_potatoes() * '
               'Test.get_price_potatoes();\n'
               '\t\t}\n'
               '\t\tif (Test.get_quantity_carrot() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Carrot, Weight      " '
               '<< Test.get_quantity_carrot() << " (kg)     Price: " << '
               'Test.get_quantity_carrot() * Test.get_price_carrot();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test.get_quantity_carrot() * '
               'Test.get_price_carrot();\n'
               '\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2285,
          lineno=1290,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='F_Cart_Check()'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2286,
          lineno=1307,
          tokens=215,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (Test.get_quantity_onion() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Onion, Weight       " '
               '<< Test.get_quantity_onion() << " (kg)     Price: " << '
               'Test.get_quantity_onion() * Test.get_price_onion();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test.get_quantity_onion() * '
               'Test.get_price_onion();\n'
               '\t\t}\n'
               '\t\tif (Test1.get_quantity_drink_aloe_500ml() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Aloe 500ml          " '
               '<< Test1.get_quantity_drink_aloe_500ml() << " (pc)     Price: '
               '" << Test1.get_quantity_drink_aloe_500ml() * '
               'Test1.get_price_drink_aloe_500ml();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test1.get_quantity_drink_aloe_500ml() * '
               'Test1.get_price_drink_aloe_500ml();\n'
               '\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2287,
          lineno=1317,
          tokens=128,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (Test1.get_quantity_nectar_zet_125ml() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Nectar Zet 125ml    " '
               '<< Test1.get_quantity_nectar_zet_125ml() << " (pc)     Price: '
               '" << Test1.get_quantity_nectar_zet_125ml() * '
               'Test1.get_price_nectar_zet_125ml();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test1.get_quantity_nectar_zet_125ml() * '
               'Test1.get_price_nectar_zet_125ml();\n'
               '\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2288,
          lineno=1322,
          tokens=134,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (Test1.get_quantity_water_hydrolife_750ml() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Hydrolife 750ml     " '
               '<< Test1.get_quantity_water_hydrolife_750ml() << " (pc)     '
               'Price: " << Test1.get_quantity_water_hydrolife_750ml() * '
               'Test1.get_price_water_hydrolife_750ml();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += '
               'Test1.get_quantity_water_hydrolife_750ml() * '
               'Test1.get_price_water_hydrolife_750ml();\n'
               '\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2289,
          lineno=1327,
          tokens=228,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (Test2.get_quantity_bread_samarkand() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Samarkand Bread ,   " '
               '<< Test2.get_quantity_bread_samarkand() << " (pc)     Price: " '
               '<< Test2.get_quantity_bread_samarkand() * '
               'Test2.get_price_bread_samarkand();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test2.get_quantity_bread_samarkand() * '
               'Test2.get_price_bread_samarkand();\n'
               '\t\t}\n'
               '\t\tif (Test2.get_quantity_bun_smart_food() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Bun Smart Food ,    " '
               '<< Test2.get_quantity_bun_smart_food() << " (pc)     Price: " '
               '<< Test2.get_quantity_bun_smart_food() * '
               'Test2.get_price_bun_smart_food();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += Test2.get_quantity_bun_smart_food() * '
               'Test2.get_price_bun_smart_food();\n'
               '\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2290,
          lineno=1337,
          tokens=213,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (Test2.get_quantity_cracker_tuc_cheese_100g() > 0) {\n'
               '\t\t\tcout << "\\n\\t  " << i << "." << "Tuc Cheese 100g ,   " '
               '<< Test2.get_quantity_cracker_tuc_cheese_100g() << " (pc)     '
               'Price: " << Test2.get_quantity_cracker_tuc_cheese_100g() * '
               'Test2.get_price_cracker_tuc_cheese_100g();\n'
               '\t\t\ti++;\n'
               '\t\t\tOverall_Sum += '
               'Test2.get_quantity_cracker_tuc_cheese_100g() * '
               'Test2.get_price_cracker_tuc_cheese_100g();\n'
               '\t\t}\n'
               '\n'
               '\t\tif (i == 1) { // if nothing go to Menu\n'
               '\t\t\tcout << "\\n\\t You do not have any product in '
               'CART.\\n";\n'
               '\t\t\tcout << "\\tEnter any keyboard go to Menu\\n\\n" << '
               'endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tOverall_Sum = 0;\n'
               '\t\t\tF_User_Main_Menu();\n'
               '\t\t}\n'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2291,
          lineno=1350,
          tokens=193,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Cart_Check',
          body='\t\tif (i > 1) { // Menu for buying or back \n'
               '\t\t\tcout << "\\n\\n\\t\\t Overall Price: " << Overall_Sum << '
               '" Sum" << endl;\n'
               '\t\t\tcout << "\\n 1. Buy it now" << endl;\n'
               '\t\t\tcout << " 0. Go Back to Menu" << endl;\n'
               '\n'
               '\t\t\tswitch (_getch()) {\n'
               '\t\t\tcase 49: { //buy\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\t////\n'
               '\t\t\t\t// We need to add\n'
               '\t\t\t\t////\n'
               '\t\t\t\tcout << "Works !" << endl;\n'
               '\t\t\t\tsystem("pause");\n'
               '\t\t\t}\n'
               '\t\t\t\t   break;\n'
               '\t\t\tcase 48: { // Back\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tOverall_Sum = 0;\n'
               '\t\t\t\tF_User_Main_Menu();\n'
               '\t\t\t}\n'
               '\t\t\t\t   break;\n'
               '\t\t\tdefault: F_Cart_Check();\n'
               '\t\t\t} // switch ends\n'
               '\n'
               '\t\t} //if ends\n'
               '\n'
               '\t}// loop end\n'
               '\t//system("pause");\n'
               '}'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2292,
          lineno=17,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2293,
          lineno=20,
          tokens=3,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='price',
          body='int price;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2294,
          lineno=21,
          tokens=3,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='quantity',
          body='int quantity;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2295,
          lineno=22,
          tokens=5,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Overall_Sum',
          body='int Overall_Sum;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2296,
          lineno=32,
          tokens=5,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_1',
          body='Security User_1;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2297,
          lineno=33,
          tokens=9,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Test',
          body='Product_VegetablesFruits Test;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2298,
          lineno=34,
          tokens=9,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Test1',
          body='Product_WaterBeverages Test1;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2299,
          lineno=35,
          tokens=9,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Test2',
          body='Product_BreadBakery Test2;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2300,
          lineno=105,
          tokens=6,
          depth=12,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_1_Info',
          body='ofstream User_1_Info;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2301,
          lineno=186,
          tokens=6,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_1_Info',
          body='ifstream User_1_Info;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2302,
          lineno=721,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='User_1_Info',
          body='ofstream User_1_Info;'),
 Fragment(document_cs='c1b27715d6dd931d7af13fe9985c251d69bfe143ccf001995b4ceae2fda0b542',
          id=2303,
          lineno=1,
          tokens=109,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Bread_Bakery_Menu F_Cart_Check F_Developers '
               'F_General_Menu F_Logo F_Logo_Owner F_Owner_Customers_List '
               'F_Owner_Main_Menu F_Owner_Products_Stotage F_Sign_in '
               'F_Table_For_Increasing_And_Decreasing F_User_Main_Menu '
               'F_Vegetables_Fruits_Menu F_Water_Beverages_Menu main\n'
               '  Variables: Overall_Sum Test Test1 Test2 User_1 User_1_Info '
               'price quantity\n'
               '  Using: std\n'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2304,
          lineno=12,
          tokens=155,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Education',
          body='class Education {\n'
               'protected:\n'
               '\tint HPQ;\n'
               'public:\n'
               '\tEducation() {\n'
               '\t\tHPQ = 0;\n'
               '\t}\n'
               '\tvoid getdata() {\n'
               '\t\t\tcout << "\\n1. Undergraduate     2. Graduate     3. '
               'Masters Degree     4. PHD\\n";\n'
               '\t\t\tcout << "Enter Educational Qualification: " ;\n'
               '\t\t\tcin >> HPQ;\n'
               '\t\t\tif (HPQ == 1 || HPQ == 2 || HPQ == 3 || HPQ == 4) {\n'
               '\t\t\t}\n'
               '\t\t\telse {\n'
               '\t\t\t\tcout << "Invalid Educational Qualification. Try one '
               'more time.\\n";\n'
               '\t\t\t\t//Sleep(0700); Sleep(0700);\n'
               '\t\t\t\tEducation::getdata();\n'
               '\t\t\t}\n'
               '\t}\n'
               '\n'
               '\tvoid showdata() {\n'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2305,
          lineno=33,
          tokens=109,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Education',
          body='\t\tif (HPQ == 1) {\n'
               '\t\t\tcout << "Educational Qualification: Undergraduate\\n";\n'
               '\t\t}\n'
               '\t\telse if (HPQ == 2) {\n'
               '\t\t\tcout << "Educational Qualification: Graduate\\n";\n'
               '\t\t}\n'
               '\t\telse if (HPQ == 3) {\n'
               '\t\t\tcout << "Educational Qualification: Masters Degree\\n";\n'
               '\t\t}\n'
               '\t\telse if (HPQ == 4) {\n'
               '\t\t\tcout << "Educational Qualification: PHD\\n";\n'
               '\t\t}\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2306,
          lineno=48,
          tokens=119,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Staff',
          body='class Staff {\n'
               'protected:\n'
               '\tstring code;\n'
               '\tstring name;\n'
               'public:\n'
               '\tStaff() {\n'
               '\t\tcode = "0000";\n'
               '\t\tname = "Unknown";\n'
               '\t}\n'
               '\tvoid getdata_name() {\n'
               '\t\tcout << "Enter employee name: " ; cin >> name;\n'
               '\t}\n'
               '\tvoid getdata_code() {\n'
               '\t\tcout << "Enter employee code: " ; cin >> code;\n'
               '\t}\n'
               '\tvoid showdata_name() {\n'
               '\t\tcout << "Employee name: " << name << endl;\n'
               '\t}\n'
               '\tvoid showdata_code() {\n'
               '\t\tcout << "Employee code: " << code << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2307,
          lineno=71,
          tokens=150,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Teacher',
          body='class Teacher : public Staff, public Education {\n'
               'protected:\n'
               '\tstring subject;\n'
               '\tint publications;\n'
               'public:\n'
               '\n'
               '\tTeacher() {\n'
               '\t\tsubject = "Unknown";\n'
               '\t\tpublications = 0;\n'
               '\t}\n'
               '\tvoid getdata() {\n'
               '\t\tStaff::getdata_code();\n'
               '\t\tStaff::getdata_name();\n'
               '\t\tEducation::getdata();\n'
               '\t\tcout << "Enter subject: " ; cin >> subject;\n'
               '\t\tcout << "Enter number of publications: " ; cin >> '
               'publications;\n'
               '\t}\n'
               '\tvoid showdata() {\n'
               '\t\tStaff::showdata_code();\n'
               '\t\tStaff::showdata_name();\n'
               '\t\tEducation::showdata();\n'
               '\t\tcout << "Subject: " << subject << endl << "Publications: " '
               '<< publications << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2308,
          lineno=96,
          tokens=121,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Officer',
          body='class Officer : public Staff, public Education {\n'
               'protected:\n'
               '\tfloat grade;\n'
               'public:\n'
               '\tOfficer() {\n'
               '\t\tgrade = 0.0;\n'
               '\t}\n'
               '\tvoid getdata() {\n'
               '\t\tStaff::getdata_code();\n'
               '\t\tStaff::getdata_name();\n'
               '\t\tEducation::getdata();\n'
               '\t\tcout << "Enter the grade: ";  cin >> grade;\n'
               '\t}\n'
               '\tvoid showdata() {\n'
               '\t\tStaff::showdata_code();\n'
               '\t\tStaff::showdata_name();\n'
               '\t\tEducation::showdata();\n'
               '\t\tcout << "Officer Grade: " << grade << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2309,
          lineno=117,
          tokens=107,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Typist',
          body='class Typist : public Staff {\n'
               'protected:\n'
               '\tint speed;\n'
               'public:\n'
               '\tTypist() {\n'
               '\t\tspeed = 0;\n'
               '\t}\n'
               '\tvoid getdata() {\n'
               '\t\tStaff::getdata_code();\n'
               '\t\tStaff::getdata_name();\n'
               '\t\tcout << "Enter the speed (wprds/min): "; cin >> speed;\n'
               '\t}\n'
               '\tvoid showdata() {\n'
               '\t\tStaff::showdata_code();\n'
               '\t\tStaff::showdata_name();\n'
               '\t\tcout << "Speed (words/min): " << speed << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2310,
          lineno=136,
          tokens=97,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Regular_Typist',
          body='class Regular_Typist : public Typist {\n'
               'protected:\n'
               '\tfloat monthly_salary;\n'
               'public:\n'
               '\tRegular_Typist() {\n'
               '\t\tmonthly_salary = 0.0;\n'
               '\t}\n'
               '\tvoid getdata() {\n'
               '\t\tTypist::getdata();\n'
               '\t\tcout << "Enter the monthly salary: "; cin >> '
               'monthly_salary;\n'
               '\t}\n'
               '\tvoid showdata() {\n'
               '\t\tTypist::showdata();\n'
               '\t\tcout << "Monthly salary: " << monthly_salary << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2311,
          lineno=153,
          tokens=102,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Casual_Typist',
          body='class Casual_Typist : public Typist {\n'
               'protected:\n'
               '\tfloat daily_wage;\n'
               'public:\n'
               '\tCasual_Typist() {\n'
               '\t\tdaily_wage = 0.0;\n'
               '\t}\n'
               '\tvoid getdata() {\n'
               '\t\tTypist::getdata();\n'
               '\t\tcout << "Enter the daily wage: "; cin >> daily_wage;\n'
               '\t}\n'
               '\tvoid showdata() {\n'
               '\t\tTypist::showdata();\n'
               '\t\tcout << "Daily wage: " << daily_wage << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2312,
          lineno=14,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='HPQ',
          body='int HPQ;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2313,
          lineno=50,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='code',
          body='string code;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2314,
          lineno=51,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2315,
          lineno=73,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='subject',
          body='string subject;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2316,
          lineno=74,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='publications',
          body='int publications;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2317,
          lineno=98,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='grade',
          body='float grade;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2318,
          lineno=119,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='speed',
          body='int speed;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2319,
          lineno=138,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='monthly_salary',
          body='float monthly_salary;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2320,
          lineno=155,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='daily_wage',
          body='float daily_wage;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2321,
          lineno=10,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='F_First_Program_Menu()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2322,
          lineno=16,
          tokens=15,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Education',
          body='Education()Education() {\n\t\tHPQ = 0;\n\t}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2323,
          lineno=53,
          tokens=20,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Staff',
          body='Staff()Staff() {\n'
               '\t\tcode = "0000";\n'
               '\t\tname = "Unknown";\n'
               '\t}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2324,
          lineno=77,
          tokens=21,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Teacher',
          body='Teacher() {\n'
               '\t\tsubject = "Unknown";\n'
               '\t\tpublications = 0;\n'
               '\t}Teacher()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2325,
          lineno=100,
          tokens=18,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Officer',
          body='Officer() {\n\t\tgrade = 0.0;\n\t}Officer()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2326,
          lineno=121,
          tokens=15,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Typist',
          body='Typist() {\n\t\tspeed = 0;\n\t}Typist()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2327,
          lineno=140,
          tokens=23,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Regular_Typist',
          body='Regular_Typist() {\n'
               '\t\tmonthly_salary = 0.0;\n'
               '\t}Regular_Typist()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2328,
          lineno=157,
          tokens=26,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Casual_Typist',
          body='Casual_Typist() {\n\t\tdaily_wage = 0.0;\n\t}Casual_Typist()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2329,
          lineno=170,
          tokens=21,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\t//\n'
               '\tF_First_Program_Menu();\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2330,
          lineno=170,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2331,
          lineno=177,
          tokens=194,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='void F_First_Program_Menu() {\n'
               '\t// objects\n'
               '\tTeacher teacher;\n'
               '\tOfficer officer;\n'
               '\tRegular_Typist regular;\n'
               '\tCasual_Typist casual;\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "\\tM A I N  M E N U\\n";\n'
               '\t\tcout << "      =====================\\n";\n'
               '\t\tcout << " 1. Teacher\\n";\n'
               '\t\tcout << " 2. Officer\\n";\n'
               '\t\tcout << " 3. Typist\\n";\n'
               '\t\tcout << " 0. Back\\n";\n'
               '\t\tcout << " Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t T E A C H E R\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tteacher.getdata();\n'
               '\t\t\tcout << "\\n\\n\\tThe given information'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2332,
          lineno=177,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='F_First_Program_Menu()'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2333,
          lineno=200,
          tokens=128,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body=':\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tteacher.showdata();\n'
               '\t\t\tcout << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t O F F I C E R\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tofficer.getdata();\n'
               '\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\tcout << "===================================\\n";\n'
               '\t\t\tofficer.showdata();\n'
               '\t\t\tcout << endl << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2334,
          lineno=220,
          tokens=225,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='\t\t\tfor (int l = 0; l < 1000; l++) {\n'
               '\t\t\t\tsystem("cls");\n'
               '\t\t\t\tcout << "\\t T Y P I S T\\n";\n'
               '\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\tcout << " 1. Regular typist\\n"; cout << " 2. Casual '
               'typist\\n"; cout << " 0. Back\\n"; cout << " Your choice: '
               '\\n";\n'
               '\t\t\t\tswitch (_getch())\n'
               '\t\t\t\t{\n'
               "\t\t\t\tcase '1': {\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tcout << "\\t R E G U L A R  T Y P I S T\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\t\tregular.getdata();\n'
               '\t\t\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\t\tregular.showdata();\n'
               '\t\t\t\t\tcout << endl << endl;\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t}\n'
               '\t\t\t\t\t\tbreak;\n'
               '\n'
               "\t\t\t\tcase '2': {\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tcout << "\\t C A S U A L  T Y P I S T\\n";\n'
               '\t\t\t\t\tcout << "======================'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2335,
          lineno=243,
          tokens=242,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program_Menu',
          body='=============\\n";\n'
               '\t\t\t\t\tcasual.getdata();\n'
               '\t\t\t\t\tcout << "\\n\\n\\tThe given information:\\n";\n'
               '\t\t\t\t\tcout << "===================================\\n";\n'
               '\t\t\t\t\tcasual.showdata();\n'
               '\t\t\t\t\tcout << endl << endl;\n'
               '\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t}\n'
               '\t\t\t\t\t\tbreak;\n'
               "\t\t\t\tcase '0': {\n"
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tl = 1000;\n'
               '\t\t\t\t}break;\n'
               '\t\t\t\tdefault: {cout << endl << endl;\n'
               '\t\t\t\t\tcout << "\\t\\t Your choice is not abailable in '
               'Menu. \\n\\t\\t Please try one more time.\\n";\n'
               '\t\t\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t\t\t}break;\n'
               '\t\t\t\t} // switch\n'
               '\t\t\t} // for\n'
               '\t\t}break;\n'
               "\t\tcase '0': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tk = 1000;\n'
               '\t\t} break;\n'
               '\t\tdefault: { cout << endl << endl;\n'
               '\t\t\tcout << "\\t\\t Your choice is not abailable in Menu. '
               '\\n\\t\\t Please try one more time.\\n";\n'
               '\t\t\tSleep(0700); Sleep(0700);\n'
               '\t\t}break;\n'
               '\t\t} // switch \n'
               '\t} // for loop\n'
               '}'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2336,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2337,
          lineno=179,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='teacher',
          body='Teacher teacher;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2338,
          lineno=180,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='officer',
          body='Officer officer;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2339,
          lineno=181,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='regular',
          body='Regular_Typist regular;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2340,
          lineno=182,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='casual',
          body='Casual_Typist casual;'),
 Fragment(document_cs='c1d13890d1a73350dbffb4f846ea79b196e8bc4d76e98816d899dfc422be5aeb',
          id=2341,
          lineno=1,
          tokens=93,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Casual_Typist Education Officer Regular_Typist '
               'Staff Teacher Typist\n'
               '  Functions: Casual_Typist Education F_First_Program_Menu '
               'Officer Regular_Typist Staff Teacher Typist main\n'
               '  Fields: HPQ code daily_wage grade monthly_salary name '
               'publications speed subject\n'
               '  Variables: casual officer regular teacher\n'
               '  Using: std\n'
               '  Usages: getdata getdata_code getdata_name showdata '
               'showdata_code showdata_name\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2342,
          lineno=18,
          tokens=234,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='City',
          body='class City {\n'
               'protected:\n'
               '\tint cityID; \n'
               '\tstring cityName;\n'
               '\tdouble cityClimateDate[12];\n'
               '\n'
               'public:\n'
               '\t// inputing the data for ID and name\n'
               '\tvoid input() {\n'
               '\t\tcout << "Enter ID of the city: ";\n'
               '\t\tcin >> cityID;\n'
               '\t\tcout << "Enter Name of the city: ";\n'
               '\t\tcin >> cityName;\n'
               '\t}\n'
               '\n'
               '\tint getCityID() { \n'
               '\t\treturn cityID;\n'
               '\t}\n'
               '\n'
               '\tvoid setCityID(int cityID) { \n'
               '\t\tthis->cityID = cityID;\n'
               '\t}\n'
               '\n'
               '\tstring getCityName() { \n'
               '\t\treturn cityName;\n'
               '\t}\n'
               '\n'
               '\tvoid setCityName(string cityName) {\n'
               '\t\tthis->cityName = cityName;\n'
               '\t}\n'
               '\n'
               '\t// diplaying with the binary files\n'
               '\tvoid GetData() {\n'
               '\t\tcout << "ID        NAME         J   F   M   A   M   I   '
               'I   A   S   O   N   D\\n";\n'
               '\t\tcout << left << setw(10) << cityID << setw(10) << cityName '
               '<< "   ";\n'
               '\t}\n'
               '\n'
               '\tvirtual void setClimateData() = 0; // virtual functions\n'
               '\tvirtual void getClimateData() = 0;\n'
               '\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2343,
          lineno=60,
          tokens=208,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CityTemperature',
          body='class CityTemperature : public City\n'
               '{\n'
               'protected:\n'
               '\tdouble average = 0;\n'
               '\n'
               'public:\n'
               '\n'
               '\tvoid setClimateData() {\n'
               '\t\taverage = 0;\n'
               '\t\tCity::input();\n'
               '\n'
               '\t\tcout << "Enter Temperature Degree:  " << endl;\n'
               '\n'
               '\t\tfor (int i = 0; i < 12; i++) {\n'
               '\t\t\tcout  << i+1 << " Month: ";\n'
               '\n'
               '\t\t\tcin >> cityClimateDate[i];\n'
               '\t\t\t // validation check\n'
               '\t\t\tif (cityClimateDate[i] > -60 && cityClimateDate[i] < 60) '
               '{\n'
               '\t\t\t\taverage = average + cityClimateDate[i];\n'
               '\t\t\t}\n'
               '\t\t\telse { \n'
               '\t\t\t\tcout << "Please check your input! " << endl;\n'
               '\t\t\t\ti--; // checking and returning\n'
               '\t\t\t}\n'
               '\t\t} // for ends\n'
               '\n'
               '\t}\n'
               '\n'
               '\t// for displaying from file\n'
               '\tvoid getClimateData() {\n'
               '\n'
               '\t\tCity::GetData();\n'
               '\n'
               '\t\tint array = 0;\n'
               '\t\tfor (int i = 0; i < 4; i++) {\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2344,
          lineno=96,
          tokens=79,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CityTemperature',
          body='\t\t\tfor (int j = 0; j < 3; j++) {\n'
               '\t\t\t\tcout << cityClimateDate[array] << "   ";\n'
               '\t\t\t\tarray++;\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\t// claculating the average temperature\n'
               '\t\tcout << "\\nAverage Temperature: " << average / 12.0 << '
               'endl << endl; \n'
               '\t\tarray = 0;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2345,
          lineno=108,
          tokens=201,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CityRainFall',
          body='class CityRainFall : public City\n'
               '{\n'
               'protected:\n'
               '\tdouble average = 0; // average for calculating\n'
               '\n'
               'public:\n'
               '\n'
               '\tvoid setClimateData() {\n'
               '\t\taverage = 0;\n'
               '\t\tCity::input();\n'
               '\n'
               '\t\tcout << "Enter Rainfall Degree:  " << endl;\n'
               '\n'
               '\t\tfor (int i = 0; i < 12; i++) {\n'
               '\t\t\tcout << i+1 << " Month: ";\n'
               '\n'
               '\t\t\tcin >> cityClimateDate[i];\n'
               '\n'
               '\t\t\tif (cityClimateDate[i] > 0 && cityClimateDate[i] < 300) '
               '{\n'
               '\t\t\t\taverage = average + cityClimateDate[i];\n'
               '\t\t\t}\n'
               '\t\t\telse {\n'
               '\t\t\t\tcout << "Please check your input! " << endl;\n'
               '\t\t\t\ti--; // checking and returning\n'
               '\t\t\t}\n'
               '\t\t} // for ends\n'
               '\n'
               '\t}\n'
               '\n'
               '\tvoid getClimateData() {\n'
               '\n'
               '\t\tCity::GetData();\n'
               '\n'
               '\t\tint array = 0;\n'
               '\t\tfor (int i = 0; i < 4; i++) {\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2346,
          lineno=143,
          tokens=72,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CityRainFall',
          body='\t\t\tfor (int j = 0; j < 3; j++) {\n'
               '\t\t\t\tcout << cityClimateDate[array] << "   ";\n'
               '\t\t\t\tarray++;\n'
               '\t\t\t}\n'
               '\t\t\t;\n'
               '\t\t}\n'
               '\t\tcout << "\\nAverage Rainfall: " << average / 12.0 << endl '
               '<< endl;\n'
               '\t\tarray = 0;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2347,
          lineno=155,
          tokens=196,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CityHumidity',
          body='class CityHumidity : public City\n'
               '{\n'
               'protected:\n'
               '\tdouble average = 0;\n'
               '\n'
               'public:\n'
               '\n'
               '\tvoid setClimateData() {\n'
               '\t\taverage = 0;\n'
               '\t\tCity::input();\n'
               '\n'
               '\t\tcout << "Enter Humidity Degree:  " << endl;\n'
               '\n'
               '\t\tfor (int i = 0; i < 12; i++) {\n'
               '\t\t\tcout << i+1 << " Month: ";\n'
               '\n'
               '\t\t\tcin >> cityClimateDate[i];\n'
               '\n'
               '\t\t\tif (cityClimateDate[i] > 0 && cityClimateDate[i] < 500) '
               '{\n'
               '\t\t\t\taverage = average + cityClimateDate[i];\n'
               '\t\t\t}\n'
               '\t\t\telse {\n'
               '\t\t\t\tcout << "Please check your input! " << endl;\n'
               '\t\t\t\ti--; // checking and returning\n'
               '\t\t\t}\n'
               '\t\t} // for ends\n'
               '\n'
               '\t}\n'
               '\n'
               '\tvoid getClimateData() {\n'
               '\n'
               '\t\tCity::GetData();\n'
               '\n'
               '\t\tint array = 0;\n'
               '\t\tfor (int i = 0; i < 4; i++) {\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2348,
          lineno=190,
          tokens=70,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='CityHumidity',
          body='\t\t\tfor (int j = 0; j < 3; j++) {\n'
               '\t\t\t\tcout << cityClimateDate[array] << "   ";\n'
               '\t\t\t\tarray++;\n'
               '\t\t\t}\n'
               '\t\t\t\n'
               '\t\t}\n'
               '\t\tcout << "\\nAverage Humidity: " << average / 12.0 << endl '
               '<< endl;\n'
               '\t\tarray = 0;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2349,
          lineno=20,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='cityID',
          body='int cityID;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2350,
          lineno=21,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='cityName',
          body='string cityName;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2351,
          lineno=63,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='average',
          body='double average = 0;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2352,
          lineno=111,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='average',
          body='double average = 0;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2353,
          lineno=158,
          tokens=6,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='average',
          body='double average = 0;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2354,
          lineno=13,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2355,
          lineno=14,
          tokens=240,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CityTemperatureInfo',
          body='CityTemperatureInfo()void CityTemperatureInfo() {\n'
               '\n'
               '\tCityTemperature Temperature; // creating an object\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t\tcout << "City Temperature Information: \\n";\n'
               '\t\tcout << "1. Add\\n";\n'
               '\t\tcout << "2. Update\\n";\n'
               '\t\tcout << "3. Delete\\n";\n'
               '\t\tcout << "0. Go Back\\n";\n'
               '\n'
               '\t\tcout << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "ADD DATA TO CITY\\n";\n'
               '\t\t\tcout << "Enter temperature data of city: " << endl;\n'
               '\t\t\t// Add to List\n'
               '\t\t\tofstream outTemperature("Temperature", ios::binary | '
               'ios::app); // opening a binary file\n'
               '\t\t\tTemperature.setClimateData();\n'
               '\t\t\t// writing data to file\n'
               '\t\t\toutTemperature.write((char*)&Temperature, '
               'sizeof(CityTemperature));\n'
               '\t\t\toutTemperature.close();\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tifstream inP("Temperature", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2356,
          lineno=15,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='CityRainFallInfo()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2357,
          lineno=16,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='CityHumidityInfo()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2358,
          lineno=201,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CityTemperatureInfo',
          body='CityTemperatureInfo()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2359,
          lineno=236,
          tokens=175,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityTemperatureInfo',
          body='\t\t\twhile (inP.read((char*)&Temperature, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\t\tTemperature.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\t\t// searching the city by its ID\n'
               '\t\t\tint ID;\n'
               '\t\t\tcout << "\\nEnter ID of city which you want to delete: '
               '";\n'
               '\t\t\tcin >> ID;\n'
               '\n'
               '\t\t\tifstream inTemperature1;\n'
               '\t\t\tinTemperature1.open("Temperature", ios::binary);\n'
               '\t\t\twhile (inTemperature1.read((char*)&Temperature, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\t\tif (ID == Temperature.getCityID()) {\n'
               '\t\t\t\t\tTemperature.getClimateData();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tinTemperature1.close();\n'
               '\n'
               '\t\t\tofstream inTemperatureTemp1("TemperatureTemp", '
               'ios::binary);\n'
               '\t\t\tifstream inTemperature("Temperature", ios::binary);\n'
               '\t\t\t// reading file\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2360,
          lineno=258,
          tokens=198,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityTemperatureInfo',
          body='\t\t\twhile (inTemperature1.read((char*)&Temperature, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\t\tif (ID != Temperature.getCityID()) {\n'
               '\t\t\t\t\tinTemperatureTemp1.write((char*)&Temperature, '
               'sizeof(CityTemperature));\n'
               '\t\t\t\t}\n'
               '\n'
               '\t\t\t}\n'
               '\t\t\tinTemperature1.close();\n'
               '\t\t\tinTemperatureTemp1.close();\n'
               '\t\t\t\n'
               '\t\t\t// removing and renaming the files\n'
               '\t\t\tremove("Temperature");\n'
               '\t\t\trename("TemperatureTemp", "Temperature");\n'
               '\n'
               '\t\t\tofstream out;\n'
               '\t\t\tout.open("Temperature", ios::binary | ios::app);\n'
               '\t\t\tcout << "Update data:" << endl;\n'
               '\t\t\tTemperature.setClimateData();\n'
               '\t\t\tout.write((char*)&Temperature, '
               'sizeof(CityTemperature));\n'
               '\t\t\tout.close();\n'
               '\t\t\tcout << "\\nSuccessfully updated" << endl;\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tcout << "DELETING DATA FROM CITY\\n";\n'
               '\n'
               '\t\t\tifstream inP("Temperature", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2361,
          lineno=288,
          tokens=210,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityTemperatureInfo',
          body='\t\t\twhile (inP.read((char*)&Temperature, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\t\tTemperature.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\t\t\t// searching the city by its ID\n'
               '\t\t\tint ID;\n'
               '\t\t\tcout << "Enter ID of city which you want to delete: ";\n'
               '\t\t\tcin >> ID;\n'
               '\n'
               '\t\t\tofstream outTemperatureTemp("TemperatureTemp", '
               'ios::binary);\n'
               '\t\t\tifstream inTemperature("Temperature", ios::binary);\n'
               '\t\t\twhile (inTemperature.read((char*)&Temperature, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\t\tif (ID != Temperature.getCityID()) {\n'
               '\t\t\t\t\toutTemperatureTemp.write((char*)&Temperature, '
               'sizeof(CityTemperature));\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tinTemperature.close();\n'
               '\t\t\toutTemperatureTemp.close();\n'
               '\n'
               '\t\t\tremove("Temperature");\n'
               '\t\t\trename("TemperatureTemp", "Temperature");\n'
               '\n'
               '\t\t\tcout << "\\nSuccessfully deleted" << endl;\n'
               '\t\t\tcout << "The new list:\\n";\n'
               '\n'
               '\t\t\tifstream inP2("Temperature", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2362,
          lineno=314,
          tokens=109,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityTemperatureInfo',
          body='\t\t\twhile (inP2.read((char*)&Temperature, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\t\tTemperature.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP2.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '0': {\n"
               '\t\t\tmain();\n'
               '\t\t}break;\n'
               '\n'
               '\n'
               '\t\tdefault: {\n'
               '\t\t\tcout << "Your choice is not available in menu!\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t} // switch\n'
               '\n'
               '\t} // for loop\n'
               '\n'
               '\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2363,
          lineno=339,
          tokens=232,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='void CityRainFallInfo() {\n'
               '\n'
               '\tCityRainFall R;\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t\tcout << "City RainFall Information: \\n";\n'
               '\t\tcout << "1. Add\\n";\n'
               '\t\tcout << "2. Update\\n";\n'
               '\t\tcout << "3. Delete\\n";\n'
               '\t\tcout << "4. Displaying all\\n";\n'
               '\t\tcout << "0. Go Back\\n";\n'
               '\n'
               '\t\tcout << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "ADD DATA TO CITY\\n";\n'
               '\t\t\tcout << "Enter RainFall data of city: " << endl;\n'
               '\t\t\t// Add to List\n'
               '\t\t\tofstream outR("R", ios::binary | ios::app);\n'
               '\t\t\tR.setClimateData();\n'
               '\t\t\toutR.write((char*)&R, sizeof(CityRainFall));\n'
               '\t\t\toutR.close();\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tifstream inP("R", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2364,
          lineno=339,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='CityRainFallInfo()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2365,
          lineno=374,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='\t\t\twhile (inP.read((char*)&R, sizeof(CityRainFall))) {\n'
               '\t\t\t\tR.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\t\t// searching the city by its ID\n'
               '\t\t\tint ID;\n'
               '\t\t\tcout << "\\nEnter ID of city which you want to delete: '
               '";\n'
               '\t\t\tcin >> ID;\n'
               '\n'
               '\t\t\tifstream inR1;\n'
               '\t\t\tinR1.open("R", ios::binary);\n'
               '\t\t\twhile (inR1.read((char*)&R, sizeof(CityRainFall))) {\n'
               '\t\t\t\tif (ID == R.getCityID()) {\n'
               '\t\t\t\t\tR.getClimateData();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tinR1.close();\n'
               '\n'
               '\t\t\tofstream inRTemp1("RTemp", ios::binary);\n'
               '\t\t\tifstream inR("R", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2366,
          lineno=395,
          tokens=190,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='\t\t\twhile (inR1.read((char*)&R, sizeof(CityRainFall))) {\n'
               '\t\t\t\tif (ID != R.getCityID()) {\n'
               '\t\t\t\t\tinRTemp1.write((char*)&R, sizeof(CityRainFall));\n'
               '\t\t\t\t}\n'
               '\n'
               '\t\t\t}\n'
               '\t\t\tinR1.close();\n'
               '\t\t\tinRTemp1.close();\n'
               '\n'
               '\t\t\tremove("R");\n'
               '\t\t\trename("RTemp", "R");\n'
               '\n'
               '\t\t\tofstream out;\n'
               '\t\t\tout.open("R", ios::binary | ios::app);\n'
               '\t\t\tcout << "Update data:" << endl;\n'
               '\t\t\tR.setClimateData();\n'
               '\t\t\tout.write((char*)&R, sizeof(CityRainFall));\n'
               '\t\t\tout.close();\n'
               '\t\t\tcout << "\\nSuccessfully updated" << endl;\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tcout << "DELETING DATA FROM CITY\\n";\n'
               '\n'
               '\t\t\tifstream inP("R", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2367,
          lineno=424,
          tokens=212,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='\t\t\twhile (inP.read((char*)&R, sizeof(CityRainFall))) {\n'
               '\t\t\t\tR.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\t\t\t// searching the city by its ID\n'
               '\t\t\tint ID;\n'
               '\t\t\tcout << "Enter ID of city which you want to delete: ";\n'
               '\t\t\tcin >> ID;\n'
               '\n'
               '\t\t\tofstream outRTemp("RTemp", ios::binary);\n'
               '\t\t\tifstream inR("R", ios::binary);\n'
               '\t\t\twhile (inR.read((char*)&R, sizeof(CityRainFall))) {\n'
               '\t\t\t\tif (ID != R.getCityID()) {\n'
               '\t\t\t\t\toutRTemp.write((char*)&R, sizeof(CityRainFall));\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tinR.close();\n'
               '\t\t\toutRTemp.close();\n'
               '\n'
               '\t\t\tremove("R");\n'
               '\t\t\trename("RTemp", "R");\n'
               '\n'
               '\t\t\tcout << "\\nSuccessfully deleted" << endl;\n'
               '\t\t\tcout << "The new list:\\n";\n'
               '\n'
               '\t\t\tifstream inP2("R", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2368,
          lineno=450,
          tokens=109,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityRainFallInfo',
          body='\t\t\twhile (inP2.read((char*)&R, sizeof(CityRainFall))) {\n'
               '\t\t\t\tR.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP2.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '0': {\n"
               '\t\t\tmain();\n'
               '\t\t}break;\n'
               '\n'
               '\n'
               '\t\tdefault: {\n'
               '\t\t\tcout << "Your choice is not available in menu!\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t} // switch\n'
               '\n'
               '\t} // for loop\n'
               '\n'
               '\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2369,
          lineno=475,
          tokens=229,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='void CityHumidityInfo() {\n'
               '\n'
               '\tCityHumidity Humidity;\n'
               '\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\n'
               '\t\tcout << "City Humidity Information: \\n";\n'
               '\t\tcout << "1. Add\\n";\n'
               '\t\tcout << "2. Update\\n";\n'
               '\t\tcout << "3. Delete\\n";\n'
               '\t\tcout << "0. Go Back\\n";\n'
               '\n'
               '\t\tcout << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "ADD DATA TO CITY\\n";\n'
               '\t\t\tcout << "Enter Humidity data of city: " << endl;\n'
               '\t\t\t// Add to List\n'
               '\t\t\tofstream outHumidity("Humidity", ios::binary | '
               'ios::app);\n'
               '\t\t\tHumidity.setClimateData();\n'
               '\t\t\toutHumidity.write((char*)&Humidity, '
               'sizeof(CityHumidity));\n'
               '\t\t\toutHumidity.close();\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tifstream inP("Humidity", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2370,
          lineno=475,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='CityHumidityInfo()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2371,
          lineno=509,
          tokens=183,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='\t\t\twhile (inP.read((char*)&Humidity, sizeof(CityHumidity))) '
               '{\n'
               '\t\t\t\tHumidity.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\t\t// searching the city by its ID\n'
               '\t\t\tint ID;\n'
               '\t\t\tcout << "\\nEnter ID of city which you want to delete: '
               '";\n'
               '\t\t\tcin >> ID;\n'
               '\n'
               '\t\t\tifstream inHumidity1;\n'
               '\t\t\tinHumidity1.open("Humidity", ios::binary);\n'
               '\t\t\twhile (inHumidity1.read((char*)&Humidity, '
               'sizeof(CityHumidity))) {\n'
               '\t\t\t\tif (ID == Humidity.getCityID()) {\n'
               '\t\t\t\t\tHumidity.getClimateData();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tinHumidity1.close();\n'
               '\n'
               '\t\t\tofstream inHumidityTemp1("HumidityTemp", ios::binary);\n'
               '\t\t\tifstream inHumidity("Humidity", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2372,
          lineno=530,
          tokens=204,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='\t\t\twhile (inHumidity1.read((char*)&Humidity, '
               'sizeof(CityHumidity))) {\n'
               '\t\t\t\tif (ID != Humidity.getCityID()) {\n'
               '\t\t\t\t\tinHumidityTemp1.write((char*)&Humidity, '
               'sizeof(CityHumidity));\n'
               '\t\t\t\t}\n'
               '\n'
               '\t\t\t}\n'
               '\t\t\tinHumidity1.close();\n'
               '\t\t\tinHumidityTemp1.close();\n'
               '\n'
               '\t\t\tremove("Humidity");\n'
               '\t\t\trename("HumidityTemp", "Humidity");\n'
               '\n'
               '\t\t\tofstream out;\n'
               '\t\t\tout.open("Humidity", ios::binary | ios::app);\n'
               '\t\t\tcout << "Update data:" << endl;\n'
               '\t\t\tHumidity.setClimateData();\n'
               '\t\t\tout.write((char*)&Humidity, sizeof(CityHumidity));\n'
               '\t\t\tout.close();\n'
               '\t\t\tcout << "\\nSuccessfully updated" << endl;\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tcout << "DELETING DATA FROM CITY\\n";\n'
               '\n'
               '\t\t\tifstream inP("Humidity", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2373,
          lineno=559,
          tokens=228,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='\t\t\twhile (inP.read((char*)&Humidity, sizeof(CityHumidity))) '
               '{\n'
               '\t\t\t\tHumidity.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\t\t\t// searching the city by its ID\n'
               '\t\t\tint ID;\n'
               '\t\t\tcout << "Enter ID of city which you want to delete: ";\n'
               '\t\t\tcin >> ID;\n'
               '\n'
               '\t\t\tofstream outHumidityTemp("HumidityTemp", ios::binary);\n'
               '\t\t\tifstream inHumidity("Humidity", ios::binary);\n'
               '\t\t\twhile (inHumidity.read((char*)&Humidity, '
               'sizeof(CityHumidity))) {\n'
               '\t\t\t\tif (ID != Humidity.getCityID()) {\n'
               '\t\t\t\t\toutHumidityTemp.write((char*)&Humidity, '
               'sizeof(CityHumidity));\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tinHumidity.close();\n'
               '\t\t\toutHumidityTemp.close();\n'
               '\n'
               '\t\t\tremove("Humidity");\n'
               '\t\t\trename("HumidityTemp", "Humidity");\n'
               '\n'
               '\t\t\tcout << "\\nSuccessfully deleted" << endl;\n'
               '\t\t\tcout << "The new list:\\n";\n'
               '\n'
               '\t\t\tifstream inP2("R", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2374,
          lineno=585,
          tokens=111,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CityHumidityInfo',
          body='\t\t\twhile (inP2.read((char*)&Humidity, '
               'sizeof(CityRainFall))) {\n'
               '\t\t\t\tHumidity.getClimateData();\n'
               '\t\t\t}\n'
               '\t\t\tinP2.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '0': {\n"
               '\t\t\tmain();\n'
               '\t\t}break;\n'
               '\n'
               '\n'
               '\t\tdefault: {\n'
               '\t\t\tcout << "Your choice is not available in menu!\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\t   break;\n'
               '\t\t} // switch\n'
               '\n'
               '\t} // for loop\n'
               '\n'
               '\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2375,
          lineno=610,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main() {\n'
               '\tfor (int i = 0; i < 1000; i++) {\n'
               '\t\tsystem("cls");\n'
               '\t\t\n'
               '\t\tcout << "Main Menu: \\n";\n'
               '\t\tcout << "1. City temperature information\\n";\n'
               '\t\tcout << "2. City rainfall information\\n";\n'
               '\t\tcout << "3. City humadity information\\n";\n'
               '\t\tcout << "4. Dispalaying all\\n";\n'
               '\t\n'
               '\t\tcout << "Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\n'
               "\t\tcase '1': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tCityTemperatureInfo();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               '\t\tca'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2376,
          lineno=610,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2377,
          lineno=631,
          tokens=127,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body="se '2': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tCityRainFallInfo();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '3': {\n"
               '\t\t\tsystem("cls");\n'
               '\t\t\tCityHumidityInfo();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}break;\n'
               '\n'
               "\t\tcase '4':{\n"
               '\t\tsystem("cls");\n'
               '\t\tcout << "DISPLAYING ALL\\n";\n'
               '\t\t/*CityTemperature Temperature1; // creating an object\n'
               '\t\tCityRainFall R1;\n'
               '\t\tCityHumidity Humidity1;\n'
               '\n'
               '\t\tcout << "TEMPERATURE:\\n";\n'
               '\t\tifstream inP("Temperature", ios::binary);\n'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2378,
          lineno=652,
          tokens=236,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\twhile (inP.read((char*)&Temperature1, '
               'sizeof(CityTemperature))) {\n'
               '\t\t\tTemperature1.getClimateData();\n'
               '\t\t}\n'
               '\t\tinP.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\tcout << "RAINFALL:\\n";\n'
               '\t\tifstream inP1("R", ios::binary);\n'
               '\t\twhile (inP1.read((char*)&R1, sizeof(CityRainFall))) {\n'
               '\t\t\tR1.getClimateData();\n'
               '\t\t}\n'
               '\t\tinP1.close();\t\t\t// closing the files after execution\n'
               '\n'
               '\t\tcout << "HUMIDITY:\\n";\n'
               '\t\tifstream inP2("R", ios::binary);\n'
               '\t\twhile (inP2.read((char*)&Humidity1, sizeof(CityRainFall))) '
               '{\n'
               '\t\t\tHumidity1.getClimateData();\n'
               '\t\t}\n'
               '\t\tinP2.close();\t\t\t// closing the files after execution*/\n'
               '\n'
               '\n'
               '\t\tsystem("pause");\n'
               '\n'
               '\t\t}\n'
               '\t\t\t\tbreak;\n'
               '\t\t\n'
               '\t\tdefault: {\n'
               '\t\t\tcout << "Your choice is not available in menu!\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\t\tbreak;\n'
               '\t\t} // switch\n'
               '\n'
               '\t} // for loop\n'
               '\n'
               '\n'
               '}'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2379,
          lineno=11,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2380,
          lineno=203,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Temperature',
          body='CityTemperature Temperature;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2381,
          lineno=242,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='ID',
          body='int ID;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2382,
          lineno=246,
          tokens=5,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='inTemperature1',
          body='ifstream inTemperature1;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2383,
          lineno=271,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='out',
          body='ofstream out;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2384,
          lineno=293,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='ID',
          body='int ID;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2385,
          lineno=341,
          tokens=5,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='R',
          body='CityRainFall R;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2386,
          lineno=380,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='ID',
          body='int ID;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2387,
          lineno=384,
          tokens=5,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='inR1',
          body='ifstream inR1;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2388,
          lineno=407,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='out',
          body='ofstream out;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2389,
          lineno=429,
          tokens=6,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='ID',
          body='int ID;int ID;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2390,
          lineno=477,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='Humidity',
          body='CityHumidity Humidity;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2391,
          lineno=519,
          tokens=6,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='inHumidity1',
          body='ifstream inHumidity1;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2392,
          lineno=542,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='out',
          body='ofstream out;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2393,
          lineno=564,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='ID',
          body='int ID;'),
 Fragment(document_cs='c289b2982cb3d27e748d3137d9c29569f002ccf361d41b26de8ea5375895c40d',
          id=2394,
          lineno=1,
          tokens=71,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: City CityHumidity CityRainFall CityTemperature\n'
               '  Functions: CityHumidityInfo CityRainFallInfo '
               'CityTemperatureInfo main\n'
               '  Fields: average cityID cityName\n'
               '  Variables: Humidity ID R Temperature inHumidity1 inR1 '
               'inTemperature1 out\n'
               '  Using: std\n'
               '  Usages: GetData app binary input\n'),
 Fragment(document_cs='c2ecde98f26a26b47a017466a72fbce68a68a2d782cc3cca2475c6ce937d570d',
          id=2395,
          lineno=1,
          tokens=234,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='#----------------------------------------------------------------\n'
               '# Generated CMake target import file for configuration '
               '"Release".\n'
               '#----------------------------------------------------------------\n'
               '\n'
               '# Commands may need to know the format version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION 1)\n'
               '\n'
               '# Import target "sfml-system" for configuration "Release"\n'
               'set_property(TARGET sfml-system APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-system PROPERTIES\n'
               '  IMPORTED_IMPLIB_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-system.lib"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/bin/sfml-system-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-system )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-system '
               '"${_IMPORT_PREFIX}/lib/sfml-system.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-system-2.dll" )\n'
               '\n'
               '# Import target "sfml-main" for configuration "Release"\n'
               'set_property(TARGET sfml-main APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-main PROPERTIES\n'
               '  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-main.lib"\n'
               '  )\n'),
 Fragment(document_cs='c2ecde98f26a26b47a017466a72fbce68a68a2d782cc3cca2475c6ce937d570d',
          id=2396,
          lineno=24,
          tokens=243,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-main )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-main '
               '"${_IMPORT_PREFIX}/lib/sfml-main.lib" )\n'
               '\n'
               '# Import target "sfml-window" for configuration "Release"\n'
               'set_property(TARGET sfml-window APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-window PROPERTIES\n'
               '  IMPORTED_IMPLIB_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-window.lib"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/bin/sfml-window-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-window )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-window '
               '"${_IMPORT_PREFIX}/lib/sfml-window.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-window-2.dll" )\n'
               '\n'
               '# Import target "sfml-network" for configuration "Release"\n'
               'set_property(TARGET sfml-network APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-network PROPERTIES\n'
               '  IMPORTED_IMPLIB_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-network.lib"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/bin/sfml-network-2.dll"\n'
               '  )\n'),
 Fragment(document_cs='c2ecde98f26a26b47a017466a72fbce68a68a2d782cc3cca2475c6ce937d570d',
          id=2397,
          lineno=44,
          tokens=188,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-network )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-network '
               '"${_IMPORT_PREFIX}/lib/sfml-network.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-network-2.dll" )\n'
               '\n'
               '# Import target "sfml-graphics" for configuration "Release"\n'
               'set_property(TARGET sfml-graphics APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-graphics PROPERTIES\n'
               '  IMPORTED_IMPLIB_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics.lib"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/bin/sfml-graphics-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-graphics )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-graphics '
               '"${_IMPORT_PREFIX}/lib/sfml-graphics.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-graphics-2.dll" )\n'),
 Fragment(document_cs='c2ecde98f26a26b47a017466a72fbce68a68a2d782cc3cca2475c6ce937d570d',
          id=2398,
          lineno=57,
          tokens=158,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Import target "sfml-audio" for configuration "Release"\n'
               'set_property(TARGET sfml-audio APPEND PROPERTY '
               'IMPORTED_CONFIGURATIONS RELEASE)\n'
               'set_target_properties(sfml-audio PROPERTIES\n'
               '  IMPORTED_IMPLIB_RELEASE '
               '"${_IMPORT_PREFIX}/lib/sfml-audio.lib"\n'
               '  IMPORTED_LOCATION_RELEASE '
               '"${_IMPORT_PREFIX}/bin/sfml-audio-2.dll"\n'
               '  )\n'
               '\n'
               'list(APPEND _IMPORT_CHECK_TARGETS sfml-audio )\n'
               'list(APPEND _IMPORT_CHECK_FILES_FOR_sfml-audio '
               '"${_IMPORT_PREFIX}/lib/sfml-audio.lib" '
               '"${_IMPORT_PREFIX}/bin/sfml-audio-2.dll" )\n'
               '\n'
               '# Commands beyond this point should not need to know the '
               'version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION)\n'),
 Fragment(document_cs='c2ecde98f26a26b47a017466a72fbce68a68a2d782cc3cca2475c6ce937d570d',
          id=2399,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='c3372ea813013c06496075c5f7dc8b9422d54cfe06133098605e668af59eee5e',
          id=2400,
          lineno=1,
          tokens=212,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# This is a basic version file for the Config-mode of '
               'find_package().\n'
               '# It is used by write_basic_package_version_file() as input '
               'file for configure_file()\n'
               '# to create a version-file which can be installed along a '
               'config.cmake file.\n'
               '#\n'
               '# The created file sets PACKAGE_VERSION_EXACT if the current '
               'version string and\n'
               '# the requested version string are exactly the same and it '
               'sets\n'
               '# PACKAGE_VERSION_COMPATIBLE if the current version is >= '
               'requested version,\n'
               '# but only if the requested major version is the same as the '
               'current one.\n'
               '# The variable CVF_VERSION must be set before calling '
               'configure_file().\n'
               '\n'
               '\n'
               'set(PACKAGE_VERSION "2.5.1")\n'
               '\n'
               'if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION)\n'
               '  set(PACKAGE_VERSION_COMPATIBLE FALSE)\n'
               'else()\n'
               '\n'
               '  if("2.5.1" MATCHES "^([0-9]+)\\\\.")\n'
               '    set(CVF_VERSION_MAJOR "${CMAKE_MATCH_1}")\n'
               '  else()\n'
               '    set(CVF_VERSION_MAJOR "2.5.1")\n'
               '  endif()\n'),
 Fragment(document_cs='c3372ea813013c06496075c5f7dc8b9422d54cfe06133098605e668af59eee5e',
          id=2401,
          lineno=23,
          tokens=198,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR)\n'
               '    set(PACKAGE_VERSION_COMPATIBLE TRUE)\n'
               '  else()\n'
               '    set(PACKAGE_VERSION_COMPATIBLE FALSE)\n'
               '  endif()\n'
               '\n'
               '  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION)\n'
               '      set(PACKAGE_VERSION_EXACT TRUE)\n'
               '  endif()\n'
               'endif()\n'
               '\n'
               '\n'
               "# if the installed or the using project don't have "
               'CMAKE_SIZEOF_VOID_P set, ignore it:\n'
               'if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "" OR "4" STREQUAL "")\n'
               '   return()\n'
               'endif()\n'
               '\n'
               '# check that the installed version has the same 32/64bit-ness '
               'as the one which is currently searching:\n'
               'if(NOT CMAKE_SIZEOF_VOID_P STREQUAL "4")\n'
               '  math(EXPR installedBits "4 * 8")\n'
               '  set(PACKAGE_VERSION "${PACKAGE_VERSION} '
               '(${installedBits}bit)")\n'
               '  set(PACKAGE_VERSION_UNSUITABLE TRUE)\n'
               'endif()\n'),
 Fragment(document_cs='c3372ea813013c06496075c5f7dc8b9422d54cfe06133098605e668af59eee5e',
          id=2402,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2403,
          lineno=15,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='SetColor',
          body='SetColor(int value)'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2404,
          lineno=15,
          tokens=22,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='SetColor',
          body='void SetColor(int value) \n'
               '{\n'
               '\tSetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), '
               'value);\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2405,
          lineno=20,
          tokens=238,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='background',
          body='background()void background()\n'
               '{\n'
               '\tSetColor(13);\n'
               '\tcout << endl;\n'
               '\tcout << '
               '"\\t\\t\\t\\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      \t '
               '" << endl;\n'
               '\tcout << '
               '"\\t\\t\\t\\t                                                   '
               '.\\\'\\\'.\t\t\t\t\t\t\t\t\t\t         " << endl;\n'
               '\tcout << '
               '"\\t\\t\\t\\t                                                  '
               ':_\\\\/_:    .\t\t\t\t\t\t\t\t\t\t " << endl;\n'
               '\tcout << "\\t\\t\\t\\t                |        '
               "*                   .''. : /\\\\ :\t\t* * "
               '*\t\t\t\t\t\t\t \t    " << endl;\n'
               '\tcout << "\\t\\t\\t\\t                | *    '
               "*                     :_\\\\/_:'.:::.    \\*\\'\\'*   * "
               '\\\'.\\\'/.\\\'\t\t    \t       "  << endl;\n'
               '\tcout << "\\t\\t\\t\\t                =\t*         '
               ".--             : /\\\\ : :::::  '*_\\\\\\/_*   -= o =- \\    "
               '\'  *\t\t\t\t " << endl;\n'
               '\tcout << "\\t\\t\\t\\t               === *       / _ '
               "'             '..'  ':::'   * \\/\\\\ *   "
               '.\\\'/.\\\\\\\'.           \t         " << endl;\n'
               '\tcout << "\\t\\t\\t\\t          *     |\t*       | _ |     '
               '*  '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2406,
          lineno=31,
          tokens=162,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='background',
          body='           .__      *..*           .....  .---\\"|\t\t         '
               '" << endl;\n'
               '\tcout << "\\t\\t\\t\\t       *        |\t _      | _ '
               "|\t          _*   .-'||'-.       .--\\'|  ||__ | _|    "
               '|    \t\t      " << endl;\n'
               '\tcout << "\\t\\t\\t\\t         *      |  .-\'|    | _ |      '
               ".-\\'|  _.|  ||    || -|  -__  |   |  | __ ||      "
               '|\t\t       \t " << endl;\n'
               '\tcout << "\\t\\t\\t\\t      .-----.   |  |  |    |   |\t |\' '
               '| |.    ||    || -|  |  | |   |  |    ||      |\t   '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2407,
          lineno=34,
          tokens=135,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='background',
          body='              " << endl;\n'
               '\tcout << "\\t\\t\\t\\t   __\'       \' /\\ \'\\\\ |  '
               '\\\'-../   |...___|  \'-\'           \\"\\"  |__|   '
               '\\\'-\\\'   \\\'-.\\\'    \'\\`     |__    " << endl;\n'
               '\tcout << "\\t\\t\\t\\t     \' . . . \' []  \\\\   \\_/ \\_/  '
               "..........----|*..''|/?/>/ \\''\\''\\/''/''/ "
               '!!!<<<<>>>>>>...........    " << endl;\n'
               '\tSetColor(8);\n'
               '\tcout << "\\t\\t\\t\\t   '
               '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ '
               '" << endl;\n'
               '\t\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2408,
          lineno=42,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='void numbers()\n'
               '{\n'
               '\tint time = 10;\n'
               '\tSleep(1000);\n'
               '\twhile (time >= 0)\n'
               '\t{\n'
               '\t\tSleep(1000);\n'
               '\t\ttime--;\n'
               '\t\tcout << endl;\n'
               '\t\tswitch (time)\n'
               '\t\t{\n'
               '\t\tcase 9:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      999999999      '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    99:::::::::99    '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  99:::::::::::::99  '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2409,
          lineno=42,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='numbers()'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2410,
          lineno=64,
          tokens=164,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\\t\\t\\t\\t\\t\\t 9::::::99999::::::9 " << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 9:::::9     9:::::9 '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 9:::::9     9:::::9 '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  9:::::99999::::::9 '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   99::::::::::::::9 '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2411,
          lineno=74,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='t\\t     99999::::::::9  " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t          9::::::9   '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t         9::::::9    '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        9::::::9     '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t       9::::::9      '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2412,
          lineno=84,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=' 9::::::9       " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     9999999         '
               '" << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 8:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      888888888      '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    88:::::::::88    '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  88::::::::::::'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2413,
          lineno=99,
          tokens=168,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=':88  " << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 8::::::88888::::::8 '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 8:::::8     8:::::8 '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 8:::::8     8:::::8 '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  8:::::88888:::::8  '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   8:::::::::::::8   '
               '" <'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2414,
          lineno=109,
          tokens=167,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='< endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  8:::::88888:::::8  '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 8:::::8     8:::::8 '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 8:::::8     8:::::8 '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 8::::::88888::::::8 '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  88:::::::::::::88  '
               '" << endl;\n'
               '\t\t'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2415,
          lineno=120,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    88:::::::::88    '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      888888888      '
               '" << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 7:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '77777777777777777777" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '7::::::::::::::::::7" << endl;\n'
               '\t\t\tSetColor'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2416,
          lineno=135,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '7::::::::::::::::::7" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '777777777777:::::::7" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t            7::::::7 '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t           7::::::7  '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t          7::::::7   '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tco'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2417,
          lineno=146,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='ut << "\\t\\t\\t\\t\\t\\t\\t\\t\\t         7::::::7    " << '
               'endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        7::::::7     '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t       7::::::7      '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      7::::::7       '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     7::::::7        '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2418,
          lineno=156,
          tokens=145,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='t\\t\\t\\t\\t\\t\\t\\t\\t    7::::::7         " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   7::::::7          '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  77777777           '
               '" << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 6:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl ;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t          '
               '66666666          " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2419,
          lineno=171,
          tokens=138,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='t\\t\\t\\t\\t\\t\\t\\t         6::::::6           " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        '
               '6::::::6            " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t       '
               '6::::::6             " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      '
               '6::::::6              " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     '
               '6:::::::6              " << endl;\n'
               '\t\t\tSe'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2420,
          lineno=180,
          tokens=157,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='tColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    '
               '6:::::::66666           " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   '
               '6:::::::::::::66         " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  '
               '6:::::99999::::::6        " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 6:::::9     '
               '9::::::6       " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 6:::::9     '
               '9::::::6'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2421,
          lineno=189,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='       " << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '6::::::99999::::::6        " << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  '
               '66:::::::::::::66         " << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    '
               '66::::::::::66          " << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      '
               '6666666666            " << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 5:\n'
               '\t'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2422,
          lineno=202,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 555555555555555555  '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 5::::::::::::::::5  '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 5:::::555555555555  '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 5:::::5             '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 5::'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2423,
          lineno=214,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=':::5             " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 5:::::5555555555    '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 5:::::::::::::::5   '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 55555555555::::::5  '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t             5:::::5 '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t             '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2424,
          lineno=224,
          tokens=160,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='5:::::5 " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 555555      5:::::5 '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 55:::::55555::::::5 '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  55:::::::::::::55  '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   55:::::::::::55   '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    555555555555     '
               '"'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2425,
          lineno=234,
          tokens=148,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=' << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 4:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        444444444    '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t       4::::::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      4:::::::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     4::::44::::4    '
               '" << endl'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2426,
          lineno=249,
          tokens=164,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=';\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    4::::4 4::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   4::::4  4::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  4::::4   4::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 4::::444444::::4444 '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 4::::::::::::::::44 '
               '" << endl;\n'
               '\t\t\tSetCo'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2427,
          lineno=260,
          tokens=152,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='lor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 4444444444:::::4444 '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t           4::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t           4::::4    '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t         44::::::44  '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t         4::::::::4  '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2428,
          lineno=271,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t         4444444444  '
               '" << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 3:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3333333333333333    '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3:::::::::::::::33  '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3::::::33333::::::3 '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout <<'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2429,
          lineno=286,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=' "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3333333     3:::::3 " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t             3:::::3 '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t             3:::::3 '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     33333333:::::3  '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     3:::::::::::3   '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2430,
          lineno=296,
          tokens=158,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\\t\\t\\t\\t\\t\\t     33333333:::::3  " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t            3:::::33 '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t            3:::::33 '
               '" << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3333333    3::::::3 '
               '" << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3::::::33333:::::33 '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2431,
          lineno=306,
          tokens=154,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='t\\t 3:::::::::::::::33  " << endl;\n'
               '\t\t\tSetColor(10);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 3333333333333333    '
               '" << endl;\n'
               '\t\t\tbackground();\n'
               '\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 2:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '222222222222222      " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '2:::::::::::::::22   " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 2:::'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2432,
          lineno=322,
          tokens=155,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=':::222222:::::22 " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 2222222     '
               '2:::::22 " << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t             '
               '2:::::22 " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t             '
               '2:::::22 " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t         '
               '2222::::22   " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     2222'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2433,
          lineno=332,
          tokens=153,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='2::::::22    " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   '
               '22::::::::222      " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  '
               '2:::::22222         " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '2:::::2              " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 2:::::2       '
               '222222 " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 2::::::222222'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2434,
          lineno=342,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='2:::::2 " << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '2::::::::::::::::::2 " << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t '
               '22222222222222222222 " << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 1:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t       1111111       '
               '" << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      1::::::1       '
               '"'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2435,
          lineno=357,
          tokens=151,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body=' << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     1:::::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    1111:::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2436,
          lineno=367,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t        1::::1       '
               '" << endl;\n'
               '\t\t\tSetColor(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     111::::::111    '
               '" << endl;\n'
               '\t\t\tSetCo'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2437,
          lineno=378,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='lor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     1::::::::::1    '
               '" << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     1::::::::::1    '
               '" << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     111111111111    '
               '" << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tcase 0:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << endl ;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t       '
               '000000000        " << endl;\n'
               '\t\t\tSetColor(1'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2438,
          lineno=393,
          tokens=160,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='0);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t     '
               '00:::::::::00      " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   '
               '00:::::::::::::00    " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  '
               '0:::::::000:::::::0   " << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0:::::::0   '
               '0:::::::0   " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0::::::0     '
               '0::::::0  " << endl;\n'
               '\t\t\tSet'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2439,
          lineno=403,
          tokens=166,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='Color(15);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0::::::0     '
               '0::::::0  " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0::::::0 000 '
               '0::::::0  " << endl;\n'
               '\t\t\tSetColor(9);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0::::::0     '
               '0::::::0  " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0::::::0     '
               '0::::::0  " << endl;\n'
               '\t\t\tSetColor(12);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t 0:::::::0   '
               '0:::::::0  " << endl;\n'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2440,
          lineno=413,
          tokens=149,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='numbers',
          body='\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t  '
               '0:::::::000:::::::0   " << endl;\n'
               '\t\t\tSetColor(13);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t   '
               '0::::::::::::::00    " << endl;\n'
               '\t\t\tSetColor(14);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t    '
               '0:::::::::::00      " << endl;\n'
               '\t\t\tSetColor(11);\n'
               '\t\t\tcout << "\\t\\t\\t\\t\\t\\t\\t\\t\\t      '
               '0000000000        " << endl;\n'
               '\t\t\tbackground();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\tdefault:\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t}\n'
               '\tsystem("cls");\n'
               '\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2441,
          lineno=432,
          tokens=26,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='pushX',
          body='void pushX(int num) {\n'
               '\tfor (int i = 0;i < num;i++)\n'
               '\t\tcout << "  ";\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2442,
          lineno=432,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='pushX',
          body='pushX(int num)'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2443,
          lineno=437,
          tokens=117,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='text_2020',
          body='void text_2020()\n'
               '{\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tSetColor(8);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t 222222222222       '
               '0000000000      222222222222       0000000000       " << '
               'endl;\n'
               '\t\tSetColor(12);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t 2::::222:::22     '
               '00:::::::::00    2::::222:::22     00:::::::::00    " << '
               'endl;\n'
               '\t\tSetColor(14);\n'
               '\t\tcout'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2444,
          lineno=437,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='text_2020',
          body='text_2020()'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2445,
          lineno=446,
          tokens=142,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='text_2020',
          body=' << "\\t\\t\\t\\t\\t\\t 2222     2::22   00:::::::::::00   '
               '2222     2::22   00:::::::::::00   " << endl;\n'
               '\t\tSetColor(13);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t          2::22   0:::0     '
               '0:::0            2::22   0:::0     0:::0   " << endl;\n'
               '\t\tSetColor(10);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t          2::22   0:::0     '
               '0:::0            2::22   0:::'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2446,
          lineno=450,
          tokens=145,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='text_2020',
          body='0     0:::0   " << endl;\n'
               '\t\tSetColor(12);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t    222:::::22    0:::0     '
               '0:::0      222:::::22    0:::0     0:::0   " << endl;\n'
               '\t\tSetColor(14);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t  22::::22        0:::0     '
               '0:::0    22::::22        0:::0     0:::0   " << endl;\n'
               '\t\tSetColor(9);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t 2::::2    '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2447,
          lineno=456,
          tokens=126,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='text_2020',
          body='2222   00:::::::::::00   2::::2    2222   00:::::::::::00   " '
               '<< endl;\n'
               '\t\tSetColor(12);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t 2::::2222::::2    '
               '00:::::::::00    2::::2222::::2    00:::::::::00    " << '
               'endl;\n'
               '\t\tSetColor(8);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t 22222222222222     '
               '00000000000     22222222222222     00000000000      " << '
               'endl;\n'
               '\t\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2448,
          lineno=464,
          tokens=234,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='work_pushX',
          body='void work_pushX()\n'
               '{\n'
               '\tint j = 0;\n'
               '\tfor (j = 0;j < 50;j++) {\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tpushX(j);\n'
               '\t\tSetColor(15);\n'
               '\t\tcout << '
               '".:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:" '
               '<< endl;\n'
               '\t\tpushX(j);\n'
               '\t\tSetColor(14);\n'
               '\t\tcout << "            __,  ,__)            __,  ,__)      '
               '__, ,__)             " << endl;\n'
               '\t\tpushX(j);\n'
               '\t\tcout << "           (--|__| _ ,_ ,_      (--|\\ | _       '
               '(--\\ | _  _ ,_        " << endl;\n'
               '\t\tpushX(j);\n'
               '\t\tcout << "             _|  |(_||_)|_)(_|    _| '
               '\\|(/_(_|_)     \\|(/_(_||         " << endl;\n'
               '\t\tpushX(j);\n'
               '\t\tcout << "            (        |  |  ,_'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2449,
          lineno=464,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='work_pushX',
          body='work_pushX()'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2450,
          lineno=482,
          tokens=200,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='work_pushX',
          body='|   (              (__|                  " << endl;\n'
               '\t\tpushX(j);\n'
               '\t\tSetColor(15);\n'
               '\t\tcout << '
               '".:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:" '
               '<< endl;\n'
               '\t\ttext_2020();\n'
               '\t\tcout << endl;\n'
               '\t\tSetColor(11);\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t               .     .  .      '
               '+     .      .          .    " << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t         .        .      .     '
               '#       .           .         " << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t            .       .         '
               '###            .      .      ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t        .       .    #:. . : '
               "##'##:. .:#  .      ."),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2451,
          lineno=492,
          tokens=189,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='work_pushX',
          body='        " << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t               .      . '
               '*####*###*####*  .*      .     .   "<< endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t                *#:.    . : '
               '#*###*# : .    . : #*  .       ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t       .              '
               '*#########*#########*        .        ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t            .     *#:.  '
               '*####*###*####* . : #*   .       ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t         .      .  '
               '\'#######\'\'##\'##\'\'#######\'               " << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t                     '
               '.\'##\'#####\'#####\'##\'           .      ." << e'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2452,
          lineno=498,
          tokens=189,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='work_pushX',
          body='ndl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t        .    \'#:. ...  . : '
               '##\'###\'###\'##:. ... .:#\'     ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t          .      '
               '\'#######\'##\'#####\'##\'#######\'      .     ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t        .    .      '
               '\'#####\'\'#######\'\'#####\'    .      ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t                 .     \'      '
               '000      \'    .     .        ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t           .          .   .   '
               '000     .        .       ." << endl;\n'
               '\t\tcout << "\\t\\t\\t\\t\\t\\t      ............ '
               '..........O000O.......... ..............." << endl;\n'
               '\t\tSleep(100);\t\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2453,
          lineno=509,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='congrats',
          body='congrats()'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2454,
          lineno=509,
          tokens=185,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='congrats',
          body='void congrats()\n'
               '{\n'
               '\tsystem("cls");\n'
               '\t\n'
               '\t\tSetColor(12);\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << "\\t  '
               '.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:" '
               '<< endl;\n'
               '\t\tSetColor(14);\n'
               '\t\tcout << "\\t              __,  ,__)            __,  '
               ',__)      __, ,__)                         __,  '
               ',__)            __,  ,__)      __, ,__)             " << '
               'endl;\n'
               '\t\tcout << "\\t   '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2455,
          lineno=520,
          tokens=147,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='congrats',
          body='          (--|__| _ ,_ ,_      (--|\\ | _       (--\\ | _  _ '
               ',_                   (--|__| _ ,_ ,_      (--|\\ | _       '
               '(--\\ | _  _ ,_        " << endl;\n'
               '\t\tcout << "\\t               _|  |(_||_)|_)(_|    _| '
               '\\|(/_(_|_)     \\|(/_(_||                      _|  '
               '|(_||_)|_)(_|    _| \\|(/_(_|_)     \\|(/_(_||         " << '
               'endl;\n'
               '\t\tcout << "\\t              (        |  |  ,_|   '
               '(              (__|                            (        |  |  '
               ',_|   (              (__|           '),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2456,
          lineno=522,
          tokens=191,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='congrats',
          body='       " << endl;\n'
               '\t\tSetColor(12);\n'
               '\t\tcout << "\\t  '
               '.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:._.:*~*:" '
               '<< endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\t\n'
               '\t\tSetColor(15);\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\t\tcout << endl;\n'
               '\tstring hello = "\\t\\t\\t\\t\\tDEAR FRIENDS AND SUPER FAMILY '
               'OF INHA UNIVERSITY. HAPPY NEW YEAR!!! \\n\\n\\n\\t\\t   I WISH '
               'YOUR 2020 TO BE THE BEST AND PRODUCTIVE YEAR IN Y'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2457,
          lineno=532,
          tokens=197,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='congrats',
          body='OUR LIFE!!! \\n\\n\\t\\t   THANKS TO EVERYBODY WHOM I MET IN '
               '2019. YOU TAUGHT ME TO BE SMARTER , WISER, AND MOST '
               'IMPORTANTLY TO UNDERSTAND BETTER IN PEOPLE.\\n\\n\\t\\t   '
               'WRITE DOWN YOUR GOALS, DO SOMETHING YOU BELIEVE IN, READ MORE '
               'BOOKS, AVOID TIME WASTERS, LOOK FOR MEANINGFUL PEOPLE AND '
               'RELATIONSHIPS.\\n\\n\\t\\t   AND I GUARANTEE YOUR 2020 WILL BE '
               'UNFORGETTABLE AND '
               'MEANINGFUL!\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tRUSTAM_Z\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n";\n'
               '\tint x = 0;\n'
               "\twhile (hello[x] != '\\0')\n"
               '\t{\n'
               '\t\tcout << hello[x];\n'
               '\t\tSleep(100);\n'
               '\t\tx++;\n'
               '\t};\n'
               '\t\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2458,
          lineno=543,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2459,
          lineno=543,
          tokens=34,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tsystem("pause");\n'
               '\tnumbers();\n'
               '\tsystem("cls");\n'
               '\t\n'
               '\twork_pushX();\n'
               '\t\t\n'
               '\tcongrats();\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2460,
          lineno=11,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c4bc4caa38dba40ebe7499f165d2f8632bcc4ccb354c140c44d5298de08c5de6',
          id=2461,
          lineno=1,
          tokens=31,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: SetColor background congrats main numbers pushX '
               'text_2020 work_pushX\n'
               '  Using: std\n'
               '  Usages: setw\n'),
 Fragment(document_cs='c589eef4028a1069c91357af970f245941ce5cc74431cc887fb6e8a556fb16d9',
          id=2462,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_MAIN_HPP',
          body='#define SFML_MAIN_HPP'),
 Fragment(document_cs='c589eef4028a1069c91357af970f245941ce5cc74431cc887fb6e8a556fb16d9',
          id=2463,
          lineno=38,
          tokens=5,
          depth=2,
          parent_id=None,
          category='macro',
          summary=False,
          name='main',
          body='#define main sfmlMain'),
 Fragment(document_cs='c589eef4028a1069c91357af970f245941ce5cc74431cc887fb6e8a556fb16d9',
          id=2464,
          lineno=1,
          tokens=9,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_MAIN_HPP main\n'),
 Fragment(document_cs='c604e4978d136d9b0293deb23951be39457ebbeaf816b0b0bfc77d8d674d8f73',
          id=2465,
          lineno=7,
          tokens=192,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main8',
          body='main8()int main8() {\n'
               '\tchar op;\n'
               '\tfloat num1, num2;\n'
               '\tcout << "Enter the 1st operand: ";\n'
               '\tcin >> num1;\n'
               '\tcout << "Enter operator either + or - or * or / : ";\n'
               '\tcin >> op;\n'
               '\tcout << "Enter 2nd operand: ";\n'
               '\tcin >> num2;\n'
               '\tcout << endl;\n'
               '\tswitch (op)\n'
               '\t{\n'
               "\tcase '+':\n"
               '\t\tcout << "Result is "<< num1 + num2 << endl;\n'
               '\t\tbreak;\n'
               "\tcase '-':\n"
               '\t\tcout << "Result is " << num1 - num2 << endl;\n'
               '\t\tbreak;\n'
               "\tcase '*':\n"
               '\t\tcout << "Result is " << num1 * num2 << endl;\n'
               '\t\tbreak;\n'
               "\tcase '/':\n"
               '\t\tcout << "Result is " << num1 / num2 << endl;\n'
               '\t\tbreak;\n'
               '\tdefault:\n'
               '\t\tcout << "Error! Operator is not correct";\n'
               '\t\tbreak;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='c604e4978d136d9b0293deb23951be39457ebbeaf816b0b0bfc77d8d674d8f73',
          id=2466,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c604e4978d136d9b0293deb23951be39457ebbeaf816b0b0bfc77d8d674d8f73',
          id=2467,
          lineno=9,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='num1',
          body='float num1, num2;'),
 Fragment(document_cs='c604e4978d136d9b0293deb23951be39457ebbeaf816b0b0bfc77d8d674d8f73',
          id=2468,
          lineno=1,
          tokens=17,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main8\n  Variables: num1\n  Using: std\n'),
 Fragment(document_cs='c906696ff84f35919ed3af0d72bde44a2b5b9cd9598cdd3e04aba3e8b720f86b',
          id=2469,
          lineno=7,
          tokens=142,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main2',
          body='main2()int main2()\n'
               '{\n'
               '\tfloat a, b, c;\n'
               '\tcout << "Enter the 3 numbres: ";\n'
               '\tcin >> a >> b >> c;\n'
               '\tif (a >= b && a >= c)\n'
               '\t\tcout << "The greatest number is " << a << ";" << endl;\n'
               '\tif (b >= a && b >= c)\n'
               '\t\tcout << "The greatest number is " << b << ";" << endl;\n'
               '\tif (c >= a && c >= b)\n'
               '\t\tcout << "The greatest number is " << c << ";" << endl;\n'
               '\telse if (a == b == c)\n'
               '\t\tcout << "All numbers are equal." << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='c906696ff84f35919ed3af0d72bde44a2b5b9cd9598cdd3e04aba3e8b720f86b',
          id=2470,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='c906696ff84f35919ed3af0d72bde44a2b5b9cd9598cdd3e04aba3e8b720f86b',
          id=2471,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main2\n  Using: std\n'),
 Fragment(document_cs='cb9aecc5d145ff1052f4586afbae2ec3061f8366f882d03c7bf6d05b21bad55d',
          id=2472,
          lineno=1,
          tokens=108,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='Rustam\n'
               '123456789\n'
               'Rustam202\n'
               'Rustam202\n'
               '\n'
               'Alimov\n'
               '123456789\n'
               'Alimov808\n'
               'Alimov808\n'
               '\n'
               'Rustam\n'
               '123456789\n'
               '1\n'
               '1\n'
               'Alimov\n'
               '123456789\n'
               'Alimov_8\n'
               'Alimov808\n'
               'Rddfrbd\n'
               '123422222\n'
               'Rssss3_3\n'
               'Errffgh543\n'
               'Rustam\n'
               '1345646985\n'
               'Alimov_8\n'
               'Rustam202\n'),
 Fragment(document_cs='cb9aecc5d145ff1052f4586afbae2ec3061f8366f882d03c7bf6d05b21bad55d',
          id=2473,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='cc37f18c6d44933a9680a507128a549ef1d0867eabd7f04633f9496a195b224a',
          id=2474,
          lineno=40,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='cc37f18c6d44933a9680a507128a549ef1d0867eabd7f04633f9496a195b224a',
          id=2475,
          lineno=172,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isKeyPressed',
          body='isKeyPressed(Key key)'),
 Fragment(document_cs='cc37f18c6d44933a9680a507128a549ef1d0867eabd7f04633f9496a195b224a',
          id=2476,
          lineno=187,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setVirtualKeyboardVisible',
          body='setVirtualKeyboardVisible(bool visible)'),
 Fragment(document_cs='cc37f18c6d44933a9680a507128a549ef1d0867eabd7f04633f9496a195b224a',
          id=2477,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_KEYBOARD_HPP',
          body='#define SFML_KEYBOARD_HPP'),
 Fragment(document_cs='cc37f18c6d44933a9680a507128a549ef1d0867eabd7f04633f9496a195b224a',
          id=2478,
          lineno=1,
          tokens=26,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_WINDOW_API\n'
               '  Macros: SFML_KEYBOARD_HPP\n'
               '  Functions: isKeyPressed setVirtualKeyboardVisible\n'),
 Fragment(document_cs='cc38456bfc3f6ed0d6b597b5a67d09c876319c9b9670527c1969717fe3023ae1',
          id=2479,
          lineno=7,
          tokens=160,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main1',
          body='main1()int main1() {\n'
               '\tint m, n, sum = 0;\n'
               '\tcout << "Enter the 1st number: ";\n'
               '\tcin >> n;\n'
               '\tcout << "Enter the 2nd number: ";\n'
               '\tcin >> m;\n'
               '\tif (n < m) {\n'
               '\t\tfor (int x = n; x <= m; x++) {\n'
               '\t\t\tsum += x;\n'
               '\t\t}\n'
               '\t\tcout << "The sum of the integers between the two numbers '
               'is " << sum << ";" << endl;\n'
               '\t}\n'
               '\telse if (m < n)\n'
               '\t\tcout << "Invalid numbers! Please try again." << endl;\n'
               '\telse if (m == n) {\n'
               '\t\tsum = n;\n'
               '\t\tcout << "The sum is " << sum << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='cc38456bfc3f6ed0d6b597b5a67d09c876319c9b9670527c1969717fe3023ae1',
          id=2480,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='cc38456bfc3f6ed0d6b597b5a67d09c876319c9b9670527c1969717fe3023ae1',
          id=2481,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main1\n  Using: std\n'),
 Fragment(document_cs='cddd3bea3a5110ee2fcca8aed005104fb16a861e6391279ad2101d4f6c546b8f',
          id=2482,
          lineno=39,
          tokens=183,
          depth=3,
          parent_id=None,
          category='enum',
          summary=False,
          name='PrimitiveType',
          body='enum PrimitiveType\n'
               '{\n'
               '    Points,        ///< List of individual points\n'
               '    Lines,         ///< List of individual lines\n'
               '    LineStrip,     ///< List of connected lines, a point uses '
               'the previous point to form a line\n'
               '    Triangles,     ///< List of individual triangles\n'
               '    TriangleStrip, ///< List of connected triangles, a point '
               'uses the two previous points to form a triangle\n'
               '    TriangleFan,   ///< List of connected triangles, a point '
               'uses the common center and the previous point to form a '
               'triangle\n'
               '    Quads,         ///< List of individual quads (deprecated, '
               "don't work with OpenGL ES)\n"
               '\n'
               '    // Deprecated names\n'
               '    LinesStrip     = LineStrip,     ///< \\deprecated Use '
               'LineStrip instead\n'
               '    TrianglesStrip = TriangleStrip, ///< \\deprecated Use '
               'TriangleStrip instead\n'
               '    TrianglesFan   = TriangleFan    ///< \\deprecated Use '
               'TriangleFan instead\n'
               '}'),
 Fragment(document_cs='cddd3bea3a5110ee2fcca8aed005104fb16a861e6391279ad2101d4f6c546b8f',
          id=2483,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_PRIMITIVETYPE_HPP',
          body='#define SFML_PRIMITIVETYPE_HPP'),
 Fragment(document_cs='cddd3bea3a5110ee2fcca8aed005104fb16a861e6391279ad2101d4f6c546b8f',
          id=2484,
          lineno=1,
          tokens=17,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Enums: PrimitiveType\n  Macros: SFML_PRIMITIVETYPE_HPP\n'),
 Fragment(document_cs='cf5dae4869fe72dd8474eb341db6809fd614d1eda39ddb68276da54f5bbf851f',
          id=2485,
          lineno=7,
          tokens=83,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main2',
          body='int main2()\n'
               '{\n'
               '\tfor (int i = 1; i <= 5; i++)\n'
               '\t{\n'
               '\t\tfor (int j = 5; j >= 1; j--)\n'
               '\t\t{\n'
               '\t\t\tif (i >= j)\n'
               '\t\t\t\tcout << "*";\n'
               '\t\t\telse\n'
               '\t\t\t\tcout << " ";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main2()'),
 Fragment(document_cs='cf5dae4869fe72dd8474eb341db6809fd614d1eda39ddb68276da54f5bbf851f',
          id=2486,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='cf5dae4869fe72dd8474eb341db6809fd614d1eda39ddb68276da54f5bbf851f',
          id=2487,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main2\n  Using: std\n'),
 Fragment(document_cs='cfc7b1b95d0290c14349a522820130677da79e9a77ab6d353a7bdaa3d54485df',
          id=2488,
          lineno=41,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='cfc7b1b95d0290c14349a522820130677da79e9a77ab6d353a7bdaa3d54485df',
          id=2489,
          lineno=61,
          tokens=18,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='open',
          body='open(const std::string& filename, unsigned int sampleRate, '
               'unsigned int channelCount)'),
 Fragment(document_cs='cfc7b1b95d0290c14349a522820130677da79e9a77ab6d353a7bdaa3d54485df',
          id=2490,
          lineno=70,
          tokens=11,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='write',
          body='write(const Int16* samples, Uint64 count)'),
 Fragment(document_cs='cfc7b1b95d0290c14349a522820130677da79e9a77ab6d353a7bdaa3d54485df',
          id=2491,
          lineno=26,
          tokens=10,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDFILEWRITER_HPP',
          body='#define SFML_SOUNDFILEWRITER_HPP'),
 Fragment(document_cs='cfc7b1b95d0290c14349a522820130677da79e9a77ab6d353a7bdaa3d54485df',
          id=2492,
          lineno=1,
          tokens=27,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n'
               '  Macros: SFML_SOUNDFILEWRITER_HPP\n'
               '  Functions: open write\n'),
 Fragment(document_cs='d12172845d7aab7a2666c469494abefd86ed47ce75e9f03c16888fd2a6c86cf9',
          id=2493,
          lineno=7,
          tokens=65,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tfor (int i = 1; i <= 5; i++)\n'
               '\t{\n'
               '\t\tfor (int j = 1; j <= i; j++)\n'
               '\t\t{\n'
               '\t\t\tcout << "*";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='d12172845d7aab7a2666c469494abefd86ed47ce75e9f03c16888fd2a6c86cf9',
          id=2494,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='d12172845d7aab7a2666c469494abefd86ed47ce75e9f03c16888fd2a6c86cf9',
          id=2495,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2496,
          lineno=37,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_MainMenu',
          body='F_MainMenu()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2497,
          lineno=38,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Help',
          body='F_Help()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2498,
          lineno=39,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='F_Developers()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2499,
          lineno=40,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Quit',
          body='F_Quit()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2500,
          lineno=41,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Start',
          body='F_Start()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2501,
          lineno=42,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Logic',
          body='F_Logic()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2502,
          lineno=43,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Map',
          body='F_Map()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2503,
          lineno=46,
          tokens=189,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_MainMenu',
          body='void F_MainMenu() {\n'
               '\twindow.clear(sf::Color::White);\n'
               '\twindow.draw(MainMenu);\n'
               '\twindow.display();\n'
               '\n'
               '\t//Start Game\n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Numpad1)) '
               '{\n'
               '\t\t//sound_Rington.play(); \n'
               '\t\tF_Start();\n'
               '\t}\n'
               '\t//Help Desck\n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Numpad2)) '
               '{\n'
               '\t\t//sound_Rington.play(); \n'
               '\t\tF_Help();\n'
               '\t}\n'
               '\t//Developers \n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Numpad3)) '
               '{\n'
               '\t\t//sound_Rington.play();\n'
               '\t\tF_Developers();\n'
               '\t}\n'
               '\t//Quit\n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Numpad4)) '
               '{\n'
               '\t\t//sound_Rington.play();\n'
               '\t\tF_Quit();\n'
               '\t}\n'
               '}F_MainMenu()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2504,
          lineno=74,
          tokens=67,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Help',
          body='void F_Help() {\n'
               '\twindow.clear(sf::Color::White);\n'
               '\twindow.draw(Help);\n'
               '\twindow.display();\n'
               '\n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Escape))\n'
               '\t{\n'
               '\t\t//sound_Rington.play();\n'
               '\t\tF_MainMenu();\n'
               '\t}\n'
               '\telse { F_Help(); }\n'
               '}F_Help()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2505,
          lineno=87,
          tokens=69,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Developers',
          body='void F_Developers() {\n'
               '\twindow.clear(sf::Color::White);\n'
               '\twindow.draw(Developers);\n'
               '\twindow.display();\n'
               '\n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Escape)) '
               '{\n'
               '\t\t//sound_Rington.play(); F_MainMenu();\n'
               '\t}\n'
               '\telse { F_Developers(); }\n'
               '}F_Developers()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2506,
          lineno=98,
          tokens=111,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Quit',
          body='void F_Quit() {\n'
               '\twindow.clear(sf::Color::White);\n'
               '\twindow.draw(Quit);\n'
               '\twindow.display();\n'
               '\n'
               '\tif (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Numpad2)) '
               '{\n'
               '\t\t//sound_Rington.play(); \n'
               '\t\tF_MainMenu();\n'
               '\t}\n'
               '\telse if '
               '(sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Numpad1))\n'
               '\t{\n'
               '\t\t//sound_Rington.play();\n'
               '\t\tsystem("pause");\n'
               '\t\twindow.close();\n'
               '\t}\n'
               '\telse { F_Quit(); }\n'
               '}F_Quit()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2507,
          lineno=117,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Start',
          body='F_Start()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2508,
          lineno=117,
          tokens=145,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Start',
          body='void F_Start() {\n'
               '\n'
               '\tF_Map();\n'
               '\tif ((x % 2 == 0) && '
               'sf::Keyboard::isKeyPressed(sf::Keyboard::Key::Space)) {\n'
               '\t\t//sound_Rington.play();\n'
               '\t\twindow.clear();\n'
               '\t\twindow.display();\n'
               '\t\tSleep(0700); Sleep(0700); Sleep(0700);\n'
               '\t\tx++;\n'
               '\t\tF_Logic();\n'
               '\t\tF_Start();\n'
               '\t}\n'
               '\telse if (x % 2 == 1) {\n'
               '\t\t//sound_Rington.play();\n'
               '\t\twindow.clear();\n'
               '\t\twindow.display();\n'
               '\t\tSleep(0700); Sleep(0700); Sleep(0700);\n'
               '\t\tx++;\n'
               '\t\tF_Logic();\n'
               '\t\tF_Start();\n'
               '\t}\n'
               '\telse F_Start();\n'
               '}'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2509,
          lineno=142,
          tokens=141,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Loading',
          body='void F_Loading() {\n'
               '\tfor (int i = 1; i <= 12; i++) {\n'
               '\n'
               '\t\twindow.clear(sf::Color::White);\n'
               '\t\tif (i == 1 || i == 4 || i == 7 || i == 10) '
               'window.draw(Loading_1);\n'
               '\t\tif (i == 2 || i == 5 || i == 8 || i == 11) '
               'window.draw(Loading_2);\n'
               '\t\tif (i == 3 || i == 6 || i == 9 || i == 12) '
               'window.draw(Loading_3);\n'
               '\t\twindow.display();\n'
               '\t\tSleep(0700);\n'
               '\t}\n'
               '\n'
               '}F_Loading()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2510,
          lineno=156,
          tokens=140,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tk = 0;\n'
               '\t//Identifiers Picture \n'
               '\tsf::Texture TextMainMenu; '
               'TextMainMenu.loadFromFile("Main_Menu.jpg"); '
               'MainMenu.setTexture(&TextMainMenu);\n'
               '\tsf::Texture TextHelp; TextHelp.loadFromFile("Help.jpg"); '
               'Help.setTexture(&TextHelp);\n'
               '\tsf::Texture TextDevelopers; '
               'TextDevelopers.loadFromFile("Developers.jpg"); '
               'Developers.setTexture(&TextDevelopers);\n'
               '\tsf::Texture TextQuit; '
               'TextQuit.loadFromFile("Quit_Main.jpg"); '
               'Quit.setTexture(&TextQuit);\n'
               '\tsf::Texture TextLoading1; '
               'TextLoading1.loadFromFile("Loading1.jpg"); '
               'Loading_1.setTexture(&TextLoading1);\n'
               '\tsf::Texture TextLoading2; TextLoading2.loadFromFi'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2511,
          lineno=156,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2512,
          lineno=165,
          tokens=174,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='le("Loading2.jpg"); Loading_2.setTexture(&TextLoading2);\n'
               '\tsf::Texture TextLoading3; '
               'TextLoading3.loadFromFile("Loading3.jpg"); '
               'Loading_3.setTexture(&TextLoading3);\n'
               '\tsf::Texture TextMap; TextMap.loadFromFile("Map.png"); '
               'Map.setTexture(&TextMap);\n'
               '\tsf::Texture TextPlayer_1; '
               'TextPlayer_1.loadFromFile("Player.png"); '
               'Player.setTexture(&TextPlayer_1);\n'
               '\n'
               '\t// Musics \n'
               '\t//if (!Rington.loadFromFile("Rington.wav")) { cout << '
               '"ERROR" << endl; } sound_Rington.setBuffer(Rington);\n'
               '\t//if (!BackMusic.loadFromFile("BackMusic.wav")) { cout << '
               '"ERROR" << endl; } sound_BackMusic.setBuffer(BackMusic);\n'
               '\n'
               '\t//Starting point\n'
               '\twhile (window.isOpen())\n'
               '\t{\n'
               '\n'
               '\t\tsf::Event evnt;\n'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2513,
          lineno=179,
          tokens=114,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\twhile (window.pollEvent(evnt))\n'
               '\t\t{\n'
               '\t\t\tswitch (evnt.type) {\n'
               '\t\t\tcase sf::Event::Closed: window.close();\n'
               '\t\t\t\tbreak;\n'
               '\t\t\tcase sf::Event::Resized:;\n'
               '\t\t\t\tbreak;\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t\t//Others\n'
               '\n'
               '\n'
               '\t\t// Outputs\n'
               '\t\tif (k == 0) {// sound_BackMusic.play();\n'
               '\t\tF_Loading(); k++; }\n'
               '\t\t//k = 1;\n'
               '\t\tif (k == 1) { F_MainMenu(); }\n'
               '\t}\n'
               '\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2514,
          lineno=9,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2515,
          lineno=15,
          tokens=35,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Rand',
          body='int Rand, Case_1 = 0, Case_2 = 0, x, Turn_1, Turn_2, TURN_1, '
               'TURN_2;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2516,
          lineno=160,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextMainMenu',
          body='sf::Texture TextMainMenu;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2517,
          lineno=161,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextHelp',
          body='sf::Texture TextHelp;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2518,
          lineno=162,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextDevelopers',
          body='sf::Texture TextDevelopers;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2519,
          lineno=163,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextQuit',
          body='sf::Texture TextQuit;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2520,
          lineno=164,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextLoading1',
          body='sf::Texture TextLoading1;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2521,
          lineno=165,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextLoading2',
          body='sf::Texture TextLoading2;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2522,
          lineno=166,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextLoading3',
          body='sf::Texture TextLoading3;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2523,
          lineno=167,
          tokens=6,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextMap',
          body='sf::Texture TextMap;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2524,
          lineno=168,
          tokens=8,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='TextPlayer_1',
          body='sf::Texture TextPlayer_1;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2525,
          lineno=178,
          tokens=6,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='evnt',
          body='sf::Event evnt;'),
 Fragment(document_cs='d22aaf663cd6ea395d4ab05dc56b99de731bf9279f325b152dbf31a09f501670',
          id=2526,
          lineno=1,
          tokens=101,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Developers F_Help F_Loading F_Logic F_MainMenu '
               'F_Map F_Quit F_Start main\n'
               '  Variables: Rand TextDevelopers TextHelp TextLoading1 '
               'TextLoading2 TextLoading3 TextMainMenu TextMap TextPlayer_1 '
               'TextQuit evnt\n'
               '  Using: std\n'
               '  Usages: Close Closed Escape Numpad1 Numpad2 Numpad3 Numpad4 '
               'Resize Resized Space Vector2f VideoMode White isKeyPressed\n'),
 Fragment(document_cs='d39d86f96788f56830895229c238ee1a5e125343e5648e28f581c87c752b844d',
          id=2527,
          lineno=6,
          tokens=60,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='gotoXY',
          body='gotoXY(int x, int y)void gotoXY(int x, int y) {\n'
               "\t//'COORD' is a built in function for positioning the "
               'objects\n'
               '\tCOORD d;\n'
               '\td.X = x;\n'
               '\td.Y = y;\n'
               '\tSetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), '
               'd);\n'
               '}'),
 Fragment(document_cs='d39d86f96788f56830895229c238ee1a5e125343e5648e28f581c87c752b844d',
          id=2528,
          lineno=14,
          tokens=193,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Loading',
          body='void F_Loading() {\n'
               '\tcout << "\\n\\n\\n\\n\\n\\n";\n'
               '\tcout << "\\t\\t\\t       '
               '-------------------------------------  \\n";\n'
               '\tcout << "\\t\\t\\t         E I G H T S O F T  A C A D E M '
               'Y      \\n";\n'
               '\tcout << "\\t\\t\\t       '
               '-------------------------------------  \\n";\n'
               '\tcout << "\\t\\t\\t                   A L I B A Z A '
               'R             \\n";\n'
               '\tcout << "\\t\\t\\t       '
               '_____________________________________  \\n";\n'
               '\n'
               '\tchar a = 219;\n'
               '\tgotoXY(45, 14);\n'
               '\n'
               '\tcout << "LOADING... " << endl;\n'
               '\n'
               '\tgotoXY(37, 16);\n'
               '\tfor (int r = 1; r <= 26; r++)\n'
               '\t{\n'
               '\t\t//for speed\n'
               '\t\tfor (int speed = 0; speed <= 12000000; speed++);\n'
               '\t\tcout << a;\n'
               '\t}\n'
               '\tcout << endl;\n'
               '}F_Loading()'),
 Fragment(document_cs='d39d86f96788f56830895229c238ee1a5e125343e5648e28f581c87c752b844d',
          id=2529,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: F_Loading gotoXY\n'),
 Fragment(document_cs='d3ff17b030a61707a89be9ed1c1b4a2bee6710f9f87880e77c3664dea9d05ce9',
          id=2530,
          lineno=7,
          tokens=99,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main3',
          body='main3()int main3()\n'
               '{\n'
               '\tfor (int i = 1; i <= 5; i += 2)\n'
               '\t{\n'
               '\t\tfor (int j = 3; j >= i; j -= 2)\n'
               '\t\t{\n'
               '\t\t\tcout << " ";\n'
               '\t\t}\n'
               '\n'
               '\t\tfor (int j = 1; j <= i; j++)\n'
               '\t\t{\n'
               '\t\t\tcout << "*";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='d3ff17b030a61707a89be9ed1c1b4a2bee6710f9f87880e77c3664dea9d05ce9',
          id=2531,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='d3ff17b030a61707a89be9ed1c1b4a2bee6710f9f87880e77c3664dea9d05ce9',
          id=2532,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main3\n  Using: std\n'),
 Fragment(document_cs='d462ccc34223b0f0fda0a49b62da9ed079c7ec2b6e4d8cc5f985677ff069bd31',
          id=2533,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_NETWORK_HPP',
          body='#define SFML_NETWORK_HPP'),
 Fragment(document_cs='d462ccc34223b0f0fda0a49b62da9ed079c7ec2b6e4d8cc5f985677ff069bd31',
          id=2534,
          lineno=1,
          tokens=8,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_NETWORK_HPP\n'),
 Fragment(document_cs='d51eb554ed01117e93815db576a1de8ff871e34e9a20529b6ea87ef0844d9ee8',
          id=2535,
          lineno=7,
          tokens=72,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main5',
          body='int main5() {\n'
               '\tint n;\n'
               '\tfloat sum = 0;\n'
               '\tcout << "Enter the value of n: ";\n'
               '\tcin >> n;\n'
               '\tfor (int i = 1;i <= n;i++)\n'
               '\t\tsum += 1 / i;\n'
               '\tcout << "Sum is : " << sum << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main5()'),
 Fragment(document_cs='d51eb554ed01117e93815db576a1de8ff871e34e9a20529b6ea87ef0844d9ee8',
          id=2536,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='d51eb554ed01117e93815db576a1de8ff871e34e9a20529b6ea87ef0844d9ee8',
          id=2537,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main5\n  Using: std\n'),
 Fragment(document_cs='d55b76330fbadae8b8c698c2ee434fab43fa4017468bd9b81cf5210b39b4de1c',
          id=2538,
          lineno=1,
          tokens=42,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='1\n'
               '2\n'
               '11\n'
               '111\n'
               '1111\n'
               '1111\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '1\n'
               '122\n'
               '22\n'
               '2\n'
               '2\n'),
 Fragment(document_cs='d55b76330fbadae8b8c698c2ee434fab43fa4017468bd9b81cf5210b39b4de1c',
          id=2539,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2540,
          lineno=16,
          tokens=60,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Shape',
          body='class Shape\n'
               '{ // Abstract class\n'
               'protected:\n'
               '\tdouble base;\n'
               '\tdouble height;\n'
               '\n'
               'public:\n'
               '\tvoid get_data(double base, double height)\n'
               '\t{\n'
               '\t\tthis->base = base;\n'
               '\t\tthis->height = height;\n'
               '\t}\n'
               '\tvoid virtual display_area() = 0; // pure virtual function\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2541,
          lineno=32,
          tokens=39,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Triangle',
          body='class Triangle : public Shape\n'
               '{\n'
               'public:\n'
               '\tvoid display_area()\n'
               '\t{\n'
               '\t\tcout << "Area of triangle: " << 0.5 * base * height << '
               'endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2542,
          lineno=42,
          tokens=35,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Rectanglee',
          body='class Rectanglee : public Shape\n'
               '{\n'
               'public:\n'
               '\tvoid display_area()\n'
               '\t{\n'
               '\t\tcout << "Area of Rectangle: " << base * height << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2543,
          lineno=51,
          tokens=40,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Circle',
          body='class Circle : public Shape\n'
               '{\n'
               'public:\n'
               '\tvoid display_area()\n'
               '\t{\n'
               '\t\tcout << "Area of Circle: " << base * base * 3.1415 << '
               'endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2544,
          lineno=19,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='base',
          body='double base;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2545,
          lineno=20,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='height',
          body='double height;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2546,
          lineno=12,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First',
          body='F_First()'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2547,
          lineno=13,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second',
          body='F_Second()'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2548,
          lineno=60,
          tokens=215,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "       M A I N  M E N U\\n"\n'
               '\t\t\t << "-------------------------------\\n"\n'
               '\t\t\t << "1. First program\\n"\n'
               '\t\t\t << "2. Second program\\n"\n'
               '\t\t\t << "0. Exit\\n"\n'
               '\t\t\t << "-------------------------------\\n"\n'
               '\t\t\t << "Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\t// First program\n'
               '\t\tcase 49:\n'
               '\t\t\tF_First();\n'
               '\t\t\tbreak;\n'
               '\t\t\t// second program\n'
               '\t\tcase 50:\n'
               '\t\t\tF_Second();\n'
               '\t\t\tbreak;\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "     Your choice is not available in '
               'Menu.\\n     Please, enter one more time.\\n";\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tbreak;\n'
               '\t\tcase 48:\n'
               '\t\t\treturn 0;\n'
               '\t\t\tbreak;\n'
               '\t\t} // Switch\n'
               '\t}\t  // For loop\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2549,
          lineno=60,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2550,
          lineno=95,
          tokens=247,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First',
          body='void F_First()\n'
               '{\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "      C A L C U L A T I N G  A R E A S\\n"\n'
               '\t\t\t << "-------------------------------------------\\n"\n'
               '\t\t\t << "1. Triangle\\n"\n'
               '\t\t\t << "2. Rectangle\\n"\n'
               '\t\t\t << "0. Back\\n"\n'
               '\t\t\t << "Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\t// Case to Exit from the program\n'
               '\t\tcase 48:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t\t// First program\n'
               '\t\tcase 49:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "       T R I A N G L E \\n";\n'
               '\t\t\tcout << "----------------------------------\\n";\n'
               '\t\t\tShape *shape; //\n'
               '\t\t\tTriangle triangle;\n'
               '\t\t\tshape = &triangle; // overriding functions for triangle\n'
               '\t\t\tcout << "Enter the base: ";\n'
               '\t\t\tcin >> b;\n'
               '\t\t\tcout << "Entet the height: ";\n'
               '\t\t\tcin >> h;\n'
               '\t\t\tshape->get_data(b, h);\n'
               '\t\t\tshape->d'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2551,
          lineno=95,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First',
          body='F_First()'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2552,
          lineno=130,
          tokens=222,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First',
          body='isplay_area();\n'
               '\t\t\tcout << "-----------------------------------\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t\t// second program\n'
               '\t\tcase 50:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "      R E C T A N G L E \\n";\n'
               '\t\t\tcout << "----------------------------------\\n";\n'
               '\t\t\tShape *shape; //\n'
               '\t\t\tRectanglee rectangle;\n'
               '\t\t\tshape = &rectangle;\n'
               '\t\t\tcout << "Enter the base: ";\n'
               '\t\t\tcin >> b;\n'
               '\t\t\tcout << "Entet the height: ";\n'
               '\t\t\tcin >> h;\n'
               '\t\t\tshape->get_data(b, h);\n'
               '\t\t\tshape->display_area();\n'
               '\t\t\tcout << "------------------------------------\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << "Your choice is not available in Menu.\\nPlease, '
               'enter one more time.\\n";\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tSleep(0700);\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // Switch\n'
               '\t}\t  // For loop\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2553,
          lineno=168,
          tokens=4,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second',
          body='F_Second()'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2554,
          lineno=168,
          tokens=175,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second',
          body='void F_Second()\n'
               '{\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << "      S E C O N D  P R O G R A M\\n"\n'
               '\t\t\t << "-------------------------------------\\n"\n'
               '\t\t\t << "1. Triangle\\n"\n'
               '\t\t\t << "2. Rectangle\\n"\n'
               '\t\t\t << "3. Circle\\n"\n'
               '\t\t\t << "0. Back\\n"\n'
               '\t\t\t << "Your choice: \\n";\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t\t// Case to Exit from the program\n'
               '\t\tcase 48:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t\t// First program\n'
               '\t\tcase 49:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "       T R I A N G L E \\n"'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2555,
          lineno=194,
          tokens=134,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second',
          body=';\n'
               '\t\t\tcout << "----------------------------------\\n";\n'
               '\t\t\tShape *shape; //\n'
               '\t\t\tTriangle triangle;\n'
               '\t\t\tshape = &triangle; // overriding functions for triangle\n'
               '\t\t\tcout << "Enter the base: ";\n'
               '\t\t\tcin >> b;\n'
               '\t\t\tcout << "Entet the height: ";\n'
               '\t\t\tcin >> h;\n'
               '\t\t\tshape->get_data(b, h);\n'
               '\t\t\tshape->display_area();\n'
               '\t\t\tcout << "-----------------------------------\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t\t// second program\n'
               '\t\tcase 50:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "      R E C T A N G L'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2556,
          lineno=214,
          tokens=138,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second',
          body=' E \\n";\n'
               '\t\t\tcout << "----------------------------------\\n";\n'
               '\t\t\tShape *shape; //\n'
               '\t\t\tRectanglee rectangle;\n'
               '\t\t\tshape = &rectangle;\n'
               '\t\t\tcout << "Enter the base: ";\n'
               '\t\t\tcin >> b;\n'
               '\t\t\tcout << "Entet the height: ";\n'
               '\t\t\tcin >> h;\n'
               '\t\t\tshape->get_data(b, h);\n'
               '\t\t\tshape->display_area();\n'
               '\t\t\tcout << "------------------------------------\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t\t// Third program\n'
               '\t\tcase 51:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "         C I R C L E \\n";\n'
               '\t\t\tcout << "-----------'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2557,
          lineno=234,
          tokens=147,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second',
          body='-----------------------\\n";\n'
               '\t\t\tShape *shape; //\n'
               '\t\t\tCircle circle1;\n'
               '\t\t\tshape = &circle1;\n'
               '\t\t\tcout << "Enter the radius: ";\n'
               '\t\t\tcin >> b;\n'
               '\t\t\tshape->get_data(b, 0.0);\n'
               '\t\t\tshape->display_area();\n'
               '\t\t\tcout << "------------------------------------\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << "Your choice is not available in Menu.\\nPlease, '
               'enter one more time.\\n";\n'
               '\t\t\tSleep(0700);\n'
               '\t\t\tSleep(0700);\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // Switch\n'
               '\t}\t  // For loop\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2558,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2559,
          lineno=123,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='triangle',
          body='Triangle triangle;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2560,
          lineno=143,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='rectangle',
          body='Rectanglee rectangle;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2561,
          lineno=197,
          tokens=3,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='triangle',
          body='Triangle triangle;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2562,
          lineno=217,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='rectangle',
          body='Rectanglee rectangle;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2563,
          lineno=236,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='circle1',
          body='Circle circle1;'),
 Fragment(document_cs='d5efcf348e16efed0e139d0a05c1919bcd15bf9c09e41039f152cdf7e4029aeb',
          id=2564,
          lineno=1,
          tokens=38,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Circle Rectanglee Shape Triangle\n'
               '  Functions: F_First F_Second main\n'
               '  Fields: base height\n'
               '  Variables: circle1 rectangle triangle\n'
               '  Using: std\n'),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2565,
          lineno=40,
          tokens=4,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='ThreadLocalImpl',
          body='class ThreadLocalImpl'),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2566,
          lineno=47,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_SYSTEM_API',
          body='class SFML_SYSTEM_API'),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2567,
          lineno=71,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setValue',
          body='setValue(void* value)'),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2568,
          lineno=79,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getValue',
          body='getValue() const'),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2569,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_THREADLOCAL_HPP',
          body='#define SFML_THREADLOCAL_HPP'),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2570,
          lineno=38,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='d6b96ea6b2fc886768095ee404881d0ebc562faea20ee80196fa2701f0dc6bab',
          id=2571,
          lineno=1,
          tokens=40,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_SYSTEM_API ThreadLocalImpl\n'
               '  Macros: SFML_THREADLOCAL_HPP\n'
               '  Functions: getValue setValue\n'
               '  Namespaces: priv\n'
               '  Usages: ThreadLocalImpl\n'),
 Fragment(document_cs='d6bb1227fbf77928231608f45d8ac095e1af8cf982cc61038b0e5d7eb9c4c498',
          id=2572,
          lineno=1,
          tokens=173,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Inheritance\n'
               '\n'
               '### Program 1\n'
               'Imagine a publishing company that markets both book and audio '
               'cassette version of its works. Create a class Publication that '
               'stores the `title` (a string) and `price` (type float) of a '
               'publication. \n'
               '\n'
               'From this class derive two classes: \n'
               '- `Book`, which adds a page count (type int). \n'
               '- `Tape`, which add playing time in minutes (type float). \n'
               '\n'
               'Each of these three classes should have: \n'
               '- `getdata() function to display its data \n'
               '- `setdata()` function to get its data from the user at the '
               'keyboard.\n'
               '\n'
               'Write a main() program to test the Book and Tape classes by '
               'creating instances of them, asking the user to fill with data '
               'with `setdata()`, and then displaying the data with '
               '`getdata()`.\n'
               '\n'),
 Fragment(document_cs='d6bb1227fbf77928231608f45d8ac095e1af8cf982cc61038b0e5d7eb9c4c498',
          id=2573,
          lineno=16,
          tokens=231,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='### Program 2\n'
               'Assume that a bank maintains two kinds of accounts for '
               'customers, one called as saving and the other called as '
               'current account.  \n'
               '\n'
               'The saving account provides interest and withdrawal facilities '
               'but no cheque book facility. \n'
               '\n'
               'The current account provides cheque book facility but no '
               'interest. Current account holders should also maintain a '
               'minimum balance and if the balance falls below this level a '
               'service charge is imposed.\n'
               '\n'
               'Create a class `ACCOUNT` that stores customer name, account '
               'number and type of account. \n'
               '\n'
               'From this derive the classes `CURR_ACCT` and `SAV_ACCT` to '
               'make them more specific to their requirements. \n'
               '\n'
               'Do not use any constructors. Use member functions to '
               'initialize the class members. Include necessary member '
               'functions in order to achieve all the tasks:\n'
               '\n'
               'Design a menu based program where user selects the type of '
               'account and perform the following tasks:\n'
               '- Accept deposit from a customer and update the balance.\n'
               '- Display the balance.\n'
               '- Compute and deposit interest.\n'
               '- Permit withdrawal and update the balance.\n'
               '- Check for the minimum balance, impose penalty, necessary and '
               'upload the balance.\n'
               '\n'
               '```\n'
               'CURR_ACCT:\n'
               '---\n'
               'amount, penalty\n'
               '---'),
 Fragment(document_cs='d6bb1227fbf77928231608f45d8ac095e1af8cf982cc61038b0e5d7eb9c4c498',
          id=2574,
          lineno=40,
          tokens=140,
          depth=7,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'Deposit() – will deposit the money and update amount\n'
               'Balance() - will display the balance of account\n'
               'Withdraw() – will allow to withdraw from account (check if '
               'withdrawal amount is less than balance and update balance)\n'
               'Penalty() – apply penalty of USD 2 for maintaining balance '
               'less than 100 USD\n'
               '```\n'
               '```\n'
               'SAV_ACCT:\n'
               '---\n'
               'amount\n'
               '---\n'
               'Deposit() – will deposit the money and update amount\n'
               'Balance() - will display the balance of account\n'
               'Compute_Interest() – calculate interest based on given '
               'condition [ROI is 4% per annum]\n'
               'Withdraw() – will allow to withdraw from account (check if '
               'withdrawal amount is less than balance and update balance)\n'
               '```'),
 Fragment(document_cs='d6bb1227fbf77928231608f45d8ac095e1af8cf982cc61038b0e5d7eb9c4c498',
          id=2575,
          lineno=1,
          tokens=18,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Inheritance\n'
               '### Program 1\n'
               '### Program 2\n'),
 Fragment(document_cs='d7981b4217a07942e988d811b23b77afe983128cc848e5955d0031da506bd97b',
          id=2576,
          lineno=1,
          tokens=49,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment\n'
               '\n'
               '1. Calculate the x^y (power) using recursion.\n'
               '2. Find sum of natural numbers using recursion.\n'
               '3. Display Fibonacci Series Using Recursion.\n'
               '4. Find G.C.D for two integers using recursion.'),
 Fragment(document_cs='d7981b4217a07942e988d811b23b77afe983128cc848e5955d0031da506bd97b',
          id=2577,
          lineno=1,
          tokens=5,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment\n'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2578,
          lineno=41,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2579,
          lineno=61,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setSize',
          body='setSize(const Vector2f& size)'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2580,
          lineno=71,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2581,
          lineno=80,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPointCount',
          body='getPointCount() const'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2582,
          lineno=95,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPoint',
          body='getPoint(std::size_t index) const'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2583,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_RECTANGLESHAPE_HPP',
          body='#define SFML_RECTANGLESHAPE_HPP'),
 Fragment(document_cs='db091d5d41f3c05121dd535245355589f5e4ed864dfeb9f980abeeacba69029c',
          id=2584,
          lineno=1,
          tokens=31,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_RECTANGLESHAPE_HPP\n'
               '  Functions: getPoint getPointCount getSize setSize\n'),
 Fragment(document_cs='db1eda0332028078e05c51da878a849beafa0d37aa049420fec3b77e2508e8fa',
          id=2585,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_ERR_HPP',
          body='#define SFML_ERR_HPP'),
 Fragment(document_cs='db1eda0332028078e05c51da878a849beafa0d37aa049420fec3b77e2508e8fa',
          id=2586,
          lineno=1,
          tokens=14,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_ERR_HPP\n  Usages: ostream\n'),
 Fragment(document_cs='dc0484983043d22c72f8b2f0d4b631d39e626584b0470f7b185e4fe0b52a63e0',
          id=2587,
          lineno=7,
          tokens=117,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main4',
          body='main4()int main4()\n'
               '{\n'
               '\tfor (int i = 1; i <= 5; i++)\n'
               '\t{\n'
               '\t\tfor (int j = 1; j <= i; j++)\n'
               '\t\t{\n'
               '\t\t\tcout << "*";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tfor (int i = 1; i <= 5; i++)\n'
               '\t{\n'
               '\t\tfor (int j = 5; j >= i; j--)\n'
               '\t\t{\n'
               '\t\t\tcout << "*";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='dc0484983043d22c72f8b2f0d4b631d39e626584b0470f7b185e4fe0b52a63e0',
          id=2588,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='dc0484983043d22c72f8b2f0d4b631d39e626584b0470f7b185e4fe0b52a63e0',
          id=2589,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main4\n  Using: std\n'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2590,
          lineno=44,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2591,
          lineno=65,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getBuffer',
          body='getBuffer() const'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2592,
          lineno=86,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onProcessSamples',
          body='onProcessSamples(const Int16* samples, std::size_t '
               'sampleCount)'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2593,
          lineno=92,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onStop',
          body='onStop()'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2594,
          lineno=26,
          tokens=10,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDBUFFERRECORDER_HPP',
          body='#define SFML_SOUNDBUFFERRECORDER_HPP'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2595,
          lineno=100,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_buffer',
          body='SoundBuffer        m_buffer;'),
 Fragment(document_cs='df49d507b7017344fbb5fa69d4c6d824086fe2f416134498c19632f41d18dd6c',
          id=2596,
          lineno=1,
          tokens=43,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_AUDIO_API\n'
               '  Macros: SFML_SOUNDBUFFERRECORDER_HPP\n'
               '  Functions: getBuffer onProcessSamples onStop\n'
               '  Variables: m_buffer\n'
               '  Usages: vector\n'),
 Fragment(document_cs='df7e16691534cca20023299ee637945eddd8f0c96cf03787fc44cb915c83e1ef',
          id=2597,
          lineno=26,
          tokens=8,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOCKETHANDLE_HPP',
          body='#define SFML_SOCKETHANDLE_HPP'),
 Fragment(document_cs='df7e16691534cca20023299ee637945eddd8f0c96cf03787fc44cb915c83e1ef',
          id=2598,
          lineno=46,
          tokens=6,
          depth=4,
          parent_id=None,
          category='typedef',
          summary=False,
          name='UINT_PTR',
          body='typedef UINT_PTR SocketHandle;'),
 Fragment(document_cs='df7e16691534cca20023299ee637945eddd8f0c96cf03787fc44cb915c83e1ef',
          id=2599,
          lineno=50,
          tokens=5,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='SocketHandle',
          body='typedef int SocketHandle;'),
 Fragment(document_cs='df7e16691534cca20023299ee637945eddd8f0c96cf03787fc44cb915c83e1ef',
          id=2600,
          lineno=1,
          tokens=21,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Typedefs: SocketHandle UINT_PTR\n'
               '  Macros: SFML_SOCKETHANDLE_HPP\n'),
 Fragment(document_cs='dfa42f29ec5e46de8d53439ead30cbd829c85f5d685cf655f29769e408972609',
          id=2601,
          lineno=1,
          tokens=77,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment\n'
               '\n'
               '1. Write a program to calculate area of a circle using '
               'functions.\n'
               '2. Write a program to swap two values using functions.\n'
               '3. Write a program to convert time to minutes using functions. '
               '(input 3 variables namely hours, minutes and seconds. Convert '
               'everything into minutes.)\n'
               '4. Write a program to sum the series up to n (Input n)'),
 Fragment(document_cs='dfa42f29ec5e46de8d53439ead30cbd829c85f5d685cf655f29769e408972609',
          id=2602,
          lineno=1,
          tokens=5,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment\n'),
 Fragment(document_cs='e041d46ce4f2ed7bed1b151bb9ee381ca4af5e1de61ebe89fac00a4c206d453d',
          id=2603,
          lineno=9,
          tokens=113,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tcout << "\\t\\tC++ program to Calculate Area of Square." << '
               'endl;\n'
               '\tfloat a, Area;\n'
               '\tcout << "Please enter the value for the side of Square: ";\n'
               '\tcin >> a;\n'
               '\tif (a > 0)\n'
               '\t{\n'
               '\t\tArea = a * a;\n'
               '\t\tcout << "The area of Square is " << Area << ";" << endl;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "Negetive numbers cannot be applied !!!" << endl;\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='e041d46ce4f2ed7bed1b151bb9ee381ca4af5e1de61ebe89fac00a4c206d453d',
          id=2604,
          lineno=7,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='e041d46ce4f2ed7bed1b151bb9ee381ca4af5e1de61ebe89fac00a4c206d453d',
          id=2605,
          lineno=1,
          tokens=10,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Using: std\n'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2606,
          lineno=41,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='GlContext',
          body='class GlContext'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2607,
          lineno=50,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2608,
          lineno=78,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setActive',
          body='setActive(bool active)'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2609,
          lineno=90,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getSettings',
          body='getSettings() const'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2610,
          lineno=100,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='isExtensionAvailable',
          body='isExtensionAvailable(const char* name)'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2611,
          lineno=110,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getFunction',
          body='getFunction(const char* name)'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2612,
          lineno=122,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getActiveContext',
          body='getActiveContext()'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2613,
          lineno=133,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getActiveContextId',
          body='getActiveContextId()'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2614,
          lineno=146,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Context',
          body='Context(const ContextSettings& settings, unsigned int width, '
               'unsigned int height)'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2615,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_CONTEXT_HPP',
          body='#define SFML_CONTEXT_HPP'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2616,
          lineno=39,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2617,
          lineno=50,
          tokens=49,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='GlResource',
          body='class SFML_WINDOW_API Context : GlResource, NonCopyable\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// The constructor creates and activates the context\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Context();'),
 Fragment(document_cs='e15ad90eb00051d088ad6d8d58a62dfbd804323c3d2ce76b38624a75d85e8774',
          id=2618,
          lineno=1,
          tokens=57,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: GlContext SFML_WINDOW_API\n'
               '  Macros: SFML_CONTEXT_HPP\n'
               '  Functions: Context getActiveContext getActiveContextId '
               'getFunction getSettings isExtensionAvailable setActive\n'
               '  Variables: GlResource\n'
               '  Namespaces: priv\n'
               '  Usages: GlContext\n'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2619,
          lineno=38,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2620,
          lineno=39,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='RenderTarget',
          body='class RenderTarget'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2621,
          lineno=40,
          tokens=3,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='RenderTexture',
          body='class RenderTexture'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2622,
          lineno=41,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Text',
          body='class Text'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2623,
          lineno=42,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Window',
          body='class Window'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2624,
          lineno=48,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2625,
          lineno=78,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Texture',
          body='Texture(const Texture& copy)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2626,
          lineno=97,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(unsigned int width, unsigned int height)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2627,
          lineno=128,
          tokens=18,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& filename, const IntRect& area '
               '= IntRect())'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2628,
          lineno=160,
          tokens=23,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const void* data, std::size_t size, const '
               'IntRect& area = IntRect())'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2629,
          lineno=191,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& stream, const IntRect& area = '
               'IntRect())'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2630,
          lineno=215,
          tokens=17,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromImage',
          body='loadFromImage(const Image& image, const IntRect& area = '
               'IntRect())'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2631,
          lineno=223,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2632,
          lineno=238,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='copyToImage',
          body='copyToImage() const'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2633,
          lineno=256,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Uint8* pixels)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2634,
          lineno=278,
          tokens=23,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Uint8* pixels, unsigned int width, unsigned int '
               'height, unsigned int x, unsigned int y)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2635,
          lineno=298,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Texture& texture)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2636,
          lineno=315,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Texture& texture, unsigned int x, unsigned int y)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2637,
          lineno=335,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Image& image)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2638,
          lineno=352,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Image& image, unsigned int x, unsigned int y)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2639,
          lineno=372,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Window& window)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2640,
          lineno=389,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update(const Window& window, unsigned int x, unsigned int y)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2641,
          lineno=405,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setSmooth',
          body='setSmooth(bool smooth)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2642,
          lineno=415,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isSmooth',
          body='isSmooth() const'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2643,
          lineno=440,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setSrgb',
          body='setSrgb(bool sRgb)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2644,
          lineno=450,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isSrgb',
          body='isSrgb() const'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2645,
          lineno=474,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setRepeated',
          body='setRepeated(bool repeated)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2646,
          lineno=484,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='isRepeated',
          body='isRepeated() const'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2647,
          lineno=509,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='generateMipmap',
          body='generateMipmap()'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2648,
          lineno=527,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='swap',
          body='swap(Texture& right)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2649,
          lineno=539,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getNativeHandle',
          body='getNativeHandle() const'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2650,
          lineno=572,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='bind',
          body='bind(const Texture* texture, CoordinateType coordinateType = '
               'Normalized)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2651,
          lineno=584,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getMaximumSize',
          body='getMaximumSize()'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2652,
          lineno=605,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getValidSize',
          body='getValidSize(unsigned int size)'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2653,
          lineno=614,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='invalidateMipmap',
          body='invalidateMipmap()'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2654,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TEXTURE_HPP',
          body='#define SFML_TEXTURE_HPP'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2655,
          lineno=589,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='RenderTexture',
          body='friend class RenderTexture;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2656,
          lineno=590,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='RenderTarget',
          body='friend class RenderTarget;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2657,
          lineno=619,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_size',
          body='Vector2u     m_size;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2658,
          lineno=620,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_actualSize',
          body='Vector2u     m_actualSize;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2659,
          lineno=621,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_texture',
          body='unsigned int m_texture;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2660,
          lineno=622,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_isSmooth',
          body='bool         m_isSmooth;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2661,
          lineno=623,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_sRgb',
          body='bool         m_sRgb;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2662,
          lineno=624,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_isRepeated',
          body='bool         m_isRepeated;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2663,
          lineno=625,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_pixelsFlipped',
          body='mutable bool m_pixelsFlipped;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2664,
          lineno=626,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_fboAttachment',
          body='bool         m_fboAttachment;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2665,
          lineno=627,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_hasMipmap',
          body='bool         m_hasMipmap;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2666,
          lineno=628,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_cacheId',
          body='Uint64       m_cacheId;'),
 Fragment(document_cs='e24acb2c0cb6208fd40ef1bb2ec3605f03707682f28afd7ef553829754a9e41b',
          id=2667,
          lineno=1,
          tokens=116,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream RenderTarget RenderTexture '
               'SFML_GRAPHICS_API Text Window\n'
               '  Macros: SFML_TEXTURE_HPP\n'
               '  Functions: Texture bind copyToImage create generateMipmap '
               'getMaximumSize getNativeHandle getSize getValidSize '
               'invalidateMipmap isRepeated isSmooth isSrgb loadFromFile '
               'loadFromImage loadFromMemory loadFromStream setRepeated '
               'setSmooth setSrgb swap update\n'
               '  Variables: RenderTarget RenderTexture m_actualSize m_cacheId '
               'm_fboAttachment m_hasMipmap m_isRepeated m_isSmooth '
               'm_pixelsFlipped m_sRgb m_size m_texture\n'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2668,
          lineno=6,
          tokens=113,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Rectangle',
          body='class Rectangle\n'
               '{\n'
               'private:\n'
               '\tdouble length, breadth;\n'
               '\n'
               'public:\n'
               '\tdouble getArea()\n'
               '\t{\n'
               '\t\treturn length * breadth;\n'
               '\t}\n'
               '\tvoid setLength(double length)\n'
               '\t{\n'
               '\t\tthis->length = length;\n'
               '\t}\n'
               '\tvoid setBreadth(double breadth)\n'
               '\t{\n'
               '\t\tthis->breadth = breadth;\n'
               '\t}\n'
               '\tRectangle operator+(Rectangle &r2)\n'
               '\t{\n'
               '\t\tRectangle temp;\n'
               '\t\ttemp.setLength(length + r2.length);\n'
               '\t\ttemp.setBreadth(breadth + r2.breadth);\n'
               '\t\treturn temp;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2669,
          lineno=61,
          tokens=123,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Distance',
          body='class Distance\n'
               '{\n'
               'private:\n'
               '\tfloat Km, M;\n'
               '\n'
               'public:\n'
               '\tvoid setKm(int Km)\n'
               '\t{\n'
               '\t\tthis->Km = Km;\n'
               '\t}\n'
               '\tvoid setM(int M)\n'
               '\t{\n'
               '\t\tthis->M = M;\n'
               '\t}\n'
               '\tDistance operator==(Distance &d)\n'
               '\t{\n'
               '\t\tif ((Km == d.Km) && (M == d.M))\n'
               '\t\t{\n'
               '\t\t\tcout << "They are EQUAL.\\n";\n'
               '\t\t\treturn *this;\n'
               '\t\t}\n'
               '\t\telse\n'
               '\t\t{\n'
               '\t\t\tcout << "NOT EQUAL.\\n";\n'
               '\t\t\treturn *this;\n'
               '\t\t}\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2670,
          lineno=9,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='length',
          body='double length, breadth;'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2671,
          lineno=64,
          tokens=5,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Km',
          body='float Km, M;'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2672,
          lineno=33,
          tokens=188,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='RectangleFirst',
          body='RectangleFirst()void RectangleFirst()\n'
               '{\n'
               '\tRectangle r3, r1, r2;\n'
               '\tint temp;\n'
               '\tcout << "Rectangle 1" << endl;\n'
               '\tcout << "Length: ";\n'
               '\tcin >> temp;\n'
               '\tr1.setLength(temp);\n'
               '\tcout << "Breadth: ";\n'
               '\tcin >> temp;\n'
               '\tr1.setBreadth(temp);\n'
               '\tcout << "Area: " << r1.getArea() << endl\n'
               '\t\t << endl;\n'
               '\n'
               '\tcout << "Rectangle 2" << endl;\n'
               '\tcout << "Length: ";\n'
               '\tcin >> temp;\n'
               '\tr2.setLength(temp);\n'
               '\tcout << "Breadth: ";\n'
               '\tcin >> temp;\n'
               '\tr2.setBreadth(temp);\n'
               '\tcout << "Area: " << r2.getArea() << endl\n'
               '\t\t << endl;\n'
               '\n'
               '\tr3 = r1 + r2; // overloading by the binary operator\n'
               '\tcout << "Rectangle 3 Area: " << r3.getArea() << endl;\n'
               '}'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2673,
          lineno=89,
          tokens=160,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='DistanceSecond',
          body='void DistanceSecond()\n'
               '{\n'
               '\tDistance d1, d2;\n'
               '\tfloat k1, m1, k2, m2;\n'
               '\tcout << "First distance: \\n";\n'
               '\tcout << "Kilometers: ";\n'
               '\tcin >> k1;\n'
               '\tcout << "Meters: ";\n'
               '\tcin >> m1;\n'
               '\tif (m1 > 1000)\n'
               '\t{\n'
               '\t\tk1 = m1 / 1000;\n'
               '\t}\n'
               '\tcout << endl\n'
               '\t\t << endl;\n'
               '\n'
               '\tcout << "Second distance: \\n";\n'
               '\tcout << "Kilometers: ";\n'
               '\tcin >> k2;\n'
               '\tcout << "Meters: ";\n'
               '\tcin >> m2;\n'
               '\tif (m2 > 1000)\n'
               '\t{\n'
               '\t\tk2 = m2 / 1000;\n'
               '\t}\n'
               '\td1 == d2;\n'
               '}DistanceSecond()'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2674,
          lineno=116,
          tokens=127,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint choice;\n'
               '\n'
               '\tdo\n'
               '\t{\n'
               '\n'
               '\t\tcout << "1. Rectangle" << endl\n'
               '\t\t\t << "2. Distance" << endl\n'
               '\t\t\t << "3. Exit" << endl\n'
               '\t\t\t << "Your choice: ";\n'
               '\t\tcin >> choice;\n'
               '\t\tswitch (choice)\n'
               '\t\t{\n'
               '\t\tcase 1:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tRectangleFirst();\n'
               '\t\t\tsystem("pause");\n'
               '\t\tcase 2:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tDistanceSecond();\n'
               '\t\t\tsystem("pause");\n'
               '\t\tdefault:\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t} while (choice != 3);\n'
               '\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2675,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2676,
          lineno=26,
          tokens=6,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='temp',
          body='Rectangle temp;int temp;'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2677,
          lineno=118,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice',
          body='int choice;'),
 Fragment(document_cs='e2a054c180ff1120ca8effe098a8c78a0cf04e1a08b9e25f6645532f4ce1fbaf',
          id=2678,
          lineno=1,
          tokens=32,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Distance Rectangle\n'
               '  Functions: DistanceSecond RectangleFirst main\n'
               '  Fields: Km length\n'
               '  Variables: choice temp\n'
               '  Using: std\n'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2679,
          lineno=42,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2680,
          lineno=60,
          tokens=24,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Vertex',
          body='Vertex(const Vector2f& thePosition)Vertex(const Vector2f& '
               'thePosition, const Color& theColor)'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2681,
          lineno=82,
          tokens=42,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='Vertex',
          body='Vertex(const Vector2f& thePosition, const Vector2f& '
               'theTexCoords)Vertex(const Vector2f& thePosition, const Color& '
               'theColor, const Vector2f& theTexCoords)'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2682,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VERTEX_HPP',
          body='#define SFML_VERTEX_HPP'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2683,
          lineno=97,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='position',
          body='Vector2f  position;'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2684,
          lineno=98,
          tokens=4,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='color',
          body='Color     color;'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2685,
          lineno=99,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='texCoords',
          body='Vector2f  texCoords;'),
 Fragment(document_cs='e3759dda5633031f2484af0bca9b9c11d45dea7ae1154634240c680a51b76f7f',
          id=2686,
          lineno=1,
          tokens=30,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_VERTEX_HPP\n'
               '  Functions: Vertex\n'
               '  Variables: color position texCoords\n'),
 Fragment(document_cs='e63ba5dd95c943b4ff29d1c3828bae8b27e413490ac2288fbf69c733e396b563',
          id=2687,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SYSTEM_HPP',
          body='#define SFML_SYSTEM_HPP'),
 Fragment(document_cs='e63ba5dd95c943b4ff29d1c3828bae8b27e413490ac2288fbf69c733e396b563',
          id=2688,
          lineno=1,
          tokens=8,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_SYSTEM_HPP\n'),
 Fragment(document_cs='e850c3b260cb5eea1679ea6361dc57f43f36c08fd080e5cd4a08ace0bcfa3780',
          id=2689,
          lineno=1,
          tokens=221,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Separation of the interface from '
               'implementation constructors and destructors\n'
               '\n'
               '**Note: In class diagram + for public, - for private.**\n'
               '\n'
               '### Program 1\n'
               'The class Person with private attributes name(string) and '
               'age(int).\n'
               '\n'
               'The class contains three functions.\n'
               '- One with no parameter (for initializing default value).\n'
               '- With two parameter (one parameter with default value).\n'
               '- Function to display the data.\n'
               '\n'
               '```\n'
               'Person\n'
               '---\n'
               '- Name: String\n'
               '- Age: int\n'
               '---\n'
               '+ Display()\n'
               '<constructor> + Person()\n'
               '<constructor> + Person(a: int)\n'
               '```\n'
               '\n'
               '### Program 2\n'
               'Construct a class to hold personnel records class name is '
               'Records. Use the following data members, and keep them '
               'private:\n'
               '```\n'
               'string name;\n'
               'float salary;\n'
               'string date_of_birth;\n'
               '```\n'
               'Create two constructors, one to initialize the record with its '
               'necessary values and one default. \n'
               '\n'
               'Create member functions to alter the individual’s name, '
               'salary, and date of birth.\n'
               '\n'
               'Create two objects use one object to refer member function '
               'through pointer and other object will be accessing through dot '
               'operator.\n'
               '\n'
               '\n'),
 Fragment(document_cs='e850c3b260cb5eea1679ea6361dc57f43f36c08fd080e5cd4a08ace0bcfa3780',
          id=2690,
          lineno=38,
          tokens=72,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='### Program 3\n'
               'Write a class Account that represents your bank account. \n'
               '- It contains information like name(string), account '
               'number(string) and balance(float). (All are private)\n'
               '- Add constructors and destructors. \n'
               '- Create some objects, \n'
               '- Write a code to display message when it is created and '
               'similarly display message when it will be destroyed.\n'
               '\n'
               '\n'),
 Fragment(document_cs='e850c3b260cb5eea1679ea6361dc57f43f36c08fd080e5cd4a08ace0bcfa3780',
          id=2691,
          lineno=46,
          tokens=188,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='### Program 4\n'
               'Write C++ header file Triangle.h with class Triangle with data '
               'members and member functions as per following class diagram. '
               'In Triangle.h file only implement get and set methods. '
               '(Consider right angle Triangle)\n'
               '```\n'
               'Triangle\n'
               '---\n'
               '- Height: double\n'
               '- Base: double\n'
               '---\n'
               '<<constructor>> + Triangle(double, double)\n'
               '<<destructor>> +~ Triangle()  # +~ stands for destructor\n'
               '+ getHeight(): double\n'
               '+ setHeight(double)\n'
               '+ getBase(): double\n'
               '+ setBase(double)\n'
               '+ getArea(): double\n'
               '+ getPerimeter(): double\n'
               '```\n'
               'Write C++ program to include header file Triangle.h in your '
               'program. Implement constructor (with default value for height '
               'and width will be 0),  getArea() and getPerimeter() member '
               'functions of Class Triangle and write menu driven program to '
               'get Height and Width details, display measurement (Area and '
               'Perimeter) of Triangle object.'),
 Fragment(document_cs='e850c3b260cb5eea1679ea6361dc57f43f36c08fd080e5cd4a08ace0bcfa3780',
          id=2692,
          lineno=1,
          tokens=37,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Separation of the interface from '
               'implementation constructors and destructors\n'
               '### Program 1\n'
               '### Program 2\n'
               '### Program 3\n'
               '### Program 4\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2693,
          lineno=1,
          tokens=108,
          depth=0,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Generated by CMake\n'
               '\n'
               'if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)\n'
               '   message(FATAL_ERROR "CMake >= 2.6.0 required")\n'
               'endif()\n'
               'cmake_policy(PUSH)\n'
               'cmake_policy(VERSION 2.6)\n'
               '#----------------------------------------------------------------\n'
               '# Generated CMake target import file.\n'
               '#----------------------------------------------------------------\n'
               '\n'
               '# Commands may need to know the format version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION 1)\n'
               '\n'
               '# Protect against multiple inclusion, which would fail when '
               'already imported targets are added once more.\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2694,
          lineno=16,
          tokens=241,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='set(_targetsDefined)\n'
               'set(_targetsNotDefined)\n'
               'set(_expectedTargets)\n'
               'foreach(_expectedTarget sfml-system sfml-main sfml-window '
               'OpenGL sfml-network sfml-graphics Freetype OpenAL Vorbis FLAC '
               'sfml-audio)\n'
               '  list(APPEND _expectedTargets ${_expectedTarget})\n'
               '  if(NOT TARGET ${_expectedTarget})\n'
               '    list(APPEND _targetsNotDefined ${_expectedTarget})\n'
               '  endif()\n'
               '  if(TARGET ${_expectedTarget})\n'
               '    list(APPEND _targetsDefined ${_expectedTarget})\n'
               '  endif()\n'
               'endforeach()\n'
               'if("${_targetsDefined}" STREQUAL "${_expectedTargets}")\n'
               '  unset(_targetsDefined)\n'
               '  unset(_targetsNotDefined)\n'
               '  unset(_expectedTargets)\n'
               '  set(CMAKE_IMPORT_FILE_VERSION)\n'
               '  cmake_policy(POP)\n'
               '  return()\n'
               'endif()\n'
               'if(NOT "${_targetsDefined}" STREQUAL "")\n'
               '  message(FATAL_ERROR "Some (but not all) targets in this '
               'export set were already defined.\\nTargets Defined: '
               '${_targetsDefined}\\nTargets not yet defined: '
               '${_targetsNotDefined}\\n")\n'
               'endif()\n'
               'unset(_targetsDefined)\n'
               'unset(_targetsNotDefined)\n'
               'unset(_expectedTargets)\n'
               '\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2695,
          lineno=43,
          tokens=210,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Compute the installation prefix relative to this file.\n'
               'get_filename_component(_IMPORT_PREFIX '
               '"${CMAKE_CURRENT_LIST_FILE}" PATH)\n'
               'get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" '
               'PATH)\n'
               'get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" '
               'PATH)\n'
               'get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" '
               'PATH)\n'
               'if(_IMPORT_PREFIX STREQUAL "/")\n'
               '  set(_IMPORT_PREFIX "")\n'
               'endif()\n'
               '\n'
               '# Create imported target sfml-system\n'
               'add_library(sfml-system STATIC IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-system PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "SFML_STATIC"\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES "\\$<LINK_ONLY:winmm>"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-main\n'
               'add_library(sfml-main STATIC IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-main PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "SFML_STATIC"\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-window\n'
               'add_library(sfml-window STATIC IMPORTED)\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2696,
          lineno=72,
          tokens=229,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               'set_target_properties(sfml-window PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "SFML_STATIC"\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES '
               '"sfml-system;\\$<LINK_ONLY:OpenGL>;\\$<LINK_ONLY:winmm>;\\$<LINK_ONLY:gdi32>"\n'
               ')\n'
               '\n'
               '# Create imported target OpenGL\n'
               'add_library(OpenGL INTERFACE IMPORTED)\n'
               '\n'
               '# Create imported target sfml-network\n'
               'add_library(sfml-network STATIC IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-network PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "SFML_STATIC"\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES '
               '"sfml-system;\\$<LINK_ONLY:ws2_32>"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-graphics\n'
               'add_library(sfml-graphics STATIC IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-graphics PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "SFML_STATIC"\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES '
               '"sfml-window;\\$<LINK_ONLY:OpenGL>;\\$<LINK_ONLY:Freetype>"\n'
               ')\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2697,
          lineno=99,
          tokens=237,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Create imported target Freetype\n'
               'add_library(Freetype INTERFACE IMPORTED)\n'
               '\n'
               '# Create imported target OpenAL\n'
               'add_library(OpenAL INTERFACE IMPORTED)\n'
               '\n'
               '# Create imported target Vorbis\n'
               'add_library(Vorbis INTERFACE IMPORTED)\n'
               '\n'
               'set_target_properties(Vorbis PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "OV_EXCLUDE_STATIC_CALLBACKS"\n'
               ')\n'
               '\n'
               '# Create imported target FLAC\n'
               'add_library(FLAC INTERFACE IMPORTED)\n'
               '\n'
               'set_target_properties(FLAC PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "FLAC__NO_DLL"\n'
               ')\n'
               '\n'
               '# Create imported target sfml-audio\n'
               'add_library(sfml-audio STATIC IMPORTED)\n'
               '\n'
               'set_target_properties(sfml-audio PROPERTIES\n'
               '  INTERFACE_COMPILE_DEFINITIONS "SFML_STATIC"\n'
               '  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"\n'
               '  INTERFACE_LINK_LIBRARIES '
               '"\\$<LINK_ONLY:OpenAL>;sfml-system;\\$<LINK_ONLY:Vorbis>;\\$<LINK_ONLY:FLAC>"\n'
               ')\n'
               '\n'
               'if(CMAKE_VERSION VERSION_LESS 3.0.0)\n'
               '  message(FATAL_ERROR "This file relies on consumers using '
               'CMake 3.0.0 or greater.")\n'
               'endif()\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2698,
          lineno=132,
          tokens=221,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# Load information for each installed configuration.\n'
               'get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" '
               'PATH)\n'
               'file(GLOB CONFIG_FILES "${_DIR}/SFMLStaticTargets-*.cmake")\n'
               'foreach(f ${CONFIG_FILES})\n'
               '  include(${f})\n'
               'endforeach()\n'
               '\n'
               '# Cleanup temporary variables.\n'
               'set(_IMPORT_PREFIX)\n'
               '\n'
               '# Loop over all imported files and verify that they actually '
               'exist\n'
               'foreach(target ${_IMPORT_CHECK_TARGETS} )\n'
               '  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )\n'
               '    if(NOT EXISTS "${file}" )\n'
               '      message(FATAL_ERROR "The imported target \\"${target}\\" '
               'references the file\n'
               '   \\"${file}\\"\n'
               'but this file does not exist.  Possible reasons include:\n'
               '* The file was deleted, renamed, or moved to another '
               'location.\n'
               '* An install or uninstall procedure did not complete '
               'successfully.\n'
               '* The installation package was faulty and contained\n'
               '   \\"${CMAKE_CURRENT_LIST_FILE}\\"\n'
               'but not all the files it references.\n'
               '")\n'
               '    endif()\n'
               '  endforeach()\n'
               '  unset(_IMPORT_CHECK_FILES_FOR_${target})\n'
               'endforeach()\n'
               'unset(_IMPORT_CHECK_TARGETS)\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2699,
          lineno=161,
          tokens=54,
          depth=1,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '# This file does not depend on other imported targets which '
               'have\n'
               '# been exported from the same project but in a separate export '
               'set.\n'
               '\n'
               '# Commands beyond this point should not need to know the '
               'version.\n'
               'set(CMAKE_IMPORT_FILE_VERSION)\n'
               'cmake_policy(POP)\n'),
 Fragment(document_cs='e9705c4aca9ccccc2cda582a4d90dc69521eaa8047843fb3d6d568a1dc16a529',
          id=2700,
          lineno=1,
          tokens=0,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body=''),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2701,
          lineno=48,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='GlContext',
          body='class GlContext'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2702,
          lineno=49,
          tokens=3,
          depth=5,
          parent_id=None,
          category='class',
          summary=False,
          name='WindowImpl',
          body='class WindowImpl'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2703,
          lineno=52,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='Event',
          body='class Event'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2704,
          lineno=58,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_WINDOW_API',
          body='class SFML_WINDOW_API'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2705,
          lineno=90,
          tokens=28,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Window',
          body='Window(VideoMode mode, const String& title, Uint32 style = '
               'Style::Default, const ContextSettings& settings = '
               'ContextSettings())'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2706,
          lineno=106,
          tokens=14,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='Window',
          body='Window(WindowHandle handle, const ContextSettings& settings = '
               'ContextSettings())'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2707,
          lineno=133,
          tokens=28,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(VideoMode mode, const String& title, Uint32 style = '
               'Style::Default, const ContextSettings& settings = '
               'ContextSettings())'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2708,
          lineno=150,
          tokens=14,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(WindowHandle handle, const ContextSettings& settings = '
               'ContextSettings())'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2709,
          lineno=162,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='close',
          body='close()'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2710,
          lineno=174,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='isOpen',
          body='isOpen() const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2711,
          lineno=187,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getSettings',
          body='getSettings() const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2712,
          lineno=212,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='pollEvent',
          body='pollEvent(Event& event)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2713,
          lineno=239,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='waitEvent',
          body='waitEvent(Event& event)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2714,
          lineno=249,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition() const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2715,
          lineno=263,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(const Vector2i& position)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2716,
          lineno=276,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2717,
          lineno=286,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setSize',
          body='setSize(const Vector2u& size)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2718,
          lineno=296,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setTitle',
          body='setTitle(const String& title)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2719,
          lineno=315,
          tokens=15,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setIcon',
          body='setIcon(unsigned int width, unsigned int height, const Uint8* '
               'pixels)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2720,
          lineno=325,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setVisible',
          body='setVisible(bool visible)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2721,
          lineno=340,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setVerticalSyncEnabled',
          body='setVerticalSyncEnabled(bool enabled)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2722,
          lineno=350,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setMouseCursorVisible',
          body='setMouseCursorVisible(bool visible)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2723,
          lineno=363,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setMouseCursorGrabbed',
          body='setMouseCursorGrabbed(bool grabbed)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2724,
          lineno=382,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setMouseCursor',
          body='setMouseCursor(const Cursor& cursor)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2725,
          lineno=396,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setKeyRepeatEnabled',
          body='setKeyRepeatEnabled(bool enabled)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2726,
          lineno=413,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setFramerateLimit',
          body='setFramerateLimit(unsigned int limit)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2727,
          lineno=426,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setJoystickThreshold',
          body='setJoystickThreshold(float threshold)'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2728,
          lineno=444,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setActive',
          body='setActive(bool active = true) const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2729,
          lineno=460,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='requestFocus',
          body='requestFocus()'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2730,
          lineno=473,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='hasFocus',
          body='hasFocus() const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2731,
          lineno=483,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='display',
          body='display()'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2732,
          lineno=497,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getSystemHandle',
          body='getSystemHandle() const'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2733,
          lineno=518,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='onResize',
          body='onResize()'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2734,
          lineno=540,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='initialize',
          body='initialize()'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2735,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_WINDOW_HPP',
          body='#define SFML_WINDOW_HPP'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2736,
          lineno=46,
          tokens=7,
          depth=3,
          parent_id=None,
          category='namespace',
          summary=False,
          name='priv',
          body="namespace b'priv' {...}"),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2737,
          lineno=58,
          tokens=64,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='GlResource',
          body='class SFML_WINDOW_API Window : GlResource, NonCopyable\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               "    /// This constructor doesn't actually create the window,\n"
               '    /// use the other constructors or call create() to do so.\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Window();'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2738,
          lineno=547,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_clock',
          body='Clock             m_clock;'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2739,
          lineno=548,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_frameTimeLimit',
          body='Time              m_frameTimeLimit;'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2740,
          lineno=549,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_size',
          body='Vector2u          m_size;'),
 Fragment(document_cs='ea92298760713e7658a19987ecd7d054c25f58f339ff44042674cdc93bc13b15',
          id=2741,
          lineno=1,
          tokens=110,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Event GlContext SFML_WINDOW_API WindowImpl\n'
               '  Macros: SFML_WINDOW_HPP\n'
               '  Functions: Window close create display getPosition '
               'getSettings getSize getSystemHandle hasFocus initialize isOpen '
               'onResize pollEvent requestFocus setActive setFramerateLimit '
               'setIcon setJoystickThreshold setKeyRepeatEnabled '
               'setMouseCursor setMouseCursorGrabbed setMouseCursorVisible '
               'setPosition setSize setTitle setVerticalSyncEnabled setVisible '
               'waitEvent\n'
               '  Variables: GlResource m_clock m_frameTimeLimit m_size\n'
               '  Namespaces: priv\n'
               '  Usages: Default\n'),
 Fragment(document_cs='ed362f03c27122d604561c8d7aea360efcd4c1845eae9dcd3a8eae47ea34ee53',
          id=2742,
          lineno=7,
          tokens=71,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main6',
          body='int main6() {\n'
               '\tint n, sum = 0;\n'
               '\tcout << "Enter the value of n: ";\n'
               '\tcin >> n;\n'
               '\tfor (int i = 1;i <= n;i=i+2)\n'
               '\t\tsum += i;\n'
               '\tcout << "Sum is : " << sum << endl;\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main6()'),
 Fragment(document_cs='ed362f03c27122d604561c8d7aea360efcd4c1845eae9dcd3a8eae47ea34ee53',
          id=2743,
          lineno=6,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='ed362f03c27122d604561c8d7aea360efcd4c1845eae9dcd3a8eae47ea34ee53',
          id=2744,
          lineno=1,
          tokens=11,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main6\n  Using: std\n'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2745,
          lineno=38,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2746,
          lineno=39,
          tokens=4,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='SoundFileReader',
          body='class SoundFileReader'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2747,
          lineno=40,
          tokens=4,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='SoundFileWriter',
          body='class SoundFileWriter'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2748,
          lineno=46,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2749,
          lineno=66,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='unregisterReader',
          body='unregisterReader()'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2750,
          lineno=75,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='registerWriter',
          body='registerWriter()'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2751,
          lineno=84,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='unregisterWriter',
          body='unregisterWriter()'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2752,
          lineno=98,
          tokens=11,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='createReaderFromFilename',
          body='createReaderFromFilename(const std::string& filename)'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2753,
          lineno=113,
          tokens=17,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='createReaderFromMemory',
          body='createReaderFromMemory(const void* data, std::size_t '
               'sizeInBytes)'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2754,
          lineno=127,
          tokens=8,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='createReaderFromStream',
          body='createReaderFromStream(InputStream& stream)'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2755,
          lineno=139,
          tokens=11,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='createWriterFromFilename',
          body='createWriterFromFilename(const std::string& filename)'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2756,
          lineno=26,
          tokens=10,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SOUNDFILEFACTORY_HPP',
          body='#define SFML_SOUNDFILEFACTORY_HPP'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2757,
          lineno=153,
          tokens=26,
          depth=3,
          parent_id=None,
          category='struct',
          summary=False,
          name='WriterFactory',
          body='struct WriterFactory\n'
               '    {\n'
               '        bool (*check)(const std::string&);\n'
               '        SoundFileWriter* (*create)();\n'
               '    }'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2758,
          lineno=151,
          tokens=12,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='ReaderFactoryArray',
          body='typedef std::vector<ReaderFactory> ReaderFactoryArray;'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2759,
          lineno=158,
          tokens=12,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='WriterFactoryArray',
          body='typedef std::vector<WriterFactory> WriterFactoryArray;'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2760,
          lineno=163,
          tokens=8,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='s_readers',
          body='static ReaderFactoryArray s_readers;'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2761,
          lineno=164,
          tokens=8,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='s_writers',
          body='static WriterFactoryArray s_writers;'),
 Fragment(document_cs='edd9ddf2436dfcfa4ef434ebb7468c220b0dda6e1d19f62d1aa6ae0af87da946',
          id=2762,
          lineno=1,
          tokens=83,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream SFML_AUDIO_API SoundFileReader '
               'SoundFileWriter\n'
               '  Structs: WriterFactory\n'
               '  Typedefs: ReaderFactoryArray WriterFactoryArray\n'
               '  Macros: SFML_SOUNDFILEFACTORY_HPP\n'
               '  Functions: createReaderFromFilename createReaderFromMemory '
               'createReaderFromStream createWriterFromFilename registerWriter '
               'unregisterReader unregisterWriter\n'
               '  Variables: s_readers s_writers\n'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2763,
          lineno=37,
          tokens=223,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='Vector2',
          body='class Vector2\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               '    /// Creates a Vector2(0, 0).\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Vector2();\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the vector from its coordinates\n'
               '    ///\n'
               '    /// \\param X X coordinate\n'
               '    /// \\param Y Y coordinate\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    Vector2(T X, T Y);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Construct the vector from another type of '
               'vector\n'
               '    ///\n'
               "    /// This constructor doesn't replace the copy "
               'constructor,\n'
               "    /// it's called only when U != T.\n"
               '    /// A call to this constructor will fail to compile if U\n'
               '    /// is not convertible to T.\n'
               '    ///\n'
               '    /// \\param vector Vector to convert\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    template <typename U>\n'
               '    explicit Vector2(const Vector2<U>& vector);\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    // Member data\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    T x; ///< X coordinate of the vector\n'
               '    T y; ///< Y coordinate of the vector\n'
               '}'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2764,
          lineno=47,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Vector2',
          body='Vector2()'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2765,
          lineno=56,
          tokens=17,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Vector2',
          body='Vector2(T X, T Y)Vector2(const Vector2<U>& vector)'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2766,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VECTOR2_HPP',
          body='#define SFML_VECTOR2_HPP'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2767,
          lineno=253,
          tokens=10,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vector2i',
          body='typedef Vector2<int>          Vector2i;'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2768,
          lineno=254,
          tokens=10,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vector2u',
          body='typedef Vector2<unsigned int> Vector2u;'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2769,
          lineno=255,
          tokens=10,
          depth=3,
          parent_id=None,
          category='typedef',
          summary=False,
          name='Vector2f',
          body='typedef Vector2<float>        Vector2f;'),
 Fragment(document_cs='ee0a5555039716313423927b70056310ac17344acf108c78d6520f0a5ab152c1',
          id=2770,
          lineno=1,
          tokens=36,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Vector2\n'
               '  Typedefs: Vector2f Vector2i Vector2u\n'
               '  Macros: SFML_VECTOR2_HPP\n'
               '  Functions: Vector2\n'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2771,
          lineno=6,
          tokens=240,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='DayTime',
          body='class DayTime\n'
               '{\n'
               'private:\n'
               '\tint hour, minute, second;\n'
               '\n'
               'public:\n'
               '\tDayTime()\n'
               '\t{\n'
               '\t\thour = 0;\n'
               '\t\tminute = 0;\n'
               '\t\tsecond = 0;\n'
               '\t}\n'
               '\n'
               '\tDayTime(int h, int m, int s)\n'
               '\t{\n'
               '\t\thour = h;\n'
               '\t\tminute = m;\n'
               '\t\tsecond = s;\n'
               '\t}\n'
               '\tint getHour() const\n'
               '\t{\n'
               '\t\treturn hour;\n'
               '\t}\n'
               '\tint getMinute() const\n'
               '\t{\n'
               '\t\treturn minute;\n'
               '\t}\n'
               '\tint getSecond() const\n'
               '\t{\n'
               '\t\treturn second;\n'
               '\t}\n'
               '\n'
               '\tvoid DisplayTime()\n'
               '\t{\n'
               '\t\tcout << "HH: " << hour << endl\n'
               '\t\t\t << "MM: " << minute << endl\n'
               '\t\t\t << "SS: " << second << endl;\n'
               '\t}\n'
               '\tint asSeconds() const\n'
               '\t{\n'
               '\t\treturn (3600 * hour + 60 * minute + second);\n'
               '\t}\n'
               '\n'
               '\tfriend void operator<<(ostream &out, DayTime &h);\n'
               '\tfriend void operator>>(istream &in, DayTime &h);\n'
               '\tfriend void operator++(DayTime &MainDayTime);\n'
               '\tfriend void operator--(DayTime &MainDayTime2);\n'
               '}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2772,
          lineno=98,
          tokens=195,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Dollar',
          body='class Dollar\n'
               '{\n'
               'private:\n'
               '\tfloat currency, mktrate, offrate;\n'
               '\n'
               'public:\n'
               '\tDollar()\n'
               '\t{\n'
               '\t\tcurrency = 100;\n'
               '\t\tmktrate = 9000;\n'
               '\t\toffrate = 7000;\n'
               '\t}\n'
               '\tfloat getDollar()\n'
               '\t{\n'
               '\t\tcout << endl\n'
               '\t\t\t << "Currency: " << endl;\n'
               '\t\treturn currency;\n'
               '\t}\n'
               '\tfloat getMarketSoums()\n'
               '\t{\n'
               '\t\tcout << "Markent currency: " << endl;\n'
               '\t\treturn currency * mktrate;\n'
               '\t}\n'
               '\tfloat getofficialSoums()\n'
               '\t{\n'
               '\t\tcout << "Official currency:" << endl;\n'
               '\t\treturn currency * offrate;\n'
               '\t}\n'
               '\tvoid setRates()\n'
               '\t{\n'
               '\t\tcout << "Enter current market rate: " << endl;\n'
               '\t\tcin >> mktrate;\n'
               '\t\tcout << "Enter current official rate: " << endl;\n'
               '\t\tcin >> offrate;\n'
               '\t}\n'
               '\tfriend void operator<<(ostream &output, Dollar &p);\n'
               '}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2773,
          lineno=9,
          tokens=7,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='hour',
          body='int hour, minute, second;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2774,
          lineno=101,
          tokens=10,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='currency',
          body='float currency, mktrate, offrate;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2775,
          lineno=12,
          tokens=3,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='DayTime',
          body='DayTime()'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2776,
          lineno=12,
          tokens=28,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='DayTime',
          body='DayTime()\n'
               '\t{\n'
               '\t\thour = 0;\n'
               '\t\tminute = 0;\n'
               '\t\tsecond = 0;\n'
               '\t}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2777,
          lineno=19,
          tokens=44,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='DayTime',
          body='DayTime(int h, int m, int s)DayTime(int h, int m, int s)\n'
               '\t{\n'
               '\t\thour = h;\n'
               '\t\tminute = m;\n'
               '\t\tsecond = s;\n'
               '\t}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2778,
          lineno=104,
          tokens=33,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Dollar',
          body='Dollar()\n'
               '\t{\n'
               '\t\tcurrency = 100;\n'
               '\t\tmktrate = 9000;\n'
               '\t\toffrate = 7000;\n'
               '\t}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2779,
          lineno=104,
          tokens=3,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Dollar',
          body='Dollar()'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2780,
          lineno=144,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='showChoicesforMainMenu',
          body='showChoicesforMainMenu()'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2781,
          lineno=145,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='showChoicesforMainMenu2',
          body='showChoicesforMainMenu2()'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2782,
          lineno=147,
          tokens=150,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint choice;\n'
               '\tDayTime t2(25, 0, 0);\n'
               '\tint hour, minute, second;\n'
               '\tdo\n'
               '\t{\n'
               '\t\tshowChoicesforMainMenu();\n'
               '\t\tcin >> choice;\n'
               '\t\tswitch (choice)\n'
               '\t\t{\n'
               '\t\t\t// for program 1\n'
               '\t\tcase 1:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tint choice2;\n'
               '\n'
               '\t\t\tDayTime h1(10, 10, 10);\n'
               '\t\t\tDayTime h2;\n'
               '\t\t\tcin >> h2;\n'
               '\n'
               '\t\t\tshowChoicesforMainMenu2();\n'
               '\n'
               '\t\t\tdo\n'
               '\t\t\t{\n'
               '\t\t\t\tcin >> choice2;\n'
               '\t\t\t\tswitch (choice2)\n'
               '\t\t\t\t{\n'
               '\t\t\t\tcase 1:\n'
               '\t\t\t\t\tcout << h2;\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2783,
          lineno=147,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2784,
          lineno=178,
          tokens=247,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\t\t << endl;\n'
               '\t\t\t\t\tcout << "Enter your choice: ";\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 2:\n'
               '\t\t\t\t\tcout << h2.asSeconds() << endl;\n'
               '\t\t\t\t\tcout << "Enter your choice: ";\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 3:\n'
               '\t\t\t\t\t++h2;\n'
               '\t\t\t\t\th2.DisplayTime();\n'
               '\t\t\t\t\tcout << h2.asSeconds();\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t\t\tcout << "Enter your choice: ";\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 4:\n'
               '\t\t\t\t\t--h2;\n'
               '\t\t\t\t\th2.DisplayTime();\n'
               '\t\t\t\t\tcout << endl\n'
               '\t\t\t\t\t\t << endl;\n'
               '\t\t\t\t\tcout << "Enter your choice: ";\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tcase 5:\n'
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tmain();\n'
               '\t\t\t\t\tbreak;\n'
               '\t\t\t\tdefault:\n'
               '\t\t\t\t\tsystem("cls");\n'
               '\t\t\t\t\tcout << "Invalid input! Try again." << endl;\n'
               '\t\t\t\t}\n'
               '\n'
               '\t\t\t} while (choice2 != 5);\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t\t\t// for program 2\n'
               '\t\tcase 2:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << "\\t[2] Currency converter" << endl;\n'
               '\t\t\tDollar money;\n'
               '\t\t\tcout << money.getDollar() << endl;\n'
               '\t\t\tcout << money.getMarketSoums() << endl;\n'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2785,
          lineno=220,
          tokens=129,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='\t\t\tcout << money.getofficialSoums() << endl\n'
               '\t\t\t\t << endl;\n'
               '\t\t\tmoney.setRates();\n'
               '\t\t\tcout << money.getDollar() << endl;\n'
               '\t\t\tcout << money.getMarketSoums() << endl;\n'
               '\t\t\tcout << money.getofficialSoums() << endl;\n'
               '\t\t\tcout << "Overloading: " << endl\n'
               '\t\t\t\t << endl;\n'
               '\n'
               '\t\t\tcout << money;\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tcase 3:\n'
               '\t\t{\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "Invalid input! Try again." << endl;\n'
               '\t\t}\n'
               '\t} while (choice != 3);\n'
               '\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2786,
          lineno=246,
          tokens=95,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='showChoicesforMainMenu',
          body='void showChoicesforMainMenu()\n'
               '{\n'
               '\n'
               '\tcout << endl\n'
               '\t\t << endl;\n'
               '\tcout << "\\t\\t\\t   M A I N  M E N U" << endl;\n'
               '\tcout << "\\t\\t\\t1: Day Time " << endl;\n'
               '\tcout << "\\t\\t\\t2: Dollar & Soums" << endl;\n'
               '\tcout << "\\t\\t\\t3: Exit " << endl;\n'
               '\tcout << "\\t\\t\\tEnter your choice : ";\n'
               '}showChoicesforMainMenu()'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2787,
          lineno=258,
          tokens=137,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='showChoicesforMainMenu2',
          body='showChoicesforMainMenu2()void showChoicesforMainMenu2()\n'
               '{\n'
               '\tcout << "\\t[1] First program" << endl;\n'
               '\tcout << "\\t\\t\\t   M A I N  M E N U 2" << endl;\n'
               '\tcout << "\\t\\t\\t1. To Display Time." << endl;\n'
               '\tcout << "\\t\\t\\t2. To Display Time in Seconds." << endl;\n'
               '\tcout << "\\t\\t\\t3. To Increment seconds." << endl;\n'
               '\tcout << "\\t\\t\\t4. To decrements minutes." << endl;\n'
               '\tcout << "\\t\\t\\t5. Exit." << endl;\n'
               '\tcout << "\\t\\t\\tEnter your choice : ";\n'
               '}'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2788,
          lineno=4,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2789,
          lineno=149,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice',
          body='int choice;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2790,
          lineno=151,
          tokens=7,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='hour',
          body='int hour, minute, second;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2791,
          lineno=162,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice2',
          body='int choice2;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2792,
          lineno=217,
          tokens=4,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='money',
          body='Dollar money;'),
 Fragment(document_cs='efd23a2b51962fef6b478ea45af132d9113a319b60bb385609885b13178fab77',
          id=2793,
          lineno=1,
          tokens=44,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: DayTime Dollar\n'
               '  Functions: DayTime Dollar main showChoicesforMainMenu '
               'showChoicesforMainMenu2\n'
               '  Fields: currency hour\n'
               '  Variables: choice choice2 hour money\n'
               '  Using: std\n'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2794,
          lineno=18,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2795,
          lineno=19,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='password',
          body='string password;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2796,
          lineno=20,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='balance',
          body='double balance;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2797,
          lineno=21,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='borrowed',
          body='double borrowed;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2798,
          lineno=24,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CheckBalance',
          body='CheckBalance()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2799,
          lineno=25,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Borrow',
          body='Borrow()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2800,
          lineno=26,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Deposit',
          body='Deposit()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2801,
          lineno=27,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Return',
          body='Return()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2802,
          lineno=28,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Menu',
          body='Menu(accounts oldData[])'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2803,
          lineno=29,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='MainMenu',
          body='MainMenu()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2804,
          lineno=30,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='outData',
          body='outData(accounts oldData[])'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2805,
          lineno=31,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='inputNewData',
          body='inputNewData(accounts data)'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2806,
          lineno=32,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='inputUpgradeData',
          body='inputUpgradeData(accounts data[])'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2807,
          lineno=35,
          tokens=13,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Menu',
          body="void Menu(accounts oldData[]) {\n\tchar num = '1';\n"),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2808,
          lineno=35,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Menu',
          body='Menu(accounts oldData[])'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2809,
          lineno=37,
          tokens=245,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Menu',
          body="\twhile (num != '0')\n"
               '\t{\n'
               '\t\tsystem("CLS");\n'
               '\t\tcout << "\\n          1.Deposit" << endl;\n'
               '\t\tcout << "\\n          2.Borrow money from bank" << endl;\n'
               '\t\tcout << "\\n          3.Return money to bank" << endl << '
               'endl;\n'
               '\t\tcout << "\\n          If you want to quit from this '
               'section please press 0" << endl << endl;\n'
               '\t\tnum = _getch();\n'
               '\t\tswitch (num) {\n'
               '\t\tcase 49:\n'
               '\t\t\tsystem("CLS");\n'
               '\t\t\tDeposit();\n'
               '\t\t\toldData[accountNum].balance = ::balance;\n'
               '\t\t\tinputUpgradeData(oldData);\n'
               '\t\t\tbreak;\n'
               '\t\tcase 50:\n'
               '\t\t\tsystem("CLS");\n'
               '\t\t\tBorrow();\n'
               '\t\t\toldData[accountNum].balance = ::balance;\n'
               '\t\t\toldData[accountNum].borrowed = ::borrow;\n'
               '\t\t\tinputUpgradeData(oldData);\n'
               '\t\t\tbreak;\n'
               '\t\tcase 51:\n'
               '\t\t\tsystem("CLS");\n'
               '\t\t\tReturn();\n'
               '\t\t\toldData[accountNum].balance = ::balance;\n'
               '\t\t\toldData[accountNum].borrowed = ::borrow;\n'
               '\t\t\tinputUpgradeData(oldData);\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t}\n'
               '\tcout << "\\n          ";\n'
               '}'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2810,
          lineno=71,
          tokens=40,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='CheckBalance',
          body='void CheckBalance() {\n'
               '\tsystem("CLS");\n'
               '\tcout << "\\n          You balance: " << ::balance << "$" << '
               'endl << endl;\n'
               '\tcout << "\\n          ";\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2811,
          lineno=71,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='CheckBalance',
          body='CheckBalance()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2812,
          lineno=78,
          tokens=194,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Deposit',
          body='void Deposit()\n'
               '{\n'
               '\tdouble money;\n'
               '\tcout << "\\n          Please enter amount of money - ";\n'
               '\tcin >> money;\n'
               '\tif (money == 0)\n'
               '\t{\n'
               '\t\tcout << "\\n          You entered 0 value so now you are '
               'redirected to the menu" << endl;\n'
               '\t\tSleep(2000);\n'
               '\t}\n'
               '\telse if (money > 0)\n'
               '\t{\n'
               '\t\t::balance = ::balance + money;\n'
               '\t\t\n'
               '\t\tcout << "\\n          Please wait for a while, while we '
               'are transfering money to your account" << endl;\n'
               '\t\tSleep(2000);\n'
               '\t\tcout << "\\n          ";\n'
               '\t\tcout << money << "$ amount of money was added to your '
               'balance" << endl << endl;\n'
               '\t}\n'
               '\telse\n'
               '\t{\n'
               '\t\tcout << "\\n          Error!" << endl;\n'
               '\t\tcout << "\\n          Please enter valid amount of money!" '
               '<< endl << endl;\n'
               '\t}\n'
               '\tcout << "\\n          ";\n'
               '\tsystem("pause");\n'
               '}Deposit()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2813,
          lineno=106,
          tokens=57,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Borrow',
          body='void Borrow()\n'
               '{\n'
               '\tlong double borrow;\n'
               '\tcout << "\\n          In during time in our bank we have " '
               '<< ::available << "$" << endl;\n'
               '\tcout << "\\n          How much do you want to borrow?" << '
               'endl;\n'
               '\tcout << "\\n          ";\n'
               '\tcin >> borrow;\n'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2814,
          lineno=106,
          tokens=3,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Borrow',
          body='Borrow()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2815,
          lineno=113,
          tokens=240,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Borrow',
          body='\tif (borrow == 0)\n'
               '\t{\n'
               '\t\tcout << "\\n          You entered 0 value so now you are '
               'redirected to the menu" << endl << endl;\n'
               '\t\tSleep(2000);\n'
               '\t}\n'
               '\telse if (borrow <= ::available && borrow > 0)\n'
               '\t{\n'
               '\t\tcout << "\\n          We can give you such amount of '
               'money." << endl;\n'
               '\t\tcout << "\\n          Please wait for a while, while we '
               'are transfering money to your account" << endl;\n'
               '\t\tSleep(3000);\n'
               '\t\t::available = ::available - borrow;\n'
               '\t\t::balance = ::balance + borrow;\n'
               '\t\t::borrow = ::borrow + borrow;\n'
               '\t\tcout << "\\n          Money is successfully transfered to '
               'your account." << endl << endl;\n'
               '\t}\n'
               '\telse if (::borrow < 0)\n'
               '\t{\n'
               '\t\tcout << "\\n          Error!" << endl;\n'
               '\t\tcout << "\\n          Please enter valid amount of money!" '
               '<< endl << endl;\n'
               '\t}\n'
               '\telse {\n'
               '\t\tcout << "\\n          We are sorry but we cant give you '
               'such amount of money" << endl << endl;\n'
               '\t}\n'
               '\tcout << "\\n          ";\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2816,
          lineno=140,
          tokens=178,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Return',
          body='void Return()\n'
               '{\n'
               '\tchar choise;\n'
               '\tlong double retr;\n'
               '\tif (::borrow > 0) {\n'
               '\t\tcout << "\\n          You have borrowed - " << ::borrow << '
               '"$" << '
               'endln'
               '\t\tcout << "\\n          If you want to return some amount of '
               'money please press SPACE or press anything to go back to '
               'menu." << endl;\n'
               '\t\tchoise = _getch();\n'
               '\t\tif (choise == 32) {\n'
               '\t\t\tcout << "\\n          How much do you want to return?" '
               '<< endl;\n'
               '\t\t\tcout << "\\n          ";\n'
               '\t\t\tcin >> retr;\n'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2817,
          lineno=140,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='Return',
          body='Return()'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2818,
          lineno=152,
          tokens=219,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='Return',
          body='\t\t\tif (retr == 0)\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "\\n          You entered 0 value so now you '
               'are redirected to the menu" << endl;\n'
               '\t\t\t\tSleep(2000);\n'
               '\t\t\t}\n'
               '\t\t\telse if (retr > 0 && retr <= ::borrow) {\n'
               '\t\t\t\tcout << "\\n          Please wait while we are taking '
               'from your account money back." << endl;\n'
               '\t\t\t\t::borrow = ::borrow - retr;\n'
               '\t\t\t\t::balance = ::balance - retr;\n'
               '\t\t\t\t::available = ::available + retr;\n'
               '\t\t\t\tSleep(3000);\n'
               '\t\t\t\tcout << "\\n          Money is successfully taken from '
               'your account." << endl << endl;\n'
               '\t\t\t}\n'
               '\t\t\telse\n'
               '\t\t\t{\n'
               '\t\t\t\tcout << "\\n          Error!" << endl;\n'
               '\t\t\t\tcout << "\\n          Please enter valid amount of '
               'money!" << endl << endl;\n'
               '\t\t\t}\n'
               '\t\t}\n'
               '\t}\n'
               '\telse {\n'
               '\t\tcout << "\\n          You haven\'t borrowed any money from '
               'us." << endl << endl;\n'
               '\t}\n'
               '\tcout << "\\n          ";\n'
               '\tsystem("pause");\n'
               '}'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2819,
          lineno=179,
          tokens=213,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='outData',
          body='void outData(accounts oldData[]) {\n'
               '\tifstream file;\n'
               '\tfile.open("data.txt");\n'
               '\tif (!file.is_open()) {\n'
               '\t\tcout << "Error\\n";\n'
               '\n'
               '\t}\n'
               '\telse {\n'
               '\t\t//cout << "file is opened\\n";\n'
               '\t\tstring str = "";\n'
               '\t\tint i = 0, j = 0;\n'
               '\t\tstring strArr[4];\n'
               '\t\tdo {\n'
               "\t\t\tgetline(file, str, '|');\n"
               '\t\t\tif (j < 4) {\n'
               '\t\t\t\tstrArr[j] = str;\n'
               '\t\t\t\tj++;\n'
               '\t\t\t}\n'
               '\t\t\telse {\n'
               '\t\t\t\toldData[i].name = strArr[0];\n'
               '\t\t\t\toldData[i].password = strArr[1];\n'
               '\t\t\t\toldData[i].balance = stoi(strArr[2]);\n'
               '\t\t\t\toldData[i].borrowed = stoi(strArr[3]);\n'
               '\t\t\t\t::increaments++;\n'
               '\t\t\t\tj = 0;\n'
               '\t\t\t\tstrArr[j] = str;\n'
               '\t\t\t\tj++;\n'
               '\t\t\t\ti++;\n'
               '\t\t\t}\n'
               '\n'
               '\n'
               '\n'
               '\t\t\t//cout<<str<<"|";\n'
               '\t\t}while (!file.eof());\n'
               '\t}\n'
               '}outData(accounts oldData[])'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2820,
          lineno=215,
          tokens=70,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='inputNewData',
          body='void inputNewData(accounts data) {\n'
               '\tofstream file;\n'
               '\tfile.open("data.txt", ofstream::app);\n'
               '\tfile << data.name;\n'
               '\tfile << "|";\n'
               '\tfile << data.password;\n'
               '\tfile << "|";\n'
               '\tfile << data.balance;\n'
               '\tfile << "|";\n'
               '\tfile << data.borrowed;\n'
               '\tfile << "|";\n'
               '\n'
               '\n'
               '\n'
               '\n'
               '\tfile.close();\n'
               '}inputNewData(accounts data)'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2821,
          lineno=232,
          tokens=96,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='inputUpgradeData',
          body='void inputUpgradeData(accounts data[]) {\n'
               '\tofstream file;\n'
               '\tfile.open("data.txt");\n'
               '\tfor (int i = 0; i <::increaments; i++) {\n'
               '\t\t\n'
               '\t\tfile << data[i].name;\n'
               '\t\tfile << "|";\n'
               '\t\tfile << data[i].password;\n'
               '\t\tfile << "|";\n'
               '\t\tfile << data[i].balance;\n'
               '\t\tfile << "|";\n'
               '\t\tfile << data[i].borrowed;\n'
               '\t\tfile << "|";\n'
               '\t\t\n'
               '\t}\n'
               '\n'
               '\tfile.close();\n'
               '}'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2822,
          lineno=232,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='inputUpgradeData',
          body='inputUpgradeData(accounts data[])'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2823,
          lineno=16,
          tokens=16,
          depth=0,
          parent_id=None,
          category='struct',
          summary=False,
          name='accounts',
          body='struct accounts {\n'
               '\n'
               '\tstring name;\n'
               '\tstring password;\n'
               '\tdouble balance;\n'
               '\tdouble borrowed;\n'
               '}'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2824,
          lineno=11,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2825,
          lineno=12,
          tokens=7,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='accountNum',
          body='int accountNum, increaments;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2826,
          lineno=14,
          tokens=4,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='available',
          body='long double available;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2827,
          lineno=80,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='money',
          body='double money;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2828,
          lineno=108,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='borrow',
          body='long double borrow;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2829,
          lineno=142,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choise',
          body='char choise;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2830,
          lineno=143,
          tokens=4,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='retr',
          body='long double retr;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2831,
          lineno=180,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='file',
          body='ifstream file;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2832,
          lineno=216,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='file',
          body='ofstream file;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2833,
          lineno=233,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='file',
          body='ofstream file;'),
 Fragment(document_cs='f0b2896e7323f64b4f158e049c0aace20bcf87708c4cd21b679c3f317d0c0e6c',
          id=2834,
          lineno=1,
          tokens=62,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Structs: accounts\n'
               '  Functions: Borrow CheckBalance Deposit MainMenu Menu Return '
               'inputNewData inputUpgradeData outData\n'
               '  Fields: balance borrowed name password\n'
               '  Variables: accountNum available borrow choise file money '
               'retr\n'
               '  Using: std\n'
               '  Usages: app available balance borrow increaments\n'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2835,
          lineno=44,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2836,
          lineno=74,
          tokens=13,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setTexture',
          body='setTexture(const Texture* texture, bool resetRect = false)'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2837,
          lineno=88,
          tokens=9,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setTextureRect',
          body='setTextureRect(const IntRect& rect)'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2838,
          lineno=105,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setFillColor',
          body='setFillColor(const Color& color)'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2839,
          lineno=117,
          tokens=8,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setOutlineColor',
          body='setOutlineColor(const Color& color)'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2840,
          lineno=132,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setOutlineThickness',
          body='setOutlineThickness(float thickness)'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2841,
          lineno=146,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getTexture',
          body='getTexture() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2842,
          lineno=156,
          tokens=5,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getTextureRect',
          body='getTextureRect() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2843,
          lineno=166,
          tokens=4,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getFillColor',
          body='getFillColor() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2844,
          lineno=176,
          tokens=5,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getOutlineColor',
          body='getOutlineColor() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2845,
          lineno=186,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getOutlineThickness',
          body='getOutlineThickness() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2846,
          lineno=196,
          tokens=5,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getPointCount',
          body='getPointCount() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2847,
          lineno=213,
          tokens=9,
          depth=5,
          parent_id=None,
          category='function',
          summary=False,
          name='getPoint',
          body='getPoint(std::size_t index) const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2848,
          lineno=227,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getLocalBounds',
          body='getLocalBounds() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2849,
          lineno=248,
          tokens=5,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getGlobalBounds',
          body='getGlobalBounds() const'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2850,
          lineno=266,
          tokens=2,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='update',
          body='update()'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2851,
          lineno=283,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='updateFillColors',
          body='updateFillColors()'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2852,
          lineno=289,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='updateTexCoords',
          body='updateTexCoords()'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2853,
          lineno=295,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='updateOutline',
          body='updateOutline()'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2854,
          lineno=301,
          tokens=4,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='updateOutlineColors',
          body='updateOutlineColors()'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2855,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_SHAPE_HPP',
          body='#define SFML_SHAPE_HPP'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2856,
          lineno=309,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_textureRect',
          body='IntRect        m_textureRect;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2857,
          lineno=310,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_fillColor',
          body='Color          m_fillColor;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2858,
          lineno=311,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_outlineColor',
          body='Color          m_outlineColor;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2859,
          lineno=312,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_outlineThickness',
          body='float          m_outlineThickness;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2860,
          lineno=313,
          tokens=5,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_vertices',
          body='VertexArray    m_vertices;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2861,
          lineno=314,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_outlineVertices',
          body='VertexArray    m_outlineVertices;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2862,
          lineno=315,
          tokens=7,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_insideBounds',
          body='FloatRect      m_insideBounds;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2863,
          lineno=316,
          tokens=6,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_bounds',
          body='FloatRect      m_bounds;'),
 Fragment(document_cs='f2563a4a383f6e8348989b31fc6b9bd3aca36ea2376ce5266fefa1da77693a07',
          id=2864,
          lineno=1,
          tokens=96,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_SHAPE_HPP\n'
               '  Functions: getFillColor getGlobalBounds getLocalBounds '
               'getOutlineColor getOutlineThickness getPoint getPointCount '
               'getTexture getTextureRect setFillColor setOutlineColor '
               'setOutlineThickness setTexture setTextureRect update '
               'updateFillColors updateOutline updateOutlineColors '
               'updateTexCoords\n'
               '  Variables: m_bounds m_fillColor m_insideBounds '
               'm_outlineColor m_outlineThickness m_outlineVertices '
               'm_textureRect m_vertices\n'),
 Fragment(document_cs='f2a7e83a3ab942fa93466321125fce6be11ac0f033a0316d1d2095ce39e68a4f',
          id=2865,
          lineno=5,
          tokens=75,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='sum',
          body='sum(long long int n)long long int sum(long long int n)\n'
               "{ // fuction called 'sum' foe calculating the sum of the "
               'natural numbers\n'
               '\tif (n == 0)\n'
               "\t\treturn 0; // will return '0' when number will come to 0\n"
               '\telse\n'
               '\t\treturn n + sum(n - 1); // using recursion\n'
               '}'),
 Fragment(document_cs='f2a7e83a3ab942fa93466321125fce6be11ac0f033a0316d1d2095ce39e68a4f',
          id=2866,
          lineno=13,
          tokens=80,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main2',
          body='main2()int main2()\n'
               '{\n'
               '\tcout << "\\t\\t\\t***Program to calculate the sum of natural '
               'numbers using recursion***" << endl;\n'
               '\tint num;\n'
               '\tcout << "Please enter the interval: ";\n'
               '\tcin >> num;\t\t\t\t\t\t\t // inpuing the interval of the '
               'numbers\n'
               '\tcout << "The sum is : " << sum(num); // calling function '
               "'sum'\n"
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='f2a7e83a3ab942fa93466321125fce6be11ac0f033a0316d1d2095ce39e68a4f',
          id=2867,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='f2a7e83a3ab942fa93466321125fce6be11ac0f033a0316d1d2095ce39e68a4f',
          id=2868,
          lineno=16,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='num',
          body='int num;'),
 Fragment(document_cs='f2a7e83a3ab942fa93466321125fce6be11ac0f033a0316d1d2095ce39e68a4f',
          id=2869,
          lineno=1,
          tokens=17,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main2 sum\n  Variables: num\n  Using: std\n'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2870,
          lineno=16,
          tokens=159,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='class Security {\n'
               'private:\n'
               '\t// Identifires\n'
               '\tstring Name, Login, Parol, TellNum;\n'
               'public:\n'
               '\n'
               '\t// Defoult Constructor\n'
               '\tSecurity() {\n'
               '\t\tName = "";\n'
               '\t\tLogin = "";\n'
               '\t\tParol = "";\n'
               '\t\tTellNum = "";\n'
               '\t}\n'
               '\n'
               '\t//Function display\n'
               '\tvoid Display() {\n'
               '\t\tcout << "\\t\\t\\tUser Information:" << endl << endl;\n'
               '\t\tcout << "\\t\\tUser Name  : " << Name << endl;\n'
               '\t\tcout << "\\t\\tTelephone  : " << TellNum << endl;\n'
               '\t\tcout << "\\t\\tLogin      : " << Login << endl;\n'
               '\t\tcout << "\\t\\tPassword   : " << Parol << endl;\n'
               '\t}\n'
               '\n'
               '\t// Set Info of User\n'
               '\tvoid SetUser() '),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2871,
          lineno=40,
          tokens=227,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='{\n'
               '\t\tcout << "\\t\\t\\t\\t       Register User:" << endl << '
               'endl;\n'
               '\t\tcout << "\\t\\t\\t\\t        User Name : "; cin >> Name;\n'
               '\t\tcout << "\\t\\t\\t\\t        Telephone : "; cin >> '
               'TellNum;\n'
               '\t\tcout << "\\t\\t\\t\\t        Login     : "; cin >> Login;\n'
               '\t\tcout << "\\t\\t\\t\\t        Password  : "; cin >> Parol;\n'
               '\n'
               '\t\t// Info sended to Memory\n'
               '\t\tName_Memory = Name;\n'
               '\t\tParol_Memory = Parol;\n'
               '\t\tLogin_Memory = Login;\n'
               '\t\tTellNum_Memory = TellNum;\n'
               '\t}\n'
               '\n'
               '\t// Friend Functions\n'
               '\t//Validation Check for parol\n'
               '\tfriend void ValidationParol(Security User) {\n'
               '\t\tif (User.Parol.length() >= 6 && User.Parol.length() <= 15) '
               '{\n'
               '\t\t\tfor (int i = 0; i < User.Parol.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Parol[i])) {  // Number of Upper '
               'Letters\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2872,
          lineno=62,
          tokens=223,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='\t\t\t\tif (islower(User.Parol[i])) {  // Number of Lower '
               'Letters\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Parol[i])) {  // Number of Digits \n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper >= 1 && Num_Upper <= 10 && Num_Lower >= 4 '
               '&& Num_Lower <= 10 && Num_Number >= 2 && Num_Number <= 10) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\t//Validation Check for Name\n'
               '\tfriend void ValidationName(Security User) {\n'
               '\t\tif (User.Name.length() >= 1 && User.Name.length() <= 15) '
               '{\n'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2873,
          lineno=80,
          tokens=240,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='\t\t\tfor (int i = 0; i < User.Name.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (Num_Upper <= 1 && Num_Lower >= 1 && Num_Lower <= 14 '
               '&& Num_Number == 0) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\t//Validation Check for TellNum\n'
               '\tfriend void ValidationTellNum(Security User) {\n'
               '\t\tif (User.TellNum.length() >= 9 && User.TellNum.length() <= '
               '12) {\n'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2874,
          lineno=103,
          tokens=206,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='\t\t\tfor (int i = 0; i < User.TellNum.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper == 0 && Num_Lower == 0 && Num_Number >= 9 '
               '&& Num_Number <= 12) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}\n'
               '\n'
               '}'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2875,
          lineno=19,
          tokens=11,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Name',
          body='string Name, Login, Parol, TellNum;'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2876,
          lineno=23,
          tokens=28,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Security',
          body='Security() {\n'
               '\t\tName = "";\n'
               '\t\tLogin = "";\n'
               '\t\tParol = "";\n'
               '\t\tTellNum = "";\n'
               '\t}Security()'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2877,
          lineno=56,
          tokens=38,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationParol',
          body='ValidationParol(Security User)void ValidationParol(Security '
               'User) {\n'
               '\t\tif (User.Parol.length() >= 6 && User.Parol.length() <= 15) '
               '{\n'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2878,
          lineno=58,
          tokens=236,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationParol',
          body='\t\t\tfor (int i = 0; i < User.Parol.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Parol[i])) {  // Number of Upper '
               'Letters\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Parol[i])) {  // Number of Lower '
               'Letters\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Parol[i])) {  // Number of Digits \n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper >= 1 && Num_Upper <= 10 && Num_Lower >= 4 '
               '&& Num_Lower <= 10 && Num_Number >= 2 && Num_Number <= 10) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2879,
          lineno=78,
          tokens=6,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationName',
          body='ValidationName(Security User)'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2880,
          lineno=78,
          tokens=226,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationName',
          body='void ValidationName(Security User) {\n'
               '\t\tif (User.Name.length() >= 1 && User.Name.length() <= 15) '
               '{\n'
               '\t\t\tfor (int i = 0; i < User.Name.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.Name[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\n'
               '\t\t\tif (Num_Upper <= 1 && Num_Lower >= 1 && Num_Lower <= 14 '
               '&& Num_Number == 0) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2881,
          lineno=101,
          tokens=245,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='ValidationTellNum',
          body='void ValidationTellNum(Security User) {\n'
               '\t\tif (User.TellNum.length() >= 9 && User.TellNum.length() <= '
               '12) {\n'
               '\t\t\tfor (int i = 0; i < User.TellNum.length(); i++) {\n'
               '\t\t\t\tif (isupper(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Upper += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (islower(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Lower += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t\tif (isdigit(User.TellNum[i])) {\n'
               '\t\t\t\t\tNum_Number += 1;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tif (Num_Upper == 0 && Num_Lower == 0 && Num_Number >= 9 '
               '&& Num_Number <= 12) {\n'
               '\t\t\t\tValidation++;\n'
               '\t\t\t\tNum_Upper = 0; Num_Lower = 0; Num_Number = 0;\n'
               '\t\t\t}\n'
               '\t\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t\t}\n'
               '\t\telse { Num_Upper = 0; Num_Lower = 0; Num_Number = 0; }\n'
               '\t}ValidationTellNum(Security User)'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2882,
          lineno=8,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2883,
          lineno=12,
          tokens=10,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Login_Sign',
          body='string Login_Sign, Parol_Sign;'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2884,
          lineno=14,
          tokens=19,
          depth=0,
          parent_id=None,
          category='variable',
          summary=False,
          name='Name_Memory',
          body='string Name_Memory, Login_Memory, Parol_Memory, '
               'TellNum_Memory;'),
 Fragment(document_cs='f40a9ab13359c3dfa31468285171dcbbaaded142b5e64cb6aae7f01250120c22',
          id=2885,
          lineno=1,
          tokens=38,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Security\n'
               '  Functions: Security ValidationName ValidationParol '
               'ValidationTellNum\n'
               '  Fields: Name\n'
               '  Variables: Login_Sign Name_Memory\n'
               '  Using: std\n'),
 Fragment(document_cs='f470587807787544e04b17d0576a5f72c7fe48b1f540c5715652893e4072617e',
          id=2886,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_WINDOWHANDLE_HPP',
          body='#define SFML_WINDOWHANDLE_HPP'),
 Fragment(document_cs='f470587807787544e04b17d0576a5f72c7fe48b1f540c5715652893e4072617e',
          id=2887,
          lineno=35,
          tokens=3,
          depth=2,
          parent_id=None,
          category='struct',
          summary=False,
          name='HWND__',
          body='struct HWND__'),
 Fragment(document_cs='f470587807787544e04b17d0576a5f72c7fe48b1f540c5715652893e4072617e',
          id=2888,
          lineno=43,
          tokens=7,
          depth=4,
          parent_id=None,
          category='typedef',
          summary=False,
          name='HWND__',
          body='typedef HWND__* WindowHandle;'),
 Fragment(document_cs='f470587807787544e04b17d0576a5f72c7fe48b1f540c5715652893e4072617e',
          id=2889,
          lineno=48,
          tokens=6,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='WindowHandle',
          body='typedef unsigned long WindowHandle;'),
 Fragment(document_cs='f470587807787544e04b17d0576a5f72c7fe48b1f540c5715652893e4072617e',
          id=2890,
          lineno=1,
          tokens=25,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Structs: HWND__\n'
               '  Typedefs: HWND__ WindowHandle\n'
               '  Macros: SFML_WINDOWHANDLE_HPP\n'),
 Fragment(document_cs='f603361a50ec7d4ec2c2f7b1262f9c8860e79b6b6c444e503c84c83318fb5682',
          id=2891,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_OPENGL_HPP',
          body='#define SFML_OPENGL_HPP'),
 Fragment(document_cs='f603361a50ec7d4ec2c2f7b1262f9c8860e79b6b6c444e503c84c83318fb5682',
          id=2892,
          lineno=1,
          tokens=8,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Macros: SFML_OPENGL_HPP\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2893,
          lineno=20,
          tokens=110,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Person',
          body='class Person\n'
               '{\n'
               'protected:\n'
               '\tstring name;\n'
               '\tstring tell_number;\n'
               '\n'
               'public:\n'
               '\tvoid setData(string name, string tell_number)\n'
               '\t{\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell_number = tell_number;\n'
               '\t}\n'
               '\n'
               '\tstring getName()\n'
               '\t{\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\tstring getTellNumber()\n'
               '\t{\n'
               '\t\treturn tell_number;\n'
               '\t}\n'
               '\n'
               '\tvoid displayData()\n'
               '\t{\n'
               '\t\tcout << " " << position << ". " << left << setw(10) << '
               'name << "\\t " << tell_number << endl;\n'
               '\t\tposition++;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2894,
          lineno=23,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2895,
          lineno=24,
          tokens=4,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='tell_number',
          body='string tell_number;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2896,
          lineno=15,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='F_First_Program()'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2897,
          lineno=16,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='F_Second_Program()'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2898,
          lineno=17,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2899,
          lineno=50,
          tokens=213,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='void F_First_Program()\n'
               '{\n'
               '\n'
               '\tPerson p; // creating an object of a class Person\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << " C O N T A C T S\\n"\n'
               '\t\t\t << "------------------\\n"\n'
               '\t\t\t << " 1. Add a contact\\n"\n'
               '\t\t\t << " 2. Contacts\\n"\n'
               '\t\t\t << " 0. Back\\n"\n'
               '\t\t\t << " Your choice: \\n";\n'
               '\n'
               '\t\tstring name, tell_number; // contact info which will be '
               'inputted by user\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t// case 49 is for adding a new contact into a list\n'
               '\t\tcase 49:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tofstream out_contacts("contacts", ios::binary | '
               'ios::app); // creating a file | binary file | append mode\n'
               '\n'
               '\t\t\tcout << " ADD TO CONTACT '
               '\\n-----------------------------\\n Enter a contact '
               'information.\\n\\n";\n'
               '\t\t\tcout << " Enter t'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2900,
          lineno=50,
          tokens=5,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='F_First_Program()'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2901,
          lineno=77,
          tokens=160,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='he name: ";\n'
               '\t\t\tcin >> name;\n'
               '\t\t\tcout << " Enter the phone number: ";\n'
               '\t\t\tcin >> tell_number;\n'
               '\n'
               '\t\t\tp.setData(name, tell_number); // setting inputted data\n'
               '\n'
               '\t\t\t// storing the data in file\n'
               '\t\t\tout_contacts.write((char *)&p, sizeof(Person));\n'
               '\t\t\tout_contacts.close(); // closing the file\n'
               '\n'
               '\t\t\tcout << "\\n Successfully added!\\n\\n";\n'
               '\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// case 50 lists all Contacts\n'
               '\t\tcase 50:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\n'
               '\t\t\tifstream in_contacts("contacts", ios::binary); // '
               'getting data from the file\n'
               '\n'
               '\t\t\tcout << " ALL '
               'CONTACTS\\n---------------------------\\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n---------------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2902,
          lineno=103,
          tokens=143,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_First_Program',
          body='\n'
               '\t\t\twhile (in_contacts.read((char *)&p, sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts.close(); // closing the file\n'
               '\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// to back to main menu\n'
               '\t\tcase 48:\n'
               '\t\t{\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << " Your choice is not available in Menu.\\n '
               'Please try one more time\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2903,
          lineno=134,
          tokens=245,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='void F_Second_Program()\n'
               '{\n'
               '\n'
               '\tPerson p; // global object for each cases\n'
               '\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << " C O N T A C T S\\n"\n'
               '\t\t\t << "--------------------------------------\\n"\n'
               '\t\t\t << " 1. Search contact by Phone number\\n"\n'
               '\t\t\t << " 2. Search contact by Name\\n"\n'
               '\t\t\t << " 3. Delete a contact\\n"\n'
               '\t\t\t << " 4. Add a record to a specific position\\n"\n'
               '\t\t\t << " 0. Back\\n"\n'
               '\t\t\t << " Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t// case 49 for searching the contact by Phone Number\n'
               '\t\tcase 49:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << " SEARCH CONTACT BY PHONE '
               'NUMBER\\n-------------------------------\\n";\n'
               '\n'
               '\t\t\tstring search_by_tell_number;\n'
               '\t\t\tbool isFound = 0;\n'
               '\n'
               '\t\t\tifstream in_contacts_list("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\tcout << " List of all Contacts: \\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n-------------------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2904,
          lineno=134,
          tokens=6,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='F_Second_Program()'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2905,
          lineno=165,
          tokens=121,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts_list.read((char *)&p, '
               'sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts_list.close();\n'
               '\n'
               '\t\t\tcout << "\\n Enter the phone number: ";\n'
               '\t\t\tcin >> search_by_tell_number;\n'
               '\n'
               '\t\t\tifstream in_contacts("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\t// in_contacts.seekg(0, ios::end);\n'
               '\n'
               '\t\t\t// cheaking the list for the specific data\n'
               '\t\t\tcout << " Found Contact(s): \\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2906,
          lineno=181,
          tokens=192,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts.read((char *)&p, sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\tif (search_by_tell_number == p.getTellNumber())\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tisFound = 1;\n'
               '\t\t\t\t\tp.displayData();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts.close(); // closing the file\n'
               '\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// case 50 for searching the contact by Name\n'
               '\t\tcase 50:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << " SEARCH CONTACT BY '
               'NAME\\n-----------------------------\\n";\n'
               '\n'
               '\t\t\tstring search_by_name; // for searching the contact with '
               'his name\n'
               '\t\t\tbool isFound = 0;\n'
               '\n'
               '\t\t\tifstream in_contacts_list("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\tcout << " List of all Contacts: \\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n-----------------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2907,
          lineno=209,
          tokens=118,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts_list.read((char *)&p, '
               'sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts_list.close();\n'
               '\n'
               '\t\t\tcout << "\\n Enter the Name: ";\n'
               '\t\t\tcin >> search_by_name;\n'
               '\n'
               '\t\t\tifstream in_contacts("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\t// in_contacts.seekg(0, ios::end);\n'
               '\n'
               '\t\t\t// cheaking the list for the specific data\n'
               '\t\t\tcout << " Found Contact(s): \\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2908,
          lineno=225,
          tokens=170,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts.read((char *)&p, sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\tif (search_by_name == p.getName())\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tisFound = 1;\n'
               '\t\t\t\t\tp.displayData();\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts.close(); // closing the file\n'
               '\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// case 51 for deleting a contact\n'
               '\t\tcase 51:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << " DELETE A CONTACT\\n---------------------\\n";\n'
               '\n'
               '\t\t\tstring tell_number_for_deletion;\n'
               '\n'
               '\t\t\tifstream in_contacts_list("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\tcout << " List of all Contacts: \\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n---------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2909,
          lineno=252,
          tokens=97,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts_list.read((char *)&p, '
               'sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts_list.close();\n'
               '\n'
               '\t\t\tcout << endl;\n'
               '\n'
               '\t\t\tofstream out_temp("temp", ios::binary);\n'
               '\t\t\tifstream in_contacts("contacts", ios::binary);\n'
               '\n'
               '\t\t\tcout << " Enter phone number of contact to be deleted: '
               '";\n'
               '\t\t\tcin >> tell_number_for_deletion;\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2910,
          lineno=267,
          tokens=156,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\n'
               '\t\t\twhile (in_contacts.read((char *)&p, sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\tif (p.getTellNumber() != tell_number_for_deletion)\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tout_temp.write((char *)&p, sizeof(Person));\n'
               '\t\t\t\t}\n'
               '\t\t\t\telse if (p.getTellNumber() == '
               'tell_number_for_deletion)\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tcout << "\\n Successfully deleted\\n";\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'
               '\t\t\tout_temp.close();\n'
               '\t\t\tin_contacts.close();\n'
               '\n'
               '\t\t\tremove("contacts");\n'
               '\t\t\trename("temp", "contacts");\n'
               '\n'
               '\t\t\tifstream in_contacts_list2("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\tcout << "\\n List of all Contacts: \\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n---------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2911,
          lineno=288,
          tokens=154,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts_list2.read((char *)&p, '
               'sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts_list2.close();\n'
               '\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// case 52 for adding a contact to a specific position\n'
               '\t\tcase 52:\n'
               '\t\t{\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tcout << " ADD A RECORD TO A SPECIFIC '
               'POSITION\\n-------------------------------------\\n";\n'
               '\n'
               '\t\t\tifstream in_contacts_list("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\tcout << " List of all Contacts: \\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n-------------------------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2912,
          lineno=310,
          tokens=169,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts_list.read((char *)&p, '
               'sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts_list.close();\n'
               '\t\t\tcout << endl;\n'
               '\n'
               '\t\t\t// position which should be searched\n'
               '\t\t\tint position_of_insertion;\n'
               '\t\t\tcout << " Enter the position: ";\n'
               '\t\t\tcin >> position_of_insertion;\n'
               '\t\t\tposition_of_insertion--;\n'
               '\n'
               '\t\t\t// Adding a new contact\n'
               '\t\t\tstring name, tell_number;\n'
               '\t\t\tcout << " Enter a contact information.\\n";\n'
               '\t\t\tcout << " Enter the name: ";\n'
               '\t\t\tcin >> name;\n'
               '\t\t\tcout << " Enter the phone number: ";\n'
               '\t\t\tcin >> tell_number;\n'
               '\n'
               '\t\t\tofstream out_temp("temp", ios::binary);\n'
               '\t\t\tifstream in_contacts("contacts", ios::binary);\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2913,
          lineno=335,
          tokens=170,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\n'
               '\t\t\twhile (in_contacts.read((char *)&p, sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\tif (position_of_insertion != position)\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tout_temp.write((char *)&p, sizeof(Person));\n'
               '\t\t\t\t}\n'
               '\t\t\t\telse\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tout_temp.write((char *)&p, sizeof(Person));\n'
               '\t\t\t\t\tp.setData(name, tell_number);\n'
               '\t\t\t\t\tout_temp.write((char *)&p, sizeof(Person));\n'
               '\t\t\t\t}\n'
               '\t\t\t\tposition++;\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tout_temp.close();\n'
               '\t\t\tin_contacts.close();\n'
               '\n'
               '\t\t\tremove("contacts");\n'
               '\t\t\trename("temp", "contacts");\n'
               '\n'
               '\t\t\tifstream in_contacts_list2("contacts", ios::binary); // '
               'getting data from the file\n'
               '\t\t\tcout << "\\n List of all Contacts: \\n";\n'
               '\t\t\tcout << " Name            '
               'Phone\\n-------------------------------------\\n";\n'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2914,
          lineno=360,
          tokens=147,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='F_Second_Program',
          body='\t\t\twhile (in_contacts_list2.read((char *)&p, '
               'sizeof(Person)))\n'
               '\t\t\t{\n'
               '\t\t\t\t// displaying the data\n'
               '\t\t\t\tp.displayData();\n'
               '\t\t\t}\n'
               '\t\t\tposition = 1;\n'
               '\t\t\tin_contacts_list2.close();\n'
               '\n'
               '\t\t\tcout << endl;\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// Going back to Main Menu\n'
               '\t\tcase 48:\n'
               '\t\t{\n'
               '\t\t\tmain();\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\n'
               '\t\t// default case\n'
               '\t\tdefault:\n'
               '\t\t{\n'
               '\t\t\tcout << " Your choice is not available in Menu.\\n '
               'Please try one more time\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t}\n'
               '\t\tbreak;\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '}'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2915,
          lineno=391,
          tokens=203,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tfor (int k = 0; k < 1000; k++)\n'
               '\t{\n'
               '\t\tsystem("cls");\n'
               '\t\tcout << " M A I N  M E N U\\n"\n'
               '\t\t\t << "-------------------\\n"\n'
               '\t\t\t << " 1. First Program\\n"\n'
               '\t\t\t << " 2. Second Program\\n"\n'
               '\t\t\t << " Your choice: \\n";\n'
               '\n'
               '\t\tswitch (_getch())\n'
               '\t\t{\n'
               '\t\t// First Program\n'
               '\t\tcase 49:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_First_Program();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t// Second Program\n'
               '\t\tcase 50:\n'
               '\t\t\tsystem("cls");\n'
               '\t\t\tF_Second_Program();\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\tdefault:\n'
               '\t\t\tcout << " Your choice is not available in Menu.\\n '
               'Please try one more time\\n\\n";\n'
               '\t\t\tsystem("pause");\n'
               '\t\t\tbreak;\n'
               '\n'
               '\t\t} // switch\n'
               '\t}\t  // for loop\n'
               '\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2916,
          lineno=391,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2917,
          lineno=12,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2918,
          lineno=65,
          tokens=12,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='name',
          body='string name, tell_number;string name, tell_number;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2919,
          lineno=159,
          tokens=7,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='search_by_tell_number',
          body='string search_by_tell_number;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2920,
          lineno=203,
          tokens=5,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='search_by_name',
          body='string search_by_name;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2921,
          lineno=247,
          tokens=7,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='tell_number_for_deletion',
          body='string tell_number_for_deletion;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2922,
          lineno=320,
          tokens=6,
          depth=8,
          parent_id=None,
          category='variable',
          summary=False,
          name='position_of_insertion',
          body='int position_of_insertion;'),
 Fragment(document_cs='f661a66c565f6fcaf950059de26b7ee1dcd2282d033013c8213dbe5df32e3c58',
          id=2923,
          lineno=1,
          tokens=60,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Person\n'
               '  Functions: F_First_Program F_Second_Program main\n'
               '  Fields: name tell_number\n'
               '  Variables: name position_of_insertion search_by_name '
               'search_by_tell_number tell_number_for_deletion\n'
               '  Using: std\n'
               '  Usages: app binary\n'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2924,
          lineno=42,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2925,
          lineno=48,
          tokens=5,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_AUDIO_API',
          body='class SFML_AUDIO_API'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2926,
          lineno=63,
          tokens=2,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='Span',
          body='Span()'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2927,
          lineno=63,
          tokens=6,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='Span',
          body='Span()\n        {\n\n        }'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2928,
          lineno=75,
          tokens=26,
          depth=8,
          parent_id=None,
          category='function',
          summary=False,
          name='Span',
          body='Span(T off, T len)Span(T off, T len):\n'
               '        offset(off),\n'
               '        length(len)\n'
               '        {\n'
               '\n'
               '        }'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2929,
          lineno=120,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromFile',
          body='openFromFile(const std::string& filename)'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2930,
          lineno=143,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromMemory',
          body='openFromMemory(const void* data, std::size_t sizeInBytes)'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2931,
          lineno=164,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='openFromStream',
          body='openFromStream(InputStream& stream)'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2932,
          lineno=172,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getDuration',
          body='getDuration() const'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2933,
          lineno=189,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getLoopPoints',
          body='getLoopPoints() const'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2934,
          lineno=211,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setLoopPoints',
          body='setLoopPoints(TimeSpan timePoints)'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2935,
          lineno=234,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onSeek',
          body='onSeek(Time timeOffset)'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2936,
          lineno=246,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='onLoop',
          body='onLoop()'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2937,
          lineno=264,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='timeToSamples',
          body='timeToSamples(Time position) const'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2938,
          lineno=274,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='samplesToTime',
          body='samplesToTime(Uint64 samples) const'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2939,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_MUSIC_HPP',
          body='#define SFML_MUSIC_HPP'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2940,
          lineno=87,
          tokens=7,
          depth=5,
          parent_id=None,
          category='typedef',
          summary=False,
          name='TimeSpan',
          body='typedef Span<Time> TimeSpan;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2941,
          lineno=82,
          tokens=3,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='offset',
          body='T offset;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2942,
          lineno=83,
          tokens=3,
          depth=7,
          parent_id=None,
          category='variable',
          summary=False,
          name='length',
          body='T length;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2943,
          lineno=279,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_file',
          body='InputSoundFile     m_file;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2944,
          lineno=280,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_samples',
          body='std::vector<Int16> m_samples;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2945,
          lineno=281,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_mutex',
          body='Mutex              m_mutex;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2946,
          lineno=282,
          tokens=10,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_loopSpan',
          body='Span<Uint64>       m_loopSpan;'),
 Fragment(document_cs='f7075af5444c1d918a4ce9fe5436462cc05561b6a3959c62a74b98767beecbe1',
          id=2947,
          lineno=1,
          tokens=71,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream SFML_AUDIO_API\n'
               '  Typedefs: TimeSpan\n'
               '  Macros: SFML_MUSIC_HPP\n'
               '  Functions: Span getDuration getLoopPoints onLoop onSeek '
               'openFromFile openFromMemory openFromStream samplesToTime '
               'setLoopPoints timeToSamples\n'
               '  Variables: length m_file m_loopSpan m_mutex m_samples '
               'offset\n'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2948,
          lineno=15,
          tokens=63,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Person',
          body='class Person {\n'
               'protected:\n'
               '\tstring name;\n'
               '\tstring tell;\n'
               '\n'
               'public:\n'
               '\t// Constructor for Person class \n'
               '\tPerson(string name, string tell) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell = tell;\n'
               '\t}\n'
               '\n'
               "\t// pure virtual function 'Display' \n"
               '\tvirtual void Display() = 0;\n'
               '}'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2949,
          lineno=34,
          tokens=61,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Security',
          body='class Security : public Person {\n'
               'protected:\n'
               '\tstring login;\n'
               '\tstring password;\n'
               '\n'
               'public:\n'
               '\t// Constructor for Security class \n'
               '\tSecurity(string name, string tell, string login, string '
               'password) : Person(name, tell) {\n'
               '\t\tthis->login = login;\n'
               '\t\tthis->password = password;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2950,
          lineno=50,
          tokens=158,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='User',
          body='class User : public Security { \n'
               'public:\n'
               '\t// Storage\n'
               '\tint Product1_1_User = 0, Product1_2_User = 0, '
               'Product1_3_User = 0;\n'
               '\tint Product2_1_User = 0, Product2_2_User = 0, '
               'Product2_3_User = 0;\n'
               '\tint Product3_1_User = 0, Product3_2_User = 0, '
               'Product3_3_User = 0;\n'
               '\n'
               "\t// Constructor for User's sign up\n"
               '\tUser(string name, string tell, string login, string '
               'password) : Security(name, tell, login, password) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell = tell;\n'
               '\t\tthis->login = login;\n'
               '\t\tthis->password = passw'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2951,
          lineno=62,
          tokens=145,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='User',
          body='ord;\n'
               '\t}\n'
               '\n'
               '\t// get Name of User\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\t// get Tell of User\n'
               '\tstring getTell() {\n'
               '\t\treturn tell;\n'
               '\t}\n'
               '\n'
               '\t// get Login of User\n'
               '\tstring getLogin() {\n'
               '\t\treturn login;\n'
               '\t}\n'
               '\n'
               '\t// get Password of User\n'
               '\tstring getPassword() {\n'
               '\t\treturn password;\n'
               '\t}\n'
               '\n'
               '\t// Display Info\n'
               '\tvoid Display() {\n'
               '\t\tcout << "\\t\\tName     : " << name << endl;\n'
               '\t\tcout << "\\t\\tTell     : " << tell << endl;\n'
               '\t\tcout << "\\t\\tLogin    : " << login << endl;\n'
               '\t\tcout << "\\t\\tPassword : " << password << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2952,
          lineno=96,
          tokens=185,
          depth=0,
          parent_id=None,
          category='class',
          summary=False,
          name='Owner',
          body='class Owner : public Security { \n'
               'public:\n'
               "\t// Constructor for User's sign up\n"
               '\tOwner(string name, string tell, string login, string '
               'password) : Security(name, tell, login, password) { }\n'
               '\t// get Name of User\n'
               '\tstring getName() {\n'
               '\t\treturn name;\n'
               '\t}\n'
               '\n'
               '\t// get Tell of User\n'
               '\tstring getTell() {\n'
               '\t\treturn tell;\n'
               '\t}\n'
               '\n'
               '\t// get Login of User\n'
               '\tstring getLogin() {\n'
               '\t\treturn login;\n'
               '\t}\n'
               '\n'
               '\t// get Password of User\n'
               '\tstring getPassword() {\n'
               '\t\treturn password;\n'
               '\t}\n'
               '\n'
               '\t// Display Info\n'
               '\tvoid Display() {\n'
               '\t\tcout << "\\t\\tName     : " << name << endl;\n'
               '\t\tcout << "\\t\\tTell     : " << tell << endl;\n'
               '\t\tcout << "\\t\\tLogin    : " << login << endl;\n'
               '\t\tcout << "\\t\\tPassword : " << password << endl;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2953,
          lineno=17,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='name',
          body='string name;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2954,
          lineno=18,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='tell',
          body='string tell;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2955,
          lineno=36,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='login',
          body='string login;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2956,
          lineno=37,
          tokens=3,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='password',
          body='string password;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2957,
          lineno=53,
          tokens=28,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Product1_1_User',
          body='int Product1_1_User = 0, Product1_2_User = 0, Product1_3_User '
               '= 0;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2958,
          lineno=54,
          tokens=28,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Product2_1_User',
          body='int Product2_1_User = 0, Product2_2_User = 0, Product2_3_User '
               '= 0;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2959,
          lineno=55,
          tokens=28,
          depth=2,
          parent_id=None,
          category='field',
          summary=False,
          name='Product3_1_User',
          body='int Product3_1_User = 0, Product3_2_User = 0, Product3_3_User '
               '= 0;'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2960,
          lineno=22,
          tokens=31,
          depth=3,
          parent_id=None,
          category='function',
          summary=False,
          name='Person',
          body='Person(string name, string tell)Person(string name, string '
               'tell) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell = tell;\n'
               '\t}'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2961,
          lineno=41,
          tokens=49,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Security',
          body='Security(string name, string tell, string login, string '
               'password) : Person(name, tell) {\n'
               '\t\tthis->login = login;\n'
               '\t\tthis->password = password;\n'
               '\t}Security(string name, string tell, string login, string '
               'password)'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2962,
          lineno=58,
          tokens=67,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='User',
          body='User(string name, string tell, string login, string password) '
               ': Security(name, tell, login, password) {\n'
               '\t\tthis->name = name;\n'
               '\t\tthis->tell = tell;\n'
               '\t\tthis->login = login;\n'
               '\t\tthis->password = password;\n'
               '\t}User(string name, string tell, string login, string '
               'password)'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2963,
          lineno=99,
          tokens=38,
          depth=2,
          parent_id=None,
          category='function',
          summary=False,
          name='Owner',
          body='Owner(string name, string tell, string login, string password) '
               ': Security(name, tell, login, password) { }Owner(string name, '
               'string tell, string login, string password)'),
 Fragment(document_cs='f7302d4f34c551affdc6f149a9d58ac03f746cdfb6ccdbcfc2a3215ab232b37f',
          id=2964,
          lineno=1,
          tokens=39,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: Owner Person Security User\n'
               '  Functions: Owner Person Security User\n'
               '  Fields: Product1_1_User Product2_1_User Product3_1_User '
               'login name password tell\n'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2965,
          lineno=5,
          tokens=145,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main_menu_view1',
          body='main_menu_view1()void main_menu_view1()\n'
               '{\n'
               '\tcout << "\\t\\t\\t\\tSALESMAN & PRODUCTS\\n";\n'
               '\tcout << '
               '"===================================================================================\\n";\n'
               '\tcout << "=           || Salesman 1 || Salesman 2 || Salesman '
               '3 || Salesman 4 || Salesman 5 =\\n";\n'
               '\tcout << '
               '"===================================================================================\\n";\n'
               '\tcout << "= Product 1 ||            ||            '
               '||            ||            ||            =\\n";\n'
               '\tcout << "= Product 2 ||            ||            '
               '||            ||            ||            =\\n";\n'
               '\tcout << "= Product 3 ||            ||            '
               '||            ||            ||            =\\n";\n'
               '\tcout << '
               '"===================================================================================\\n";\n'
               '}'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2966,
          lineno=17,
          tokens=144,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='salesman_sum',
          body='salesman_sum(int a[3][5])void salesman_sum(int a[3][5])\n'
               '{\n'
               '\tint row, col, sum = 0;\n'
               '\t// finding the column sum\n'
               '\tfor (row = 0; row < 5; ++row)\n'
               '\t{\n'
               '\t\tfor (col = 0; col < 3; ++col)\n'
               '\t\t{\n'
               '\n'
               '\t\t\t// Add the element\n'
               '\t\t\tsum = sum + a[col][row];\n'
               '\t\t}\n'
               '\t\t// Print the column sum\n'
               '\t\tcout << "The Total sales of Salesman  " << row + 1 << " is '
               '" << sum << endl;\n'
               '\t\t// Reset the sum\n'
               '\t\tsum = 0;\n'
               '\t}\n'
               '}'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2967,
          lineno=36,
          tokens=116,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='sales_sum',
          body='void sales_sum(int a[3][5])\n'
               '{\n'
               '\tint sum = 0;\n'
               '\tfor (int row = 0; row < 3; row++)\n'
               '\t{\n'
               '\t\tfor (int col = 0; col < 5; col++)\n'
               '\t\t{\n'
               '\t\t\tsum += a[row][col]; // adding all arrays\n'
               '\t\t}\n'
               '\t\tcout << "The Total sales of Product " << row + 1 << " is " '
               '<< sum << endl;\n'
               '\t\tsum = 0; // reset the sum\n'
               '\t}\n'
               '}sales_sum(int a[3][5])'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2968,
          lineno=50,
          tokens=206,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tmain_menu_view1();\n'
               '\tint a[3][5];\n'
               '\t// inputting numbers for the 2D array\n'
               '\tcout << "Please input 5 Sales for Salesman 1, Salesman 2 and '
               'Salesman 3: \\n ";\n'
               '\tfor (int row = 0; row < 3; row++)\n'
               '\t{\n'
               '\t\tfor (int col = 0; col < 5; col++)\n'
               '\t\t{\n'
               '\t\t\tcin >> a[row][col];\n'
               '\t\t}\n'
               '\t}\n'
               '\tcout << "Main table of Salesman and Sales: \\n";\n'
               '\tfor (int row = 0; row < 3; row++)\n'
               '\t{\n'
               '\t\tfor (int col = 0; col < 5; col++)\n'
               '\t\t{\n'
               '\t\t\tcout << a[row][col] << "  ";\n'
               '\t\t}\n'
               '\t\tcout << endl;\n'
               '\t}\n'
               '\tcout << endl;\n'
               '\tsalesman_sum(a);\n'
               '\tcout << endl;\n'
               '\tsales_sum(a);\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2969,
          lineno=3,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2970,
          lineno=19,
          tokens=10,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='row',
          body='int row, col, sum = 0;'),
 Fragment(document_cs='f8542efc161c9d23112d179c5298f0f9f3df8faecce4376d9f44c742a2f6124d',
          id=2971,
          lineno=1,
          tokens=23,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main main_menu_view1 sales_sum salesman_sum\n'
               '  Variables: row\n'
               '  Using: std\n'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2972,
          lineno=41,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2973,
          lineno=70,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(float x, float y)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2974,
          lineno=84,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPosition',
          body='setPosition(const Vector2f& position)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2975,
          lineno=98,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setRotation',
          body='setRotation(float angle)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2976,
          lineno=113,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setScale',
          body='setScale(float factorX, float factorY)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2977,
          lineno=127,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setScale',
          body='setScale(const Vector2f& factors)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2978,
          lineno=145,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setOrigin',
          body='setOrigin(float x, float y)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2979,
          lineno=162,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setOrigin',
          body='setOrigin(const Vector2f& origin)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2980,
          lineno=172,
          tokens=3,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getPosition',
          body='getPosition() const'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2981,
          lineno=184,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getRotation',
          body='getRotation() const'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2982,
          lineno=194,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getScale',
          body='getScale() const'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2983,
          lineno=204,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getOrigin',
          body='getOrigin() const'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2984,
          lineno=223,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='move',
          body='move(float offsetX, float offsetY)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2985,
          lineno=240,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='move',
          body='move(const Vector2f& offset)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2986,
          lineno=255,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='rotate',
          body='rotate(float angle)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2987,
          lineno=274,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='scale',
          body='scale(float factorX, float factorY)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2988,
          lineno=292,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='scale',
          body='scale(const Vector2f& factor)'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2989,
          lineno=302,
          tokens=4,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getTransform',
          body='getTransform() const'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2990,
          lineno=312,
          tokens=5,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getInverseTransform',
          body='getInverseTransform() const'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2991,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_TRANSFORMABLE_HPP',
          body='#define SFML_TRANSFORMABLE_HPP'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2992,
          lineno=320,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_position',
          body='Vector2f          m_position;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2993,
          lineno=321,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_rotation',
          body='float             m_rotation;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2994,
          lineno=322,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_scale',
          body='Vector2f          m_scale;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2995,
          lineno=323,
          tokens=5,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_transform',
          body='mutable Transform m_transform;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2996,
          lineno=324,
          tokens=8,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_transformNeedUpdate',
          body='mutable bool      m_transformNeedUpdate;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2997,
          lineno=325,
          tokens=6,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_inverseTransform',
          body='mutable Transform m_inverseTransform;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2998,
          lineno=326,
          tokens=9,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_inverseTransformNeedUpdate',
          body='mutable bool      m_inverseTransformNeedUpdate;'),
 Fragment(document_cs='f9064008e9e83f20fbbe4f37c4f0d236ddb47a6b6facdadd0a40b325b9d9eb6d',
          id=2999,
          lineno=1,
          tokens=68,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_TRANSFORMABLE_HPP\n'
               '  Functions: getInverseTransform getOrigin getPosition '
               'getRotation getScale getTransform move rotate scale setOrigin '
               'setPosition setRotation setScale\n'
               '  Variables: m_inverseTransform m_inverseTransformNeedUpdate '
               'm_position m_rotation m_scale m_transform '
               'm_transformNeedUpdate\n'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3000,
          lineno=44,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3001,
          lineno=76,
          tokens=28,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='RenderWindow',
          body='RenderWindow(VideoMode mode, const String& title, Uint32 style '
               '= Style::Default, const ContextSettings& settings = '
               'ContextSettings())'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3002,
          lineno=94,
          tokens=14,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='RenderWindow',
          body='RenderWindow(WindowHandle handle, const ContextSettings& '
               'settings = ContextSettings())'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3003,
          lineno=113,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3004,
          lineno=131,
          tokens=7,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='setActive',
          body='setActive(bool active = true)'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3005,
          lineno=158,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='capture',
          body='capture() const'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3006,
          lineno=179,
          tokens=3,
          depth=4,
          parent_id=None,
          category='function',
          summary=False,
          name='onResize',
          body='onResize()'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3007,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_RENDERWINDOW_HPP',
          body='#define SFML_RENDERWINDOW_HPP'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3008,
          lineno=44,
          tokens=67,
          depth=3,
          parent_id=None,
          category='variable',
          summary=False,
          name='RenderWindow',
          body='class SFML_GRAPHICS_API RenderWindow : public Window, public '
               'RenderTarget\n'
               '{\n'
               'public:\n'
               '\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    /// \\brief Default constructor\n'
               '    ///\n'
               "    /// This constructor doesn't actually create the window,\n"
               '    /// use the other constructors or call create() to do so.\n'
               '    ///\n'
               '    '
               '////////////////////////////////////////////////////////////\n'
               '    RenderWindow();'),
 Fragment(document_cs='fac75b8e9b3842792600e5b5104546e3df74993487f4c6b7196e147b95c95f96',
          id=3009,
          lineno=1,
          tokens=41,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_RENDERWINDOW_HPP\n'
               '  Functions: RenderWindow capture getSize onResize setActive\n'
               '  Variables: RenderWindow\n'
               '  Usages: Default\n'),
 Fragment(document_cs='fc8a7bceb7a11e307a8f42e60baee22f0726b4ff44e41d16cfdb4ed6473cbbb5',
          id=3010,
          lineno=4,
          tokens=205,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tint a[15], value, i, pos;\n'
               '\tint size = 10;\n'
               '\tcout << "Enter array elements: ";\n'
               '\tfor (i = 0; i < 10; i++) // input the array elements\n'
               '\t{\n'
               '\t\tcout << "a[ " << i << " ] = ";\n'
               '\t\tcin >> a[i];\n'
               '\t}\n'
               '\t// code for asking the value and the position to be '
               'inserted\n'
               '\tcout << "Enter element to be insert : ";\n'
               '\tcin >> value;\n'
               '\tcout << "At which position: ";\n'
               '\tcin >> pos;\n'
               '\t// changing the place of arrays\n'
               '\tfor (i = 10; i > pos; i--)\n'
               '\t{\n'
               '\t\ta[i] = a[i - 1];\n'
               '\t}\n'
               '\ta[pos] = value;\n'
               '\t// outputing correct araays order\n'
               '\tfor (i = 0; i < size + 1; i++)\n'
               '\t{\n'
               '\t\tcout << a[i] << " ";\n'
               '\t}\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}main()'),
 Fragment(document_cs='fc8a7bceb7a11e307a8f42e60baee22f0726b4ff44e41d16cfdb4ed6473cbbb5',
          id=3011,
          lineno=2,
          tokens=4,
          depth=0,
          parent_id=None,
          category='using',
          summary=False,
          name='std',
          body='using namespace std;'),
 Fragment(document_cs='fc8a7bceb7a11e307a8f42e60baee22f0726b4ff44e41d16cfdb4ed6473cbbb5',
          id=3012,
          lineno=6,
          tokens=11,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='value',
          body='int a[15], value, i, pos;'),
 Fragment(document_cs='fc8a7bceb7a11e307a8f42e60baee22f0726b4ff44e41d16cfdb4ed6473cbbb5',
          id=3013,
          lineno=1,
          tokens=15,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: main\n  Variables: value\n  Using: std\n'),
 Fragment(document_cs='fc8bf63fe58fd3218c3349546ed7a3eaf425688cb3685be5cca502a6aef2e268',
          id=3014,
          lineno=1,
          tokens=160,
          depth=2,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='# Practical Lab Assignment - Const member function, friend '
               'function, composition, friend functions and `this` pointer\n'
               '\n'
               '**Note: In class diagram + for public, - for private.**\n'
               '\n'
               '\n'
               '### Program 1\n'
               'Define a class FullName and Player with the following '
               'specifications:\n'
               '\n'
               '```\n'
               'FullName\n'
               '---\n'
               '- FirstName: string\n'
               '- MiddleName: string\n'
               '- LastName: string\n'
               '---\n'
               '<<constructor>> + FullName()\n'
               '<<destructor>> +~ FullName()\n'
               '+ setFirstName(string)\n'
               '+ getFirstName(): string\n'
               '+ setMiddleName(string)\n'
               '+ getMiddleName(): string\n'
               '+ setLastName(string)\n'
               '+ getLastName(): string\n'
               '```\n'
               '```\n'
               'Player\n'
               '---\n'
               '-Player_ID: string\n'
               '-Player_Name: FullName\n'
               '-Matches_Played: int\n'
               '-Goals_Scored: int\n'
               '---'),
 Fragment(document_cs='fc8bf63fe58fd3218c3349546ed7a3eaf425688cb3685be5cca502a6aef2e268',
          id=3015,
          lineno=32,
          tokens=161,
          depth=7,
          parent_id=None,
          category='documentation',
          summary=False,
          name='',
          body='\n'
               '<<constructor>> + Player()\n'
               '<<destructor>> +~ Player()\n'
               '+ setPlayer_ID(string)\n'
               '+ getPlayer_ID(): string\n'
               '+ setMatches_Played(int)\n'
               '+ getMatches_Played(): int\n'
               '+ setGoals_Scored(int)\n'
               '+ getGoals_Scored(): int\n'
               '+ setPlayer_Name(FullName)\n'
               '+ getPlayer_Name()\n'
               '<<friend>> + Increase_GoalsScored(Player, int)\n'
               '```\n'
               '\n'
               '`Increase_GoalsScored(int)` is friend function for Player: '
               'This function will increase Goal_scored by some int every time '
               'when called.\n'
               '\n'
               'Write C++ create object pointer(through new) to Class Player '
               'and menu driven program to add player details (allocate memory '
               'for object and get player details), display player details, '
               'increase player goal scored delete player from memory.'),
 Fragment(document_cs='fc8bf63fe58fd3218c3349546ed7a3eaf425688cb3685be5cca502a6aef2e268',
          id=3016,
          lineno=1,
          tokens=27,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='# Practical Lab Assignment - Const member function, friend '
               'function, composition, friend functions and `this` pointer\n'
               '### Program 1\n'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3017,
          lineno=45,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3018,
          lineno=64,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='VertexArray',
          body='VertexArray(PrimitiveType type, std::size_t vertexCount = 0)'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3019,
          lineno=72,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getVertexCount',
          body='getVertexCount() const'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3020,
          lineno=115,
          tokens=2,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='clear',
          body='clear()'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3021,
          lineno=129,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='resize',
          body='resize(std::size_t vertexCount)'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3022,
          lineno=137,
          tokens=6,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='append',
          body='append(const Vertex& vertex)'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3023,
          lineno=153,
          tokens=8,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPrimitiveType',
          body='setPrimitiveType(PrimitiveType type)'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3024,
          lineno=161,
          tokens=5,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPrimitiveType',
          body='getPrimitiveType() const'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3025,
          lineno=172,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getBounds',
          body='getBounds() const'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3026,
          lineno=26,
          tokens=6,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_VERTEXARRAY_HPP',
          body='#define SFML_VERTEXARRAY_HPP'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3027,
          lineno=191,
          tokens=7,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_primitiveType',
          body='PrimitiveType       m_primitiveType;'),
 Fragment(document_cs='fd1255c9570ffdbb90f695d15e95c62f630ba342217564970b243af832e15792',
          id=3028,
          lineno=1,
          tokens=51,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: SFML_GRAPHICS_API\n'
               '  Macros: SFML_VERTEXARRAY_HPP\n'
               '  Functions: VertexArray append clear getBounds '
               'getPrimitiveType getVertexCount resize setPrimitiveType\n'
               '  Variables: m_primitiveType\n'
               '  Usages: vector\n'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3029,
          lineno=40,
          tokens=2,
          depth=3,
          parent_id=None,
          category='class',
          summary=False,
          name='InputStream',
          body='class InputStream'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3030,
          lineno=46,
          tokens=6,
          depth=4,
          parent_id=None,
          category='class',
          summary=False,
          name='SFML_GRAPHICS_API',
          body='class SFML_GRAPHICS_API'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3031,
          lineno=72,
          tokens=24,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(unsigned int width, unsigned int height, const Color& '
               'color = Color(0, 0, 0))'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3032,
          lineno=87,
          tokens=15,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='create',
          body='create(unsigned int width, unsigned int height, const Uint8* '
               'pixels)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3033,
          lineno=104,
          tokens=9,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromFile',
          body='loadFromFile(const std::string& filename)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3034,
          lineno=122,
          tokens=14,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromMemory',
          body='loadFromMemory(const void* data, std::size_t size)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3035,
          lineno=139,
          tokens=7,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='loadFromStream',
          body='loadFromStream(InputStream& stream)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3036,
          lineno=156,
          tokens=10,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='saveToFile',
          body='saveToFile(const std::string& filename) const'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3037,
          lineno=164,
          tokens=3,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getSize',
          body='getSize() const'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3038,
          lineno=177,
          tokens=16,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='createMaskFromColor',
          body='createMaskFromColor(const Color& color, Uint8 alpha = 0)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3039,
          lineno=199,
          tokens=43,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='copy',
          body='copy(const Image& source, unsigned int destX, unsigned int '
               'destY, const IntRect& sourceRect = IntRect(0, 0, 0, 0), bool '
               'applyAlpha = false)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3040,
          lineno=215,
          tokens=15,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='setPixel',
          body='setPixel(unsigned int x, unsigned int y, const Color& color)'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3041,
          lineno=232,
          tokens=11,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='getPixel',
          body='getPixel(unsigned int x, unsigned int y) const'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3042,
          lineno=247,
          tokens=5,
          depth=7,
          parent_id=None,
          category='function',
          summary=False,
          name='getPixelsPtr',
          body='getPixelsPtr() const'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3043,
          lineno=253,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='flipHorizontally',
          body='flipHorizontally()'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3044,
          lineno=259,
          tokens=4,
          depth=6,
          parent_id=None,
          category='function',
          summary=False,
          name='flipVertically',
          body='flipVertically()'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3045,
          lineno=26,
          tokens=5,
          depth=1,
          parent_id=None,
          category='macro',
          summary=False,
          name='SFML_IMAGE_HPP',
          body='#define SFML_IMAGE_HPP'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3046,
          lineno=267,
          tokens=10,
          depth=5,
          parent_id=None,
          category='variable',
          summary=False,
          name='m_pixels',
          body='std::vector<Uint8> m_pixels;'),
 Fragment(document_cs='fd75becf9808b974a6bc5c72a8331252568965fddfe0a37e15d96cba6bed2749',
          id=3047,
          lineno=1,
          tokens=58,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Classes: InputStream SFML_GRAPHICS_API\n'
               '  Macros: SFML_IMAGE_HPP\n'
               '  Functions: copy create createMaskFromColor flipHorizontally '
               'flipVertically getPixel getPixelsPtr getSize loadFromFile '
               'loadFromMemory loadFromStream saveToFile setPixel\n'
               '  Variables: m_pixels\n'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3048,
          lineno=3,
          tokens=40,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='int main()\n'
               '{\n'
               '\tsrand(time(0));\n'
               '\t::available = rand() % 200000;\n'
               '\tMainMenu();\n'
               '\n'
               '\tsystem("color 9E");\n'
               '\tsystem("pause");\n'
               '\treturn 0;\n'
               '}'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3049,
          lineno=3,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='main',
          body='main()'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3050,
          lineno=14,
          tokens=2,
          depth=1,
          parent_id=None,
          category='function',
          summary=False,
          name='MainMenu',
          body='MainMenu()'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3051,
          lineno=14,
          tokens=198,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='MainMenu',
          body='void MainMenu()\n'
               '{\n'
               '\tsystem("color 9E");\n'
               '\tchar num;\n'
               '\tchar choice;\n'
               '\tdo\n'
               '\t{\n'
               '\n'
               '\t\tbool checked = false;\n'
               '\t\tstring checkName, checkPassword;\n'
               '\t\taccounts data;\n'
               '\t\taccounts oldData[50];\n'
               '\t\tcout << "\\n          Choose what you want:";\n'
               '\t\tcout << "\\n          1.Sign in";\n'
               '\t\tcout << "\\n          2.Registration";\n'
               '\t\tcout << "\\n          3.Exit";\n'
               '\t\tcout << "\\n          ";\n'
               '\t\tchoice = _getch();\n'
               '\t\tswitch (choice)\n'
               '\t\t{\n'
               '\t\tcase 49:\n'
               '\t\t\toutData(oldData);\n'
               '\t\t\tsystem("CLS");\n'
               '\t\t\tcout << "\\n          Please enter your name:";\n'
               '\t\t\tcout << "\\n          ";\n'
               '\t\t\tcin >> checkName;\n'
               '\t\t\tcout << "\\n          Please enter your password:";\n'
               '\t\t\tcout << "\\n          ";\n'
               '\t\t\tcin >> checkPassword;\n'
               '\t\t\tfor (int i = 0; i < ::increaments; i++)\n'
               '\t\t\t{\n'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3052,
          lineno=45,
          tokens=68,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='MainMenu',
          body='\n'
               '\t\t\t\tif (oldData[i].name == checkName && '
               'oldData[i].password == checkPassword)\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\t::accountNum = i;\n'
               '\t\t\t\t\t::balance = oldData[i].balance;\n'
               '\t\t\t\t\t::borrow = oldData[i].borrowed;\n'
               '\t\t\t\t\tchecked = true;\n'
               '\t\t\t\t}\n'
               '\t\t\t}\n'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3053,
          lineno=54,
          tokens=198,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='MainMenu',
          body='\t\t\tif (checked)\n'
               '\t\t\t{\n'
               '\t\t\t\tdo\n'
               '\t\t\t\t{\n'
               '\t\t\t\t\tsystem("CLS");\n'
               '\t\t\t\t\tcout << "\\n          Hello " << '
               'oldData[::accountNum].name << endl;\n'
               '\t\t\t\t\tcout << "\\n          What would you like to do?" << '
               'endl;\n'
               '\t\t\t\t\tcout << "\\n          1.Actions with card" << endl;\n'
               '\t\t\t\t\tcout << "\\n          2.Check balance" << endl;\n'
               '\t\t\t\t\tcout << "\\n          0.Exit" << endl;\n'
               '\t\t\t\t\tnum = _getch();\n'
               '\t\t\t\t\tswitch (num)\n'
               '\t\t\t\t\t{\n'
               '\t\t\t\t\tcase 48:\n'
               '\t\t\t\t\t\tbreak;\n'
               '\t\t\t\t\tcase 49:\n'
               '\t\t\t\t\t\tMenu(oldData);\n'
               '\t\t\t\t\t\tbreak;\n'
               '\t\t\t\t\tcase 50:\n'
               '\t\t\t\t\t\tCheckBalance();\n'
               '\t\t\t\t\t\tbreak;\n'
               '\t\t\t\t\tdefault:\n'
               '\t\t\t\t\t\tcout << "\\n          Error! Section not found. '
               'Please try one more time." << endl\n'
               '\t\t\t\t\t\t\t << endl;\n'
               '\t\t\t\t\t\tsystem("pause");\n'
               '\t\t\t\t\t\tbreak;\n'
               '\t\t\t\t\t}\n'
               '\n'
               "\t\t\t\t} while (num != '0');\n"
               '\t\t\t}\n'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3054,
          lineno=84,
          tokens=159,
          depth=0,
          parent_id=None,
          category='function',
          summary=False,
          name='MainMenu',
          body='\t\t\telse\n'
               '\t\t\t\tcout << "\\n          Wrong name or password\\n";\n'
               '\t\t\tbreak;\n'
               '\t\tcase 50:\n'
               '\t\t\tsystem("CLS");\n'
               '\t\t\tcout << "\\n          Input your name without space";\n'
               '\t\t\tcout << "\\n          ";\n'
               '\t\t\tcin >> data.name;\n'
               '\t\t\tcout << "\\n          Input your password without '
               'space";\n'
               '\t\t\tcout << "\\n          ";\n'
               '\t\t\tcin >> data.password;\n'
               '\t\t\tdata.balance = 0;\n'
               '\t\t\tdata.borrowed = 0;\n'
               '\t\t\tinputNewData(data);\n'
               '\t\t\tbreak;\n'
               '\t\tcase 51:\n'
               '\t\t\tbreak;\n'
               '\t\tdefault:\n'
               '\t\t\tcout << "\\n          There is no such section";\n'
               '\t\t\tcout << "\\n          Please try one more time";\n'
               '\t\t\tbreak;\n'
               '\t\t}\n'
               '\t} while (choice != 51);\n'
               '\n'
               '\tcout << "\\n          ";\n'
               '}'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3055,
          lineno=17,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='num',
          body='char num;'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3056,
          lineno=18,
          tokens=3,
          depth=2,
          parent_id=None,
          category='variable',
          summary=False,
          name='choice',
          body='char choice;'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3057,
          lineno=23,
          tokens=7,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='checkName',
          body='string checkName, checkPassword;'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3058,
          lineno=24,
          tokens=3,
          depth=4,
          parent_id=None,
          category='variable',
          summary=False,
          name='data',
          body='accounts data;'),
 Fragment(document_cs='fe6760d3489868cb337de16b24396ed23cb0bc9638afb44d2192686b12deddc7',
          id=3059,
          lineno=1,
          tokens=27,
          depth=0,
          parent_id=None,
          category='summary',
          summary=True,
          name='',
          body='  Functions: MainMenu main\n'
               '  Variables: checkName choice data num\n'
               '  Usages: accountNum available balance borrow increaments\n')]