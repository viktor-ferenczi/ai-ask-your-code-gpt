[Hit(uuid='0',
     path='/README.md',
     lineno=1,
     depth=1,
     type='documentation',
     name='',
     text='![](https://assets.vercel.com/image/upload/v1549723846/repositories/hyper/hyper-3-repo-banner.png)\n'
          '\n'
          '<p align="center">\n'
          '  <a aria-label="Vercel logo" href="https://vercel.com">\n'
          '    <img '
          'src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&logo=vercel&labelColor=000000&logoWidth=20">\n'
          '  </a>\n'
          ' </p>\n'
          '  \n'
          '[![Node '
          'CI](https://github.com/vercel/hyper/workflows/Node%20CI/badge.svg?event=push)](https://github.com/vercel/hyper/actions?query=workflow%3A%22Node+CI%22+branch%3Acanary+event%3Apush)\n'
          '[![Changelog '
          '#213](https://img.shields.io/badge/changelog-%23213-lightgrey.svg)](https://changelog.com/213)\n'
          '\n'
          'For more details, head to: https://hyper.is\n'
          '\n'
          '## Project goals\n'
          '\n'
          'The goal of the project is to create a beautiful and extensible '
          'experience for command-line interface users, built on open web '
          'standards. In the beginning, our focus will be primarily around '
          'speed, stability and the development of the correct API for '
          'extension authors.\n'
          '\n'
          'In the future, we anticipate the community will come up with '
          'innovative additions to enhance what could be the simplest, most '
          'powerful and well-tested interface for productivity.\n'
          '\n'
          '## Usage\n'
          '\n'
          '[Download the latest release!](https://hyper.is/#installation)\n'
          '\n'
          '### Linux\n'
          '#### Arch and derivatives\n'
          'Hyper is available in the '
          '[AUR](https://aur.archlinux.org/packages/hyper/). Use an AUR '
          '[package manager](https://wiki.archlinux.org/index.php/AUR_helpers) '
          'e.g. [paru](https://github.com/Morganamilo/paru)\n'
          '\n'
          '```sh\n'
          'paru -S hyper\n'
          '```\n'
          '\n'
          '#### NixOS\n'
          'Hyper is available as [Nix '
          'package](https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/misc/hyper/default.nix), '
          'to install the app run this command:\n'
          '\n'
          '```sh\n'
          'nix-env -i hyper\n'
          '```\n'
          '\n'
          '### macOS\n'
          '\n'
          'Use [Homebrew Cask](https://brew.sh) to download the app by running '
          'these commands:\n'
          '\n'
          '```bash\n'
          'brew update\n'
          'brew install --cask hyper\n'
          '```\n'
          '\n'
          '### Windows\n'
          '\n'
          'Use [chocolatey](https://chocolatey.org/) to install the app by '
          'running the following command (package information can be found '
          '[here](https://chocolatey.org/packages/hyper/)):\n'
          '\n'
          '```bash\n'
          'choco install hyper\n'
          '```\n'
          '\n'
          '**Note:** The version available on [Homebrew '
          'Cask](https://brew.sh), [Chocolatey](https://chocolatey.org), '
          '[Snapcraft](https://snapcraft.io/store) or the '
          '[AUR](https://aur.archlinux.org) may not be the latest. Please '
          'consider downloading it from [here](https://hyper.is/#installation) '
          "if that's the case.\n"
          '\n'
          '## Contribute\n'
          '\n'
          'Regardless of the platform you are working on, you will need to '
          'have Yarn installed. If you have never installed Yarn before, you '
          'can find out how at: https://yarnpkg.com/en/docs/install.\n'
          '\n'
          '1. Install necessary packages:\n'
          '  * Windows\n'
          '    - Be sure to run  `yarn global add windows-build-tools` from an '
          'elevated prompt (as an administrator) to install '
          '`windows-build-tools`.\n'
          '  * macOS\n'
          '    - Once you have installed Yarn, you can skip this section!\n'
          '  * Linux (You can see '
          '[here](https://en.wikipedia.org/wiki/List_of_Linux_distributions) '
          'what your Linux is based on.)\n'
          '    - RPM-based\n'
          '        + `GraphicsMagick`\n'
          '        + `libicns-utils`\n'
          '        + `xz` (Installed by default on some distributions.)\n'
          '    - Debian-based\n'
          '        + `graphicsmagick`\n'
          '        + `icnsutils`\n'
          '        + `xz-utils`\n'
          '2. [Fork](https://help.github.com/articles/fork-a-repo/) this '
          'repository to your own GitHub account and then '
          '[clone](https://help.github.com/articles/cloning-a-repository/) it '
          'to your local device\n'
          '3. Install the dependencies: `yarn`\n'
          '4. Build the code and watch for changes: `yarn run dev`\n'
          '5. To run `hyper`\n'
          '  * `yarn run app` from another terminal tab/window/pane\n'
          '  * If you are using **Visual Studio Code**, select `Launch Hyper` '
          'in debugger configuration to launch a new Hyper instance with '
          'debugger attached.\n'
          "  * If you interrupt `yarn run dev`, you'll need to relaunch it "
          'each time you want to test something. Webpack will watch changes '
          'and will rebuild renderer code when needed (and only what have '
          "changed). You'll just have to relaunch electron by using yarn run "
          'app or VSCode launch task.\n'
          '\n'
          'To make sure that your code works in the finished application, you '
          'can generate the binaries like this:\n'
          '\n'
          '```bash\n'
          'yarn run dist\n'
          '```\n'
          '\n'
          'After that, you will see the binary in the `./dist` folder!\n'
          '\n'
          '#### Known issues that can happen during development\n'
          '\n'
          '##### Error building `node-pty`\n'
          '\n'
          'If after building during development you get an alert dialog '
          'related to `node-pty` issues,\n'
          'make sure its build process is working correctly by running `yarn '
          'run rebuild-node-pty`.\n'
          '\n'
          'If you are on macOS, this typically is related to Xcode issues '
          '(like not having agreed\n'
          'to the Terms of Service by running `sudo xcodebuild` after a fresh '
          'Xcode installation).\n'
          '\n'
          '##### Error with `C++` on macOS when running `yarn`\n'
          '\n'
          'If you are getting compiler errors when running `yarn` add the '
          'environment variable `export CXX=clang++`\n'
          '\n'
          '##### Error with `codesign` on macOS when running `yarn run dist`\n'
          '\n'
          'If you have issues in the `codesign` step when running `yarn run '
          'dist` on macOS, you can temporarily disable code signing locally by '
          'setting\n'
          '`export CSC_IDENTITY_AUTO_DISCOVERY=false` for the current terminal '
          'session.\n'
          '\n'
          '## Related Repositories\n'
          '\n'
          '- [Website](https://github.com/vercel/hyper-site)\n'
          '- [Sample Extension](https://github.com/vercel/hyperpower)\n'
          '- [Sample Theme](https://github.com/vercel/hyperyellow)\n'
          '- [Awesome Hyper](https://github.com/bnb/awesome-hyper)\n',
     tokens=1339,
     score=1.0)]