Fragment(uuid='NORMALIZED-000000',
         path='/GameOfLife.java',
         lineno=1,
         depth=0,
         type='module',
         name='',
         text='import java.awt.*;\n'
              'import java.awt.event.ActionEvent;\n'
              'import java.awt.event.ActionListener;\n'
              'import java.util.*;\n'
              'import javax.swing.*;\n'
              '\n'
              'public class GameOfLife extends JFrame {\n'
              '\n'
              '    JPanel infoPanel;\n'
              '    static JLabel generationLabel;\n'
              '    static JLabel aliveLabel;\n'
              '    static JPanel universePanel;\n'
              '\n'
              '    static boolean paused = false;\n'
              '\n'
              '    static Universe universe = new Universe();\n'
              '    static Evolution evolution = new Evolution();\n'
              '\n'
              '    public GameOfLife() {\n'
              '\n'
              '        super("Game of Life");\n'
              '        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n'
              '        setSize(720, 789);\n'
              '        setLocati')

Fragment(uuid='NORMALIZED-000001',
         path='/GameOfLife.java',
         lineno=1,
         depth=0,
         type='summary',
         name='',
         text='Java: /GameOfLife.java\n'
              '  Classes: Evolution GameOfLife PauseListener RestartListener '
              'Universe UniversePanel\n'
              '  Methods: actionPerformed actionPerformed create evolve '
              'getSize main paintComponent print setGenerations setSize\n'
              '  Usages: BorderFactory BorderFactory BorderFactory Thread '
              'Thread add add add add add add add addActionListener '
              'addActionListener alive aliveLabel aliveLabel aliveLabel '
              'aliveLabel controlPanel controlPanel controlPanel controlPanel '
              'controlPanel create createEtchedBorder createEtchedBorder '
              'createLineBorder drawLine drawLine evolution evolution evolve '
              'fillRect generationLabel generationLabel generationLabel '
              'generationLabel generations getSize getSize getSize getSize '
              'getSize getSize getSize getSize getSize getSize getSize '
              'infoPanel infoPanel infoPanel infoPanel infoPanel infoPanel '
              'inheritIO neighbours neighbours neighbours neighbours '
              'neighbours neighbours neighbours neighbours nextBoolean '
              'paintComponent pauseButton pauseButton print print print '
              'printStackTrace println println println println println repaint '
              'restart restartButton restartButton setBorder setBorder '
              'setBorder setBounds setBounds setBounds setBounds setBounds '
              'setDefaultCloseOperation setGenerations setLayout setLayout '
              'setLayout setLocationRelativeTo setName setName setName setName '
              'setSize setSize setText setText setText setText setText '
              'setVisible size sleep sleep start universe universe universe '
              'universe universe universe universe universe universe universe '
              'universe universe universePanel waitFor\n')

Fragment(uuid='NORMALIZED-000002',
         path='/GameOfLife.java',
         lineno=7,
         depth=0,
         type='class',
         name='GameOfLife',
         text='public class GameOfLife extends JFrame {\n'
              '\n'
              '    JPanel infoPanel;\n'
              '    static JLabel generationLabel;\n'
              '    static JLabel aliveLabel;\n'
              '    static JPanel universePanel;\n'
              '\n'
              '    static boolean paused = false;\n'
              '\n'
              '    static Universe universe = new Universe();\n'
              '    static Evolution evolution = new Evolution();\n'
              '\n'
              '    public GameOfLife() {\n'
              '\n'
              '        super("Game of Life");\n'
              '        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n'
              '        setSize(720, 789);\n'
              '        setLocationRelativeTo(null);\n'
              '        setLayout(null);\n'
              '        setVisible(true);\n'
              '\n'
              '        infoPanel = new JPanel();\n'
              '        infoPanel.setBounds(1, 1, 110, 40);\n'
              '        infoPanel.setLayout(new BoxLayout(infoPanel, '
              'BoxLayout.Y_AXIS));\n'
              '        '
              'infoPanel.setBorder(BorderFactory.createEtchedBorder());\n'
              '        add(infoPanel);\n'
              '\n'
              '        generationLabel = new JLabel();\n'
              '        generationLabel.setName("GenerationLabel");\n'
              '        generationLabel.setText(" Generation #0");\n'
              '        generationLabel.setBounds(0, 0, 400, 20);\n'
              '        infoPanel.add(generationLabel);\n'
              '\n'
              '        aliveLabel = new JLabel();\n'
              '        aliveLabel.setName("AliveLabel");\n'
              '        aliveLabel.setText(" Alive: " + '
              'GameOfLife.universe.alive);\n'
              '        aliveLabel.setBounds(0, 20, 400, 20);\n'
              '        infoPanel.add(aliveLabel);\n'
              '\n'
              '        JPanel controlPanel = new JPanel();\n'
              '        controlPanel.setBounds(111, 1, 121, 40);\n'
              '        controlPanel.setLayout(new BoxLayout(controlPanel, '
              'BoxLayout.X_AXIS));\n'
              '        '
              'controlPanel.setBorder(BorderFactory.createEtchedBorder());\n'
              '        add(controlPanel);\n'
              '\n'
              '        JToggleButton pauseButton = new JToggleButton("||");\n'
              '        pauseButton.setName("PlayToggleButton");\n'
              '        ActionListener pauseListener = new PauseListener();\n'
              '        pauseButton.addActionListener(pauseListener);\n'
              '        controlPanel.add(pauseButton);\n'
              '\n'
              '        JButton restartButton = new JButton("Restart");\n'
              '        restartButton.setName("ResetButton");\n'
              '        ActionListener restartListener = new '
              'RestartListener();\n'
              '        restartButton.addActionListener(restartListener);\n'
              '        controlPanel.add(restartButton);\n'
              '\n'
              '        universePanel = new UniversePanel();\n'
              '        add(universePanel);\n'
              '    }\n'
              '\n'
              '    public static void main(String[] args) {\n'
              '\n'
              '        new GameOfLife();\n'
              '        universe.setSize(35);\n'
              '        evolution.setGenerations(500);\n'
              '\n'
              '        while (true) {\n'
              '\n'
              '            if (!evolution.restart) {\n'
              '\n'
              '                universe.create();\n'
              '                evolution.evolve(universe);\n'
              '\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '}')

Fragment(uuid='NORMALIZED-000003',
         path='/GameOfLife.java',
         lineno=24,
         depth=0,
         type='module',
         name='',
         text='onRelativeTo(null);\n'
              '        setLayout(null);\n'
              '        setVisible(true);\n'
              '\n'
              '        infoPanel = new JPanel();\n'
              '        infoPanel.setBounds(1, 1, 110, 40);\n'
              '        infoPanel.setLayout(new BoxLayout(infoPanel, '
              'BoxLayout.Y_AXIS));\n'
              '        '
              'infoPanel.setBorder(BorderFactory.createEtchedBorder());\n'
              '        add(infoPanel);\n'
              '\n'
              '        generationLabel = new JLabel();\n'
              '        generationLabel.setName("GenerationLabel");\n'
              '        generationLabel.setText(" Generation #0");\n'
              '        generationLabel.setBounds(0, 0, 400, 20);\n'
              '        infoPanel.add(generationLabel);\n'
              '\n'
              '        aliveLabel = new JLabel();\n'
              '        aliveLa')

Fragment(uuid='NORMALIZED-000004',
         path='/GameOfLife.java',
         lineno=41,
         depth=0,
         type='module',
         name='',
         text='bel.setName("AliveLabel");\n'
              '        aliveLabel.setText(" Alive: " + '
              'GameOfLife.universe.alive);\n'
              '        aliveLabel.setBounds(0, 20, 400, 20);\n'
              '        infoPanel.add(aliveLabel);\n'
              '\n'
              '        JPanel controlPanel = new JPanel();\n'
              '        controlPanel.setBounds(111, 1, 121, 40);\n'
              '        controlPanel.setLayout(new BoxLayout(controlPanel, '
              'BoxLayout.X_AXIS));\n'
              '        '
              'controlPanel.setBorder(BorderFactory.createEtchedBorder());\n'
              '        add(controlPanel);\n'
              '\n'
              '        JToggleButton pauseButton = new JToggleButton("||");\n'
              '        pauseButton.setName("PlayToggleButton");\n'
              '        ActionListener pauseListener = new Pau')

Fragment(uuid='NORMALIZED-000005',
         path='/GameOfLife.java',
         lineno=54,
         depth=0,
         type='module',
         name='',
         text='seListener();\n'
              '        pauseButton.addActionListener(pauseListener);\n'
              '        controlPanel.add(pauseButton);\n'
              '\n'
              '        JButton restartButton = new JButton("Restart");\n'
              '        restartButton.setName("ResetButton");\n'
              '        ActionListener restartListener = new '
              'RestartListener();\n'
              '        restartButton.addActionListener(restartListener);\n'
              '        controlPanel.add(restartButton);\n'
              '\n'
              '        universePanel = new UniversePanel();\n'
              '        add(universePanel);\n'
              '    }\n'
              '\n'
              '    public static void main(String[] args) {\n'
              '\n'
              '        new GameOfLife();\n'
              '        universe.setSize(35);\n'
              '        evolution.setGenerations(500);\n')

Fragment(uuid='NORMALIZED-000006',
         path='/GameOfLife.java',
         lineno=68,
         depth=2,
         type='method',
         name='main',
         text='public static void main(String[] args) {\n'
              '\n'
              '        new GameOfLife();\n'
              '        universe.setSize(35);\n'
              '        evolution.setGenerations(500);\n'
              '\n'
              '        while (true) {\n'
              '\n'
              '            if (!evolution.restart) {\n'
              '\n'
              '                universe.create();\n'
              '                evolution.evolve(universe);\n'
              '\n'
              '            }\n'
              '        }\n'
              '    }')

Fragment(uuid='NORMALIZED-000007',
         path='/GameOfLife.java',
         lineno=73,
         depth=0,
         type='module',
         name='',
         text='\n'
              '        while (true) {\n'
              '\n'
              '            if (!evolution.restart) {\n'
              '\n'
              '                universe.create();\n'
              '                evolution.evolve(universe);\n'
              '\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '}\n')

Fragment(uuid='NORMALIZED-000008',
         path='/GameOfLife.java',
         lineno=85,
         depth=0,
         type='module',
         name='',
         text='\n'
              'class Universe {\n'
              '\n'
              '    int size;\n'
              '    static int genNum;\n'
              '    static int alive;\n'
              '    char[][] field;\n'
              '    Random rand;\n'
              '\n'
              '    public Universe() {}\n'
              '\n'
              '    public int getSize() {\n'
              '\n'
              '        return this.size;\n'
              '\n'
              '    }\n'
              '\n'
              '    public void setSize(int size) {\n'
              '\n'
              '        if (size > 0) {\n'
              '\n'
              '            this.size = size;\n'
              '\n'
              '        } else {\n'
              '\n'
              '            System.out.println("Size must be greater than '
              '0.");\n'
              '\n'
              '        }\n'
              '\n'
              '    }\n'
              '\n'
              '    public void create() {\n'
              '\n'
              '        this.genNum = 0;\n'
              '        this.alive = 0;\n'
              '        this.rand = new Random();\n'
              '\n'
              '        this.field = new char[size][size];\n')

Fragment(uuid='NORMALIZED-000009',
         path='/GameOfLife.java',
         lineno=86,
         depth=0,
         type='class',
         name='Universe',
         text='class Universe {\n'
              '\n'
              '    int size;\n'
              '    static int genNum;\n'
              '    static int alive;\n'
              '    char[][] field;\n'
              '    Random rand;\n'
              '\n'
              '    public Universe() {}\n'
              '\n'
              '    public int getSize() {\n'
              '\n'
              '        return this.size;\n'
              '\n'
              '    }\n'
              '\n'
              '    public void setSize(int size) {\n'
              '\n'
              '        if (size > 0) {\n'
              '\n'
              '            this.size = size;\n'
              '\n'
              '        } else {\n'
              '\n'
              '            System.out.println("Size must be greater than '
              '0.");\n'
              '\n'
              '        }\n'
              '\n'
              '    }\n'
              '\n'
              '    public void create() {\n'
              '\n'
              '        this.genNum = 0;\n'
              '        this.alive = 0;\n'
              '        this.rand = new Random();\n'
              '\n'
              '        this.field = new char[size][size];\n'
              '\n'
              '        for (int i = 0; i < this.size; i++) {\n'
              '\n'
              '            for (int j = 0; j < this.size; j++) {\n'
              '\n'
              '                if (this.rand.nextBoolean()) {\n'
              '\n'
              "                    this.field[i][j] = 'O';\n"
              '                    alive++;\n'
              '\n'
              '                } else {\n'
              '\n'
              "                    this.field[i][j] = ' ';\n"
              '\n'
              '                }\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '\n'
              '    public void print() {\n'
              '\n'
              '        GameOfLife.aliveLabel.setText(" Alive: " + '
              'GameOfLife.universe.alive);\n'
              '        System.out.println("Alive: " + this.alive);\n'
              '\n'
              '        for (int i = 0; i < this.size; i++) {\n'
              '\n'
              '            for (int j = 0; j < this.size; j++) {\n'
              '\n'
              '                System.out.print(j == size - 1 ? '
              'this.field[i][j] + "\\n" : this.field[i][j]);\n'
              '\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '}')

Fragment(uuid='NORMALIZED-000010',
         path='/GameOfLife.java',
         lineno=96,
         depth=2,
         type='method',
         name='getSize',
         text='public int getSize() {\n\n        return this.size;\n\n    }')

Fragment(uuid='NORMALIZED-000011',
         path='/GameOfLife.java',
         lineno=102,
         depth=2,
         type='method',
         name='setSize',
         text='public void setSize(int size) {\n'
              '\n'
              '        if (size > 0) {\n'
              '\n'
              '            this.size = size;\n'
              '\n'
              '        } else {\n'
              '\n'
              '            System.out.println("Size must be greater than '
              '0.");\n'
              '\n'
              '        }\n'
              '\n'
              '    }')

Fragment(uuid='NORMALIZED-000012',
         path='/GameOfLife.java',
         lineno=116,
         depth=2,
         type='method',
         name='create',
         text='public void create() {\n'
              '\n'
              '        this.genNum = 0;\n'
              '        this.alive = 0;\n'
              '        this.rand = new Random();\n'
              '\n'
              '        this.field = new char[size][size];\n'
              '\n'
              '        for (int i = 0; i < this.size; i++) {\n'
              '\n'
              '            for (int j = 0; j < this.size; j++) {\n'
              '\n'
              '                if (this.rand.nextBoolean()) {\n'
              '\n'
              "                    this.field[i][j] = 'O';\n"
              '                    alive++;\n'
              '\n'
              '                } else {\n'
              '\n'
              "                    this.field[i][j] = ' ';\n"
              '\n'
              '                }\n'
              '            }\n'
              '        }\n'
              '    }')

Fragment(uuid='NORMALIZED-000013',
         path='/GameOfLife.java',
         lineno=123,
         depth=0,
         type='module',
         name='',
         text='\n        for (int i = 0; i < this.size; i++) {\n')

Fragment(uuid='NORMALIZED-000014',
         path='/GameOfLife.java',
         lineno=125,
         depth=0,
         type='module',
         name='',
         text='\n'
              '            for (int j = 0; j < this.size; j++) {\n'
              '\n'
              '                if (this.rand.nextBoolean()) {\n'
              '\n'
              "                    this.field[i][j] = 'O';\n"
              '                    alive++;\n'
              '\n'
              '                } else {\n'
              '\n'
              "                    this.field[i][j] = ' ';\n"
              '\n'
              '                }\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '\n'
              '    public void print() {\n'
              '\n'
              '        GameOfLife.aliveLabel.setText(" Alive: " + '
              'GameOfLife.universe.alive);\n'
              '        System.out.println("Alive: " + this.alive);\n')

Fragment(uuid='NORMALIZED-000015',
         path='/GameOfLife.java',
         lineno=142,
         depth=2,
         type='method',
         name='print',
         text='public void print() {\n'
              '\n'
              '        GameOfLife.aliveLabel.setText(" Alive: " + '
              'GameOfLife.universe.alive);\n'
              '        System.out.println("Alive: " + this.alive);\n'
              '\n'
              '        for (int i = 0; i < this.size; i++) {\n'
              '\n'
              '            for (int j = 0; j < this.size; j++) {\n'
              '\n'
              '                System.out.print(j == size - 1 ? '
              'this.field[i][j] + "\\n" : this.field[i][j]);\n'
              '\n'
              '            }\n'
              '        }\n'
              '    }')

Fragment(uuid='NORMALIZED-000016',
         path='/GameOfLife.java',
         lineno=146,
         depth=0,
         type='module',
         name='',
         text='\n        for (int i = 0; i < this.size; i++) {\n')

Fragment(uuid='NORMALIZED-000017',
         path='/GameOfLife.java',
         lineno=148,
         depth=0,
         type='module',
         name='',
         text='\n'
              '            for (int j = 0; j < this.size; j++) {\n'
              '\n'
              '                System.out.print(j == size - 1 ? '
              'this.field[i][j] + "\\n" : this.field[i][j]);\n'
              '\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '}\n')

Fragment(uuid='NORMALIZED-000018',
         path='/GameOfLife.java',
         lineno=157,
         depth=0,
         type='module',
         name='',
         text='\n'
              'class Evolution {\n'
              '\n'
              '    int generations;\n'
              '    char[][] field;\n'
              '    boolean restart = false;\n'
              '\n'
              '    public Evolution() {}\n'
              '\n'
              '    public void evolve(Universe universe) {\n'
              '\n'
              '        this.field = new char[universe.size][universe.size];\n'
              '\n'
              '        if (this.generations == 0) {\n'
              '\n'
              '            System.out.println("Generation 0");\n'
              '            GameOfLife.generationLabel.setText(" Generation '
              '0");\n'
              '\n'
              '            universe.print();\n'
              '            return;\n'
              '\n'
              '        }\n'
              '\n'
              '        for (int g = 1; g <= this.generations; g++) {\n'
              '\n'
              '            if (restart) {\n'
              '\n'
              '                restart = false;\n'
              '                break;\n'
              '\n'
              '            }\n'
              '\n'
              '            try {\n')

Fragment(uuid='NORMALIZED-000019',
         path='/GameOfLife.java',
         lineno=158,
         depth=0,
         type='class',
         name='Evolution',
         text='class Evolution {\n'
              '\n'
              '    int generations;\n'
              '    char[][] field;\n'
              '    boolean restart = false;\n'
              '\n'
              '    public Evolution() {}\n'
              '\n'
              '    public void evolve(Universe universe) {\n'
              '\n'
              '        this.field = new char[universe.size][universe.size];\n'
              '\n'
              '        if (this.generations == 0) {\n'
              '\n'
              '            System.out.println("Generation 0");\n'
              '            GameOfLife.generationLabel.setText(" Generation '
              '0");\n'
              '\n'
              '            universe.print();\n'
              '            return;\n'
              '\n'
              '        }\n'
              '\n'
              '        for (int g = 1; g <= this.generations; g++) {\n'
              '\n'
              '            if (restart) {\n'
              '\n'
              '                restart = false;\n'
              '                break;\n'
              '\n'
              '            }\n'
              '\n'
              '            try {\n'
              '\n'
              '                while (GameOfLife.paused) {\n'
              '\n'
              '                    Thread.sleep(1000l);\n'
              '\n'
              '                }\n'
              '\n'
              '                Thread.sleep(50l);\n'
              '                if (g < this.generations) {\n'
              '\n'
              '                    new '
              'ProcessBuilder("cmd","/c","cls").inheritIO().start().waitFor();\n'
              '\n'
              '                }\n'
              '            } catch (Exception e) {\n'
              '\n'
              '                e.printStackTrace();\n'
              '\n'
              '            }\n'
              '\n'
              '            universe.alive = 0;\n'
              '\n'
              '            for (int i = 0; i < universe.getSize(); i++) {\n'
              '\n'
              '                for (int j = 0; j < universe.getSize(); j++) {\n'
              '\n'
              '                    int neighbours = 0;\n'
              '                    int n = i - 1;\n'
              '                    int s = i + 1;\n'
              '                    int w = j - 1;\n'
              '                    int e = j + 1;\n'
              '\n'
              '                    if (i == 0) {\n'
              '\n'
              '                        n = universe.getSize() - 1;\n'
              '\n'
              '                    } else if (i == universe.getSize() - 1) {\n'
              '\n'
              '                        s = 0;\n'
              '\n'
              '                    }\n'
              '\n'
              '                    if (j == 0) {\n'
              '\n'
              '                        w = universe.getSize() - 1;\n'
              '\n'
              '                    } else if (j == universe.getSize() - 1) {\n'
              '\n'
              '                        e = 0;\n'
              '\n'
              '                    }\n'
              '\n'
              "                    neighbours += universe.field[n][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[n][j] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[n][e] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[i][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[i][e] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][j] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][e] == 'O' ? "
              '1 : 0;\n'
              '\n'
              "                    if (universe.field[i][j] == 'O') {\n"
              '\n'
              '                        this.field[i][j] = neighbours < 2 || '
              "neighbours > 3 ? ' ' : 'O';\n"
              '\n'
              '                    } else {\n'
              '\n'
              '                        this.field[i][j] = neighbours == 3 ? '
              "'O' : ' ';\n"
              '\n'
              '                    }\n'
              '                }\n'
              '            }\n'
              '\n'
              '            for (int i = 0; i < universe.getSize(); i++) {\n'
              '\n'
              '                for (int j = 0; j < universe.getSize(); j++) {\n'
              '\n'
              '                    universe.field[i][j] = this.field[i][j];\n'
              '\n'
              "                    if (this.field[i][j] == 'O') {\n"
              '\n'
              '                        universe.alive++;\n'
              '\n'
              '                    }\n'
              '                }\n'
              '            }\n'
              '\n'
              '            universe.genNum = g;\n'
              '            GameOfLife.generationLabel.setText(" Generation #" '
              '+ universe.genNum);\n'
              '            System.out.println("Generation #" + g);\n'
              '            universe.print();\n'
              '            GameOfLife.universePanel.repaint();\n'
              '        }\n'
              '    }\n'
              '\n'
              '    public void setGenerations(int generations) {\n'
              '\n'
              '        if (generations >= 0) {\n'
              '\n'
              '            this.generations = generations;\n'
              '\n'
              '        } else {\n'
              '\n'
              '            System.out.println("Number of generations can\'t be '
              'negative.");\n'
              '\n'
              '        }\n'
              '    }\n'
              '}')

Fragment(uuid='NORMALIZED-000020',
         path='/GameOfLife.java',
         lineno=166,
         depth=2,
         type='method',
         name='evolve',
         text='public void evolve(Universe universe) {\n'
              '\n'
              '        this.field = new char[universe.size][universe.size];\n'
              '\n'
              '        if (this.generations == 0) {\n'
              '\n'
              '            System.out.println("Generation 0");\n'
              '            GameOfLife.generationLabel.setText(" Generation '
              '0");\n'
              '\n'
              '            universe.print();\n'
              '            return;\n'
              '\n'
              '        }\n'
              '\n'
              '        for (int g = 1; g <= this.generations; g++) {\n'
              '\n'
              '            if (restart) {\n'
              '\n'
              '                restart = false;\n'
              '                break;\n'
              '\n'
              '            }\n'
              '\n'
              '            try {\n'
              '\n'
              '                while (GameOfLife.paused) {\n'
              '\n'
              '                    Thread.sleep(1000l);\n'
              '\n'
              '                }\n'
              '\n'
              '                Thread.sleep(50l);\n'
              '                if (g < this.generations) {\n'
              '\n'
              '                    new '
              'ProcessBuilder("cmd","/c","cls").inheritIO().start().waitFor();\n'
              '\n'
              '                }\n'
              '            } catch (Exception e) {\n'
              '\n'
              '                e.printStackTrace();\n'
              '\n'
              '            }\n'
              '\n'
              '            universe.alive = 0;\n'
              '\n'
              '            for (int i = 0; i < universe.getSize(); i++) {\n'
              '\n'
              '                for (int j = 0; j < universe.getSize(); j++) {\n'
              '\n'
              '                    int neighbours = 0;\n'
              '                    int n = i - 1;\n'
              '                    int s = i + 1;\n'
              '                    int w = j - 1;\n'
              '                    int e = j + 1;\n'
              '\n'
              '                    if (i == 0) {\n'
              '\n'
              '                        n = universe.getSize() - 1;\n'
              '\n'
              '                    } else if (i == universe.getSize() - 1) {\n'
              '\n'
              '                        s = 0;\n'
              '\n'
              '                    }\n'
              '\n'
              '                    if (j == 0) {\n'
              '\n'
              '                        w = universe.getSize() - 1;\n'
              '\n'
              '                    } else if (j == universe.getSize() - 1) {\n'
              '\n'
              '                        e = 0;\n'
              '\n'
              '                    }\n'
              '\n'
              "                    neighbours += universe.field[n][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[n][j] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[n][e] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[i][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[i][e] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][j] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][e] == 'O' ? "
              '1 : 0;\n'
              '\n'
              "                    if (universe.field[i][j] == 'O') {\n"
              '\n'
              '                        this.field[i][j] = neighbours < 2 || '
              "neighbours > 3 ? ' ' : 'O';\n"
              '\n'
              '                    } else {\n'
              '\n'
              '                        this.field[i][j] = neighbours == 3 ? '
              "'O' : ' ';\n"
              '\n'
              '                    }\n'
              '                }\n'
              '            }\n'
              '\n'
              '            for (int i = 0; i < universe.getSize(); i++) {\n'
              '\n'
              '                for (int j = 0; j < universe.getSize(); j++) {\n'
              '\n'
              '                    universe.field[i][j] = this.field[i][j];\n'
              '\n'
              "                    if (this.field[i][j] == 'O') {\n"
              '\n'
              '                        universe.alive++;\n'
              '\n'
              '                    }\n'
              '                }\n'
              '            }\n'
              '\n'
              '            universe.genNum = g;\n'
              '            GameOfLife.generationLabel.setText(" Generation #" '
              '+ universe.genNum);\n'
              '            System.out.println("Generation #" + g);\n'
              '            universe.print();\n'
              '            GameOfLife.universePanel.repaint();\n'
              '        }\n'
              '    }')

Fragment(uuid='NORMALIZED-000021',
         path='/GameOfLife.java',
         lineno=190,
         depth=0,
         type='module',
         name='',
         text='\n'
              '                while (GameOfLife.paused) {\n'
              '\n'
              '                    Thread.sleep(1000l);\n'
              '\n'
              '                }\n'
              '\n'
              '                Thread.sleep(50l);\n'
              '                if (g < this.generations) {\n'
              '\n'
              '                    new '
              'ProcessBuilder("cmd","/c","cls").inheritIO().start().waitFor();\n'
              '\n'
              '                }\n'
              '            } catch (Exception e) {\n'
              '\n'
              '                e.printStackTrace();\n'
              '\n'
              '            }\n'
              '\n'
              '            universe.alive = 0;\n')

Fragment(uuid='NORMALIZED-000022',
         path='/GameOfLife.java',
         lineno=210,
         depth=0,
         type='module',
         name='',
         text='\n            for (int i = 0; i < universe.getSize(); i++) {\n')

Fragment(uuid='NORMALIZED-000023',
         path='/GameOfLife.java',
         lineno=212,
         depth=0,
         type='module',
         name='',
         text='\n'
              '                for (int j = 0; j < universe.getSize(); j++) {\n'
              '\n'
              '                    int neighbours = 0;\n'
              '                    int n = i - 1;\n'
              '                    int s = i + 1;\n'
              '                    int w = j - 1;\n'
              '                    int e = j + 1;\n')

Fragment(uuid='NORMALIZED-000024',
         path='/GameOfLife.java',
         lineno=220,
         depth=0,
         type='module',
         name='',
         text='\n'
              '                    if (i == 0) {\n'
              '\n'
              '                        n = universe.getSize() - 1;\n'
              '\n'
              '                    } else if (i == universe.getSize() - 1) {\n'
              '\n'
              '                        s = 0;\n'
              '\n'
              '                    }\n')

Fragment(uuid='NORMALIZED-000025',
         path='/GameOfLife.java',
         lineno=230,
         depth=0,
         type='module',
         name='',
         text='\n'
              '                    if (j == 0) {\n'
              '\n'
              '                        w = universe.getSize() - 1;\n'
              '\n'
              '                    } else if (j == universe.getSize() - 1) {\n'
              '\n'
              '                        e = 0;\n'
              '\n'
              '                    }\n'
              '\n'
              "                    neighbours += universe.field[n][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[n][j] == 'O' ? "
              '1 : 0;\n'
              '                    neighbours += u')

Fragment(uuid='NORMALIZED-000026',
         path='/GameOfLife.java',
         lineno=243,
         depth=0,
         type='module',
         name='',
         text="niverse.field[n][e] == 'O' ? 1 : 0;\n"
              "                    neighbours += universe.field[i][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[i][e] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][w] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][j] == 'O' ? "
              '1 : 0;\n'
              "                    neighbours += universe.field[s][e] == 'O' ? "
              '1 : 0;\n')

Fragment(uuid='NORMALIZED-000027',
         path='/GameOfLife.java',
         lineno=249,
         depth=0,
         type='module',
         name='',
         text='\n'
              "                    if (universe.field[i][j] == 'O') {\n"
              '\n'
              '                        this.field[i][j] = neighbours < 2 || '
              "neighbours > 3 ? ' ' : 'O';\n"
              '\n'
              '                    } else {\n'
              '\n'
              '                        this.field[i][j] = neighbours == 3 ? '
              "'O' : ' ';\n"
              '\n'
              '                    }\n'
              '                }\n'
              '            }\n')

Fragment(uuid='NORMALIZED-000028',
         path='/GameOfLife.java',
         lineno=261,
         depth=0,
         type='module',
         name='',
         text='\n            for (int i = 0; i < universe.getSize(); i++) {\n')

Fragment(uuid='NORMALIZED-000029',
         path='/GameOfLife.java',
         lineno=263,
         depth=0,
         type='module',
         name='',
         text='\n'
              '                for (int j = 0; j < universe.getSize(); j++) {\n'
              '\n'
              '                    universe.field[i][j] = this.field[i][j];\n')

Fragment(uuid='NORMALIZED-000030',
         path='/GameOfLife.java',
         lineno=267,
         depth=0,
         type='module',
         name='',
         text='\n'
              "                    if (this.field[i][j] == 'O') {\n"
              '\n'
              '                        universe.alive++;\n'
              '\n'
              '                    }\n'
              '                }\n'
              '            }\n'
              '\n'
              '            universe.genNum = g;\n'
              '            GameOfLife.generationLabel.setText(" Generation #" '
              '+ universe.genNum);\n'
              '            System.out.println("Generation #" + g);\n'
              '            universe.print();\n'
              '            GameOfLife.universePanel.repaint();\n'
              '        }\n'
              '    }\n'
              '\n'
              '    public void setGenerations(int generations) {\n')

Fragment(uuid='NORMALIZED-000031',
         path='/GameOfLife.java',
         lineno=284,
         depth=2,
         type='method',
         name='setGenerations',
         text='public void setGenerations(int generations) {\n'
              '\n'
              '        if (generations >= 0) {\n'
              '\n'
              '            this.generations = generations;\n'
              '\n'
              '        } else {\n'
              '\n'
              '            System.out.println("Number of generations can\'t be '
              'negative.");\n'
              '\n'
              '        }\n'
              '    }')

Fragment(uuid='NORMALIZED-000032',
         path='/GameOfLife.java',
         lineno=285,
         depth=0,
         type='module',
         name='',
         text='\n'
              '        if (generations >= 0) {\n'
              '\n'
              '            this.generations = generations;\n'
              '\n'
              '        } else {\n'
              '\n'
              '            System.out.println("Number of generations can\'t be '
              'negative.");\n'
              '\n'
              '        }\n'
              '    }\n'
              '}\n')

Fragment(uuid='NORMALIZED-000033',
         path='/GameOfLife.java',
         lineno=297,
         depth=0,
         type='module',
         name='',
         text='\n'
              'class UniversePanel extends JPanel {\n'
              '\n'
              '    public UniversePanel() {\n'
              '\n'
              '        '
              'setBorder(BorderFactory.createLineBorder(Color.black));\n'
              '        setBounds(1, 41, 700, 700);\n'
              '\n'
              '    }\n'
              '\n'
              '    public void paintComponent(Graphics g) {\n'
              '\n'
              '        super.paintComponent(g);\n')

Fragment(uuid='NORMALIZED-000034',
         path='/GameOfLife.java',
         lineno=298,
         depth=0,
         type='class',
         name='UniversePanel',
         text='class UniversePanel extends JPanel {\n'
              '\n'
              '    public UniversePanel() {\n'
              '\n'
              '        '
              'setBorder(BorderFactory.createLineBorder(Color.black));\n'
              '        setBounds(1, 41, 700, 700);\n'
              '\n'
              '    }\n'
              '\n'
              '    public void paintComponent(Graphics g) {\n'
              '\n'
              '        super.paintComponent(g);\n'
              '\n'
              '        for (int i = 1; i < GameOfLife.universe.getSize(); i++) '
              '{\n'
              '\n'
              '            g.drawLine(20 * i, 0, 20 * i, 900);\n'
              '            g.drawLine(0, 20 * i, 905, 20 * i);\n'
              '\n'
              '        }\n'
              '\n'
              '        for (int i = 0; i < GameOfLife.universe.getSize(); i++) '
              '{\n'
              '\n'
              '            for (int j = 0; j < GameOfLife.universe.getSize(); '
              'j++) {\n'
              '\n'
              "                if (GameOfLife.universe.field[i][j] == 'O') {\n"
              '\n'
              '                    g.fillRect(j * 20, i * 20, 20, 20);\n'
              '\n'
              '                }\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '}')

Fragment(uuid='NORMALIZED-000035',
         path='/GameOfLife.java',
         lineno=307,
         depth=2,
         type='method',
         name='paintComponent',
         text='public void paintComponent(Graphics g) {\n'
              '\n'
              '        super.paintComponent(g);\n'
              '\n'
              '        for (int i = 1; i < GameOfLife.universe.getSize(); i++) '
              '{\n'
              '\n'
              '            g.drawLine(20 * i, 0, 20 * i, 900);\n'
              '            g.drawLine(0, 20 * i, 905, 20 * i);\n'
              '\n'
              '        }\n'
              '\n'
              '        for (int i = 0; i < GameOfLife.universe.getSize(); i++) '
              '{\n'
              '\n'
              '            for (int j = 0; j < GameOfLife.universe.getSize(); '
              'j++) {\n'
              '\n'
              "                if (GameOfLife.universe.field[i][j] == 'O') {\n"
              '\n'
              '                    g.fillRect(j * 20, i * 20, 20, 20);\n'
              '\n'
              '                }\n'
              '            }\n'
              '        }\n'
              '    }')

Fragment(uuid='NORMALIZED-000036',
         path='/GameOfLife.java',
         lineno=310,
         depth=0,
         type='module',
         name='',
         text='\n'
              '        for (int i = 1; i < GameOfLife.universe.getSize(); i++) '
              '{\n'
              '\n'
              '            g.drawLine(20 * i, 0, 20 * i, 900);\n'
              '            g.drawLine(0, 20 * i, 905, 20 * i);\n'
              '\n'
              '        }\n')

Fragment(uuid='NORMALIZED-000037',
         path='/GameOfLife.java',
         lineno=317,
         depth=0,
         type='module',
         name='',
         text='\n'
              '        for (int i = 0; i < GameOfLife.universe.getSize(); i++) '
              '{\n')

Fragment(uuid='NORMALIZED-000038',
         path='/GameOfLife.java',
         lineno=319,
         depth=0,
         type='module',
         name='',
         text='\n'
              '            for (int j = 0; j < GameOfLife.universe.getSize(); '
              'j++) {\n'
              '\n'
              "                if (GameOfLife.universe.field[i][j] == 'O') {\n"
              '\n'
              '                    g.fillRect(j * 20, i * 20, 20, 20);\n'
              '\n'
              '                }\n'
              '            }\n'
              '        }\n'
              '    }\n'
              '}\n')

Fragment(uuid='NORMALIZED-000039',
         path='/GameOfLife.java',
         lineno=331,
         depth=0,
         type='module',
         name='',
         text='\n'
              'class PauseListener implements ActionListener {\n'
              '\n'
              '    public void actionPerformed(ActionEvent e) {\n'
              '\n'
              '        GameOfLife.paused = !GameOfLife.paused;\n'
              '\n'
              '    }\n'
              '}\n')

Fragment(uuid='NORMALIZED-000040',
         path='/GameOfLife.java',
         lineno=332,
         depth=0,
         type='class',
         name='PauseListener',
         text='class PauseListener implements ActionListener {\n'
              '\n'
              '    public void actionPerformed(ActionEvent e) {\n'
              '\n'
              '        GameOfLife.paused = !GameOfLife.paused;\n'
              '\n'
              '    }\n'
              '}')

Fragment(uuid='NORMALIZED-000041',
         path='/GameOfLife.java',
         lineno=334,
         depth=2,
         type='method',
         name='actionPerformed',
         text='public void actionPerformed(ActionEvent e) {\n'
              '\n'
              '        GameOfLife.paused = !GameOfLife.paused;\n'
              '\n'
              '    }')

Fragment(uuid='NORMALIZED-000042',
         path='/GameOfLife.java',
         lineno=340,
         depth=0,
         type='module',
         name='',
         text='\n'
              'class RestartListener implements ActionListener {\n'
              '\n'
              '    public void actionPerformed(ActionEvent e) {\n'
              '\n'
              '        GameOfLife.evolution.restart = true;\n'
              '\n'
              '    }\n'
              '}\n')

Fragment(uuid='NORMALIZED-000043',
         path='/GameOfLife.java',
         lineno=341,
         depth=0,
         type='class',
         name='RestartListener',
         text='class RestartListener implements ActionListener {\n'
              '\n'
              '    public void actionPerformed(ActionEvent e) {\n'
              '\n'
              '        GameOfLife.evolution.restart = true;\n'
              '\n'
              '    }\n'
              '}')

Fragment(uuid='NORMALIZED-000044',
         path='/GameOfLife.java',
         lineno=343,
         depth=2,
         type='method',
         name='actionPerformed',
         text='public void actionPerformed(ActionEvent e) {\n'
              '\n'
              '        GameOfLife.evolution.restart = true;\n'
              '\n'
              '    }')

Fragment(uuid='NORMALIZED-000045',
         path='/README.md',
         lineno=1,
         depth=0,
         type='documentation',
         name='',
         text='# Game of Life\n'
              '\n'
              'My 8th project from Hyperskill.\n'
              '\n'
              "This program provides Conway's Game of Life experience with a "
              'GUI.\n'
              '\n'
              'Features:\n'
              '- window with graphical representation of the grid (35x35) and '
              'the current "universe" state;\n'
              '- generation number and alive cells counters;\n'
              '- pause and restart buttons.\n')

Fragment(uuid='NORMALIZED-000046',
         path='/README.md',
         lineno=1,
         depth=0,
         type='summary',
         name='',
         text='# Game of Life\n')